{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport axios from '../../axios'; // 설정된 axios 인스턴스 불러오기\n\nconst state = {\n  deficiencies: [],\n  deficiencyNutrients: []\n};\nconst mutations = {\n  setDeficiencies(state, deficiencies) {\n    state.deficiencies = deficiencies;\n    console.log('State deficiencies set:', state.deficiencies); // 디버깅 로그 추가\n  },\n  setDeficiencyNutrients(state, deficiencyNutrients) {\n    state.deficiencyNutrients = deficiencyNutrients;\n  },\n  addDeficiency(state, deficiency) {\n    state.deficiencies.push(deficiency);\n  },\n  addDeficiencyNutrient(state, deficiencyNutrient) {\n    state.deficiencyNutrients.push(deficiencyNutrient);\n  },\n  removeDeficiency(state, id) {\n    state.deficiencies = state.deficiencies.filter(d => d.deficiencyId !== id);\n  },\n  removeDeficiencyNutrient(state, id) {\n    state.deficiencyNutrients = state.deficiencyNutrients.filter(dn => dn.deficiencyNutrientId !== id);\n  }\n};\nconst actions = {\n  async fetchDeficiencies({\n    commit\n  }) {\n    try {\n      const response = await axios.get('/api/deficiencies/list');\n      const deficiencies = response.data;\n      const data = response.data;\n\n      // deficiencies 배열 생성\n      this.deficiencies = [...new Set(data.map(item => item.deficiency_name))].map(name => ({\n        deficiencyName: name\n      }));\n      console.log('Fetched deficiencies:', this.deficiencies);\n      console.log('Fetched deficiencies:', deficiencies); // 디버깅 로그 추가\n      commit('setDeficiencies', deficiencies);\n    } catch (error) {\n      console.error('Error fetching deficiencies:', error);\n    }\n  },\n  async createDeficiency({\n    commit\n  }, deficiency) {\n    try {\n      const response = await axios.post('/admin/deficiencies/create', deficiency);\n      if (response.status === 200) {\n        commit('addDeficiency', response.data);\n      } else {\n        throw new Error('Failed to create deficiency');\n      }\n    } catch (error) {\n      console.error('Error creating deficiency:', error);\n      throw error;\n    }\n  },\n  async createDeficiencyNutrient({\n    commit\n  }, deficiencyNutrient) {\n    try {\n      const response = await axios.post('/admin/deficiency-nutrients/create', deficiencyNutrient);\n      if (response.status === 200) {\n        commit('addDeficiencyNutrient', response.data);\n      } else {\n        throw new Error('Failed to create deficiency nutrient');\n      }\n    } catch (error) {\n      console.error('Error creating deficiency nutrient:', error);\n      throw error;\n    }\n  },\n  async deleteDeficiency({\n    commit\n  }, id) {\n    try {\n      const response = await axios.delete(`/admin/deficiencies/delete/${id}`);\n      if (response.status === 200) {\n        commit('removeDeficiency', id);\n      } else {\n        throw new Error('Failed to delete deficiency');\n      }\n    } catch (error) {\n      console.error('Error deleting deficiency:', error);\n      throw error;\n    }\n  },\n  async deleteDeficiencyNutrient({\n    commit\n  }, id) {\n    try {\n      const response = await axios.delete(`/admin/deficiency-nutrients/delete/${id}`);\n      if (response.status === 200) {\n        commit('removeDeficiencyNutrient', id);\n      } else {\n        throw new Error('Failed to delete deficiency nutrient');\n      }\n    } catch (error) {\n      console.error('Error deleting deficiency nutrient:', error);\n      throw error;\n    }\n  }\n};\nconst getters = {\n  deficiencies: state => state.deficiencies,\n  deficiencyNutrients: state => state.deficiencyNutrients\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["axios","state","deficiencies","deficiencyNutrients","mutations","setDeficiencies","console","log","setDeficiencyNutrients","addDeficiency","deficiency","push","addDeficiencyNutrient","deficiencyNutrient","removeDeficiency","id","filter","d","deficiencyId","removeDeficiencyNutrient","dn","deficiencyNutrientId","actions","fetchDeficiencies","commit","response","get","data","Set","map","item","deficiency_name","name","deficiencyName","error","createDeficiency","post","status","Error","createDeficiencyNutrient","deleteDeficiency","delete","deleteDeficiencyNutrient","getters","namespaced"],"sources":["C:/Users/woori/IdeaProjects/pillgood_v2/src/frontend/src/store/modules/deficiencyStore.js"],"sourcesContent":["import axios from '../../axios'; // 설정된 axios 인스턴스 불러오기\n\nconst state = {\n  deficiencies: [],\n  deficiencyNutrients: []\n};\n\nconst mutations = {\n  setDeficiencies(state, deficiencies) {\n    state.deficiencies = deficiencies;\n    console.log('State deficiencies set:', state.deficiencies); // 디버깅 로그 추가\n  },\n  setDeficiencyNutrients(state, deficiencyNutrients) {\n    state.deficiencyNutrients = deficiencyNutrients;\n  },\n  addDeficiency(state, deficiency) {\n    state.deficiencies.push(deficiency);\n  },\n  addDeficiencyNutrient(state, deficiencyNutrient) {\n    state.deficiencyNutrients.push(deficiencyNutrient);\n  },\n  removeDeficiency(state, id) {\n    state.deficiencies = state.deficiencies.filter(d => d.deficiencyId !== id);\n  },\n  removeDeficiencyNutrient(state, id) {\n    state.deficiencyNutrients = state.deficiencyNutrients.filter(dn => dn.deficiencyNutrientId !== id);\n  }\n};\n\nconst actions = {\n  async fetchDeficiencies({ commit }) {\n    try {\n      const response = await axios.get('/api/deficiencies/list');\n      const deficiencies = response.data;\n      const data = response.data;\n\n      // deficiencies 배열 생성\n      this.deficiencies = [...new Set(data.map(item => item.deficiency_name))].map(name => ({ deficiencyName: name }));\n      console.log('Fetched deficiencies:', this.deficiencies);\n      console.log('Fetched deficiencies:', deficiencies); // 디버깅 로그 추가\n      commit('setDeficiencies', deficiencies);\n    } catch (error) {\n      console.error('Error fetching deficiencies:', error);\n    }\n  },\n  async createDeficiency({ commit }, deficiency) {\n    try {\n      const response = await axios.post('/admin/deficiencies/create', deficiency);\n      if (response.status === 200) {\n        commit('addDeficiency', response.data);\n      } else {\n        throw new Error('Failed to create deficiency');\n      }\n    } catch (error) {\n      console.error('Error creating deficiency:', error);\n      throw error;\n    }\n  },\n  async createDeficiencyNutrient({ commit }, deficiencyNutrient) {\n    try {\n      const response = await axios.post('/admin/deficiency-nutrients/create', deficiencyNutrient);\n      if (response.status === 200) {\n        commit('addDeficiencyNutrient', response.data);\n      } else {\n        throw new Error('Failed to create deficiency nutrient');\n      }\n    } catch (error) {\n      console.error('Error creating deficiency nutrient:', error);\n      throw error;\n    }\n  },\n  async deleteDeficiency({ commit }, id) {\n    try {\n      const response = await axios.delete(`/admin/deficiencies/delete/${id}`);\n      if (response.status === 200) {\n        commit('removeDeficiency', id);\n      } else {\n        throw new Error('Failed to delete deficiency');\n      }\n    } catch (error) {\n      console.error('Error deleting deficiency:', error);\n      throw error;\n    }\n  },\n  async deleteDeficiencyNutrient({ commit }, id) {\n    try {\n      const response = await axios.delete(`/admin/deficiency-nutrients/delete/${id}`);\n      if (response.status === 200) {\n        commit('removeDeficiencyNutrient', id);\n      } else {\n        throw new Error('Failed to delete deficiency nutrient');\n      }\n    } catch (error) {\n      console.error('Error deleting deficiency nutrient:', error);\n      throw error;\n    }\n  }\n};\n\nconst getters = {\n  deficiencies: state => state.deficiencies,\n  deficiencyNutrients: state => state.deficiencyNutrients\n};\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}