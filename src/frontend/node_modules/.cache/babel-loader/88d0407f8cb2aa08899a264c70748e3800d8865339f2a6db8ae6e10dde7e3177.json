{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2ccff530\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-container box-shadow\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"payment-title text-melon\"\n}, \"결제 승인\", -1));\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  class: \"order-summary\"\n};\nconst _hoisted_5 = {\n  key: 1\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"로딩 중...\", -1));\nconst _hoisted_7 = [_hoisted_6];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, $data.currentOrder ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"p\", null, \"주문번호: \" + _toDisplayString($data.currentOrder.orderNo), 1), _createElementVNode(\"p\", null, \"수령인: \" + _toDisplayString($data.currentOrder.recipient), 1), _createElementVNode(\"p\", null, \"총 금액: \" + _toDisplayString($options.totalAmount) + \" 원\", 1)]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.approvePayment && $options.approvePayment(...args)),\n    class: \"btn btn-green\"\n  }, \"결제 승인\")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _hoisted_7))]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_hoisted_6","_createElementBlock","_hoisted_1","_hoisted_2","$data","currentOrder","_hoisted_3","_hoisted_4","_toDisplayString","orderNo","recipient","$options","totalAmount","onClick","_cache","args","approvePayment","_hoisted_5","_hoisted_7"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\ApprovePayment.vue"],"sourcesContent":["<template>\n    <div class=\"main-container box-shadow\">\n      <h4 class=\"payment-title text-melon\">결제 승인</h4>\n      <div v-if=\"currentOrder\">\n        <div class=\"order-summary\">\n          <p>주문번호: {{ currentOrder.orderNo }}</p>\n          <p>수령인: {{ currentOrder.recipient }}</p>\n          <p>총 금액: {{ totalAmount }} 원</p>\n          <!-- 기타 필요한 주문 정보를 추가하세요 -->\n        </div>\n        <button @click=\"approvePayment\" class=\"btn btn-green\">결제 승인</button>\n      </div>\n      <div v-else>\n        <p>로딩 중...</p>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { mapState, mapGetters, mapActions } from 'vuex';\n  import axios from 'axios';\n  \n  export default {\n    name: 'ApprovePayment',\n    data() {\n      return {\n        currentOrder: JSON.parse(localStorage.getItem('currentOrder')) || null\n      };\n    },\n    computed: {\n      ...mapGetters('member', ['memberId']),\n      ...mapState('order', {\n        user: state => state.userProfile,\n      }),\n      totalAmount() {\n        return this.currentOrder ? this.currentOrder.totalAmount : 0; // 현재 주문 정보에서 최종 금액을 가져옵니다.\n      }\n    },\n    async created() {\n      if (!this.currentOrder) {\n        await this.fetchUserProfile(); // 사용자 정보를 가져옵니다.\n        await this.fetchOrderDetails(); // 주문 정보를 가져옵니다.\n      }\n      console.log('Current Order in ApprovePayment (created):', this.currentOrder); // 로깅 추가\n    },\n    methods: {\n      ...mapActions('order', ['fetchUserProfile', 'fetchOrderDetails']),\n      async approvePayment() {\n        try {\n          const response = await axios.post('/api/payment/confirm-billing', {\n            amount: this.totalAmount,\n            orderId: this.currentOrder.orderNo, // 현재 주문 번호를 사용합니다.\n            orderName: '토스 프라임 구독',\n            customerKey: this.memberId,\n            customerEmail: this.user.email,\n            customerName: this.user.name\n          });\n          if (response.status === 200) {\n            localStorage.setItem('paymentResponse', JSON.stringify(response.data)); // response 값을 localStorage에 저장\n            this.$router.push({ name: 'BillingSuccess' }); // 결제 성공 페이지로 이동\n          } else {\n            console.error('결제 승인 요청 실패:', response);\n          }\n        } catch (error) {\n          console.error('결제 승인 요청 중 오류 발생:', error);\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .main-container {\n    max-width: 600px;\n    margin: 0 auto;\n    padding: 20px;\n    background-color: #fff;\n    border-radius: 8px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  }\n  \n  .payment-title {\n    font-size: 1.5rem;\n    font-weight: bold;\n    margin-bottom: 20px;\n  }\n  \n  .order-summary {\n    margin-bottom: 20px;\n    font-size: 1rem;\n  }\n  \n  .order-summary p {\n    margin: 10px 0;\n  }\n  \n  .btn {\n    display: block;\n    width: 100%;\n    padding: 10px;\n    background-color: #5cb85c;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 1.2rem;\n    text-align: center;\n  }\n  \n  .btn:hover {\n    background-color: #4cae4c;\n  }\n  \n  .loading {\n    font-size: 1.2rem;\n    text-align: center;\n    margin-top: 20px;\n  }\n  </style>\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAA2B;gEACpCC,mBAAA,CAA+C;EAA3CD,KAAK,EAAC;AAA0B,GAAC,OAAK;;EAFhDE,GAAA;AAAA;;EAIaF,KAAK,EAAC;AAAe;;EAJlCE,GAAA;AAAA;gEAaQD,mBAAA,CAAc,WAAX,SAAO;oBAAVE,UAAc,C;;uBAZlBC,mBAAA,CAcM,OAdNC,UAcM,GAbJC,UAA+C,EACpCC,KAAA,CAAAC,YAAY,I,cAAvBJ,mBAAA,CAQM,OAXZK,UAAA,GAIQR,mBAAA,CAKM,OALNS,UAKM,GAJJT,mBAAA,CAAuC,WAApC,QAAM,GAAAU,gBAAA,CAAGJ,KAAA,CAAAC,YAAY,CAACI,OAAO,OAChCX,mBAAA,CAAwC,WAArC,OAAK,GAAAU,gBAAA,CAAGJ,KAAA,CAAAC,YAAY,CAACK,SAAS,OACjCZ,mBAAA,CAAgC,WAA7B,QAAM,GAAAU,gBAAA,CAAGG,QAAA,CAAAC,WAAW,IAAG,IAAE,K,GAG9Bd,mBAAA,CAAoE;IAA3De,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,QAAA,CAAAK,cAAA,IAAAL,QAAA,CAAAK,cAAA,IAAAD,IAAA,CAAc;IAAElB,KAAK,EAAC;KAAgB,OAAK,E,oBAE7DI,mBAAA,CAEM,OAdZgB,UAAA,EAAAC,UAAA,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}