{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport axios from 'axios';\nimport { mapActions, mapGetters } from 'vuex';\nimport '../assets/styles.css';\nexport default {\n  name: 'ProductList',\n  data() {\n    return {\n      products: [],\n      nutrients: [],\n      deficiencies: [],\n      targets: [],\n      selectedNutrient: null,\n      selectedDeficiency: null,\n      selectedTarget: null,\n      activeTab: 'all',\n      sortType: 'all'\n    };\n  },\n  computed: {\n    ...mapGetters('product', ['topSellingProducts', 'latestProducts']),\n    filteredProducts() {\n      let filtered = this.products.filter(product => product.active === true);\n      if (this.activeTab === 'nutrients' && this.selectedNutrient) {\n        filtered = filtered.filter(product => product.nutrientId === this.selectedNutrient);\n      } else if (this.activeTab === 'deficiencies' && this.selectedDeficiency) {\n        const relevantNutrientIds = this.deficiencies.filter(d => d.deficiencyName === this.selectedDeficiency).map(d => d.nutrientId);\n        filtered = filtered.filter(product => relevantNutrientIds.includes(product.nutrientId));\n      } else if (this.activeTab === 'targets' && this.selectedTarget) {\n        filtered = filtered.filter(product => product.target === this.selectedTarget);\n      }\n      const searchQuery = this.$route.query.search?.toLowerCase() || '';\n      if (searchQuery) {\n        filtered = filtered.filter(product => product.productName.toLowerCase().includes(searchQuery));\n      }\n      if (this.sortType === 'latest') {\n        return this.latestProducts;\n      } else if (this.sortType === 'topSelling') {\n        return this.topSellingProducts;\n      }\n      return filtered;\n    },\n    uniqueDeficiencies() {\n      const deficiencyNames = this.deficiencies.map(d => d.deficiencyName);\n      return [...new Set(deficiencyNames)];\n    }\n  },\n  methods: {\n    ...mapActions('product', ['fetchTopSellingProducts', 'fetchLatestProducts']),\n    async fetchProducts() {\n      try {\n        const response = await axios.get('/api/products/list');\n        this.products = response.data;\n        console.log('제품리스트조회:', this.products);\n        for (let product of this.products) {\n          await this.fetchProductImage(product);\n        }\n        this.targets = [...new Set(this.products.map(product => product.target))].filter(Boolean);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    },\n    async fetchNutrients() {\n      try {\n        const response = await axios.get('/api/nutrients/list');\n        this.nutrients = response.data;\n      } catch (error) {\n        console.error('Error fetching nutrients:', error);\n      }\n    },\n    async fetchDeficiencies() {\n      try {\n        const response = await axios.get('/api/deficiencies/nutrients');\n        this.deficiencies = response.data;\n      } catch (error) {\n        console.error('Error fetching deficiencies:', error);\n      }\n    },\n    async fetchProductImage(product) {\n      try {\n        const response = await axios.get(`/api/products/detail/${product.productId}`);\n        product.productImage = this.extractFirstImage(response.data.productImage);\n      } catch (error) {\n        console.error(`Error fetching image for product ID ${product.productId}:`, error);\n        product.productImage = null;\n      }\n    },\n    viewProduct(productId) {\n      this.$router.push({\n        name: 'ProductDetail',\n        params: {\n          id: productId\n        }\n      });\n    },\n    extractFirstImage(htmlString) {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(htmlString, 'text/html');\n      const imgTag = doc.querySelector('img');\n      return imgTag ? imgTag.src : null;\n    },\n    filterByNutrient(nutrient) {\n      this.selectedNutrient = nutrient;\n      this.selectedDeficiency = null;\n      this.selectedTarget = null;\n    },\n    filterByDeficiency(deficiency) {\n      this.selectedDeficiency = deficiency;\n      this.selectedNutrient = null;\n      this.selectedTarget = null;\n    },\n    filterByTarget(target) {\n      this.selectedTarget = target;\n      this.selectedNutrient = null;\n      this.selectedDeficiency = null;\n    },\n    clearFilters() {\n      this.selectedNutrient = null;\n      this.selectedDeficiency = null;\n      this.selectedTarget = null;\n    },\n    setActiveTab(tab) {\n      this.activeTab = tab;\n      this.clearFilters();\n      this.$router.push({\n        name: 'ProductList',\n        query: {\n          tab\n        }\n      });\n    },\n    async sortProducts() {\n      if (this.sortType === 'latest') {\n        await this.fetchLatestProducts();\n      } else if (this.sortType === 'topSelling') {\n        await this.fetchTopSellingProducts();\n      }\n    }\n  },\n  created() {\n    this.fetchProducts();\n    this.fetchNutrients();\n    this.fetchDeficiencies();\n\n    // 쿼리 매개변수로부터 탭을 설정\n    const tab = this.$route.query.tab;\n    if (tab) {\n      this.activeTab = tab;\n    }\n    // 쿼리 매개변수로부터 정렬 유형을 설정\n    const sort = this.$route.query.sort;\n    if (sort) {\n      this.sortType = sort;\n      this.sortProducts();\n    }\n  }\n};","map":{"version":3,"names":["axios","mapActions","mapGetters","name","data","products","nutrients","deficiencies","targets","selectedNutrient","selectedDeficiency","selectedTarget","activeTab","sortType","computed","filteredProducts","filtered","filter","product","active","nutrientId","relevantNutrientIds","d","deficiencyName","map","includes","target","searchQuery","$route","query","search","toLowerCase","productName","latestProducts","topSellingProducts","uniqueDeficiencies","deficiencyNames","Set","methods","fetchProducts","response","get","console","log","fetchProductImage","Boolean","error","fetchNutrients","fetchDeficiencies","productId","productImage","extractFirstImage","viewProduct","$router","push","params","id","htmlString","parser","DOMParser","doc","parseFromString","imgTag","querySelector","src","filterByNutrient","nutrient","filterByDeficiency","deficiency","filterByTarget","clearFilters","setActiveTab","tab","sortProducts","fetchLatestProducts","fetchTopSellingProducts","created","sort"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\ProductList.vue"],"sourcesContent":["<template>\n  <div class=\"album py-5 bg-body-tertiary\">\n    <div class=\"container\">\n      <h2 class=\"text-melon\">Product List</h2>\n      <!-- Tabs -->\n      <div class=\"tabs\">\n        <button @click=\"setActiveTab('all')\" :class=\"{ active: activeTab === 'all' }\">전체</button>\n        <button @click=\"setActiveTab('nutrients')\" :class=\"{ active: activeTab === 'nutrients' }\">성분별</button>\n        <button @click=\"setActiveTab('deficiencies')\" :class=\"{ active: activeTab === 'deficiencies' }\">고민별</button>\n        <button @click=\"setActiveTab('targets')\" :class=\"{ active: activeTab === 'targets' }\">대상별</button>\n      </div>\n      <!-- Sort Dropdown -->\n      <div class=\"sort-dropdown\">\n        <label for=\"sortSelect\">정렬:</label>\n        <select id=\"sortSelect\" v-model=\"sortType\" @change=\"sortProducts\">\n          <option value=\"all\">전체</option>\n          <option value=\"latest\">최신순</option>\n          <option value=\"topSelling\">판매순</option>\n        </select>\n      </div>\n      <!-- Nutrient Filter Buttons -->\n      <div v-if=\"activeTab === 'nutrients'\" class=\"btn-container\">\n        <button v-for=\"nutrient in nutrients\" :key=\"nutrient.nutrientId\" @click=\"filterByNutrient(nutrient.nutrientId)\" class=\"btn btn-gray\">\n          {{ nutrient.nutrientName }}\n        </button>\n      </div>\n      <!-- Deficiency Filter Buttons -->\n      <div v-if=\"activeTab === 'deficiencies'\" class=\"btn-container\">\n        <button v-for=\"deficiency in uniqueDeficiencies\" :key=\"deficiency\" @click=\"filterByDeficiency(deficiency)\" class=\"btn btn-gray\">\n          {{ deficiency }}\n        </button>\n      </div>\n      <!-- Target Filter Buttons -->\n      <div v-if=\"activeTab === 'targets'\" class=\"btn-container\">\n        <button v-for=\"target in targets\" :key=\"target\" @click=\"filterByTarget(target)\" class=\"btn btn-gray\">\n          {{ target }}\n        </button>\n      </div>\n      <!-- Tab Content -->\n      <div class=\"row\">\n        <div class=\"col-lg-2 col-md-4 col-sm-6 text-center mb-3\" v-for=\"product in filteredProducts\" :key=\"product.productId\">\n          <div class=\"card\">\n            <img @click=\"viewProduct(product.productId)\" :src=\"product.productImage\" class=\"card-img-top\" alt=\"Product Image\">\n            <div class=\"card-body\">\n              <h6 class=\"card-title\">{{ product.productName }}</h6>\n              <p class=\"card-text\">{{ product.price }}원</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { mapActions, mapGetters } from 'vuex';\nimport '../assets/styles.css';\n\nexport default {\n  name: 'ProductList',\n  data() {\n    return {\n      products: [],\n      nutrients: [],\n      deficiencies: [],\n      targets: [],\n      selectedNutrient: null,\n      selectedDeficiency: null,\n      selectedTarget: null,\n      activeTab: 'all',\n      sortType: 'all'\n    };\n  },\n  computed: {\n    ...mapGetters('product', ['topSellingProducts', 'latestProducts']),\n    filteredProducts() {\n      let filtered = this.products.filter(product => product.active === true);\n\n      if (this.activeTab === 'nutrients' && this.selectedNutrient) {\n        filtered = filtered.filter(product => product.nutrientId === this.selectedNutrient);\n      } else if (this.activeTab === 'deficiencies' && this.selectedDeficiency) {\n        const relevantNutrientIds = this.deficiencies\n          .filter(d => d.deficiencyName === this.selectedDeficiency)\n          .map(d => d.nutrientId);\n        filtered = filtered.filter(product => relevantNutrientIds.includes(product.nutrientId));\n      } else if (this.activeTab === 'targets' && this.selectedTarget) {\n        filtered = filtered.filter(product => product.target === this.selectedTarget);\n      }\n\n      const searchQuery = this.$route.query.search?.toLowerCase() || '';\n      if (searchQuery) {\n        filtered = filtered.filter(product =>\n          product.productName.toLowerCase().includes(searchQuery)\n        );\n      }\n\n      if (this.sortType === 'latest') {\n        return this.latestProducts;\n      } else if (this.sortType === 'topSelling') {\n        return this.topSellingProducts;\n      }\n\n      return filtered;\n    },\n    uniqueDeficiencies() {\n      const deficiencyNames = this.deficiencies.map(d => d.deficiencyName);\n      return [...new Set(deficiencyNames)];\n    }\n  },\n  methods: {\n    ...mapActions('product', ['fetchTopSellingProducts', 'fetchLatestProducts']),\n    async fetchProducts() {\n      try {\n        const response = await axios.get('/api/products/list');\n        this.products = response.data;\n        console.log('제품리스트조회:', this.products)\n\n        for (let product of this.products) {\n          await this.fetchProductImage(product);\n        }\n\n        this.targets = [...new Set(this.products.map(product => product.target))].filter(Boolean);\n\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    },\n    async fetchNutrients() {\n      try {\n        const response = await axios.get('/api/nutrients/list');\n        this.nutrients = response.data;\n      } catch (error) {\n        console.error('Error fetching nutrients:', error);\n      }\n    },\n    async fetchDeficiencies() {\n      try {\n        const response = await axios.get('/api/deficiencies/nutrients');\n        this.deficiencies = response.data;\n      } catch (error) {\n        console.error('Error fetching deficiencies:', error);\n      }\n    },\n    async fetchProductImage(product) {\n      try {\n        const response = await axios.get(`/api/products/detail/${product.productId}`);\n        product.productImage = this.extractFirstImage(response.data.productImage);\n      } catch (error) {\n        console.error(`Error fetching image for product ID ${product.productId}:`, error);\n        product.productImage = null;\n      }\n    },\n    viewProduct(productId) {\n      this.$router.push({ name: 'ProductDetail', params: { id: productId } });\n    },\n    extractFirstImage(htmlString) {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(htmlString, 'text/html');\n      const imgTag = doc.querySelector('img');\n      return imgTag ? imgTag.src : null;\n    },\n    filterByNutrient(nutrient) {\n      this.selectedNutrient = nutrient;\n      this.selectedDeficiency = null;\n      this.selectedTarget = null;\n    },\n    filterByDeficiency(deficiency) {\n      this.selectedDeficiency = deficiency;\n      this.selectedNutrient = null;\n      this.selectedTarget = null;\n    },\n    filterByTarget(target) {\n      this.selectedTarget = target;\n      this.selectedNutrient = null;\n      this.selectedDeficiency = null;\n    },\n    clearFilters() {\n      this.selectedNutrient = null;\n      this.selectedDeficiency = null;\n      this.selectedTarget = null;\n    },\n    setActiveTab(tab) {\n      this.activeTab = tab;\n      this.clearFilters();\n      this.$router.push({ name: 'ProductList', query: { tab } });\n    },\n    async sortProducts() {\n      if (this.sortType === 'latest') {\n        await this.fetchLatestProducts();\n      } else if (this.sortType === 'topSelling') {\n        await this.fetchTopSellingProducts();\n      }\n    }\n  },\n  created() {\n    this.fetchProducts();\n    this.fetchNutrients();\n    this.fetchDeficiencies();\n    \n    // 쿼리 매개변수로부터 탭을 설정\n    const tab = this.$route.query.tab;\n    if (tab) {\n      this.activeTab = tab;\n    }\n    // 쿼리 매개변수로부터 정렬 유형을 설정\n    const sort = this.$route.query.sort;\n    if (sort) {\n      this.sortType = sort;\n      this.sortProducts();\n    }\n  }\n};\n</script>\n\n<style scoped>\n.album {\n  padding: 2rem 0;\n}\n\n.card {\n  cursor: pointer;\n  transition: transform 0.2s;\n}\n\n.card:hover {\n  transform: scale(1.05);\n}\n\n.card-img-top {\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n}\n\n.card-title {\n  font-size: 1rem;\n  margin-top: 10px;\n}\n\n.card-text {\n  font-size: 1rem;\n  font-weight: bold;\n  color: #d9534f;\n  margin-top: 5px;\n}\n\n.btn {\n  margin-bottom: 20px;\n}\n\n.active {\n  background-color: #0056b3;\n  color: white;\n}\n\n.tabs {\n  display: flex;\n  /* justify-content: space-around; */\n  margin-bottom: 20px;\n  border-bottom: 1px solid #ccc;\n}\n\n.tabs button {\n  flex: 1;\n  padding: 10px 0;\n  background-color: transparent;\n  border: none;\n  border-bottom: 2px solid transparent;\n  cursor: pointer;\n  transition: border-color 0.3s;\n  color: #aaa;\n  min-width: 100px;\n}\n\n.tabs button.active {\n  border-color: #5cb85c;\n  color: #5cb85c;\n}\n\n.tab-content {\n  background-color: #ffffff;\n  padding: 20px;\n  border-radius: 8px;\n  width: calc(100% + 40px); /* Extend width to cover side padding */\n  margin-left: -20px; /* Offset margin to align with parent container */\n  margin-right: -20px; /* Offset margin to align with parent container */\n}\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}