{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport Chart from 'chart.js/auto';\nimport axios from 'axios';\nexport default {\n  name: 'TopProductsChart',\n  setup() {\n    const chartCanvas = ref(null);\n    const chartInstance = ref(null);\n    const fetchTopProducts = async () => {\n      const response = await axios.get('/api/surveys/top-products');\n      return response.data;\n    };\n    onMounted(async () => {\n      const topProducts = await fetchTopProducts();\n      createChart(topProducts);\n    });\n    const createChart = topProducts => {\n      const ctx = chartCanvas.value.getContext('2d');\n      const labels = topProducts.map(product => product.product_name);\n      const data = topProducts.map(product => product.total_quantity_sold);\n      if (chartInstance.value) {\n        chartInstance.value.destroy();\n      }\n      chartInstance.value = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: '판매량',\n            data: data,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          indexAxis: 'y',\n          // 가로 막대형 차트로 변경\n          scales: {\n            x: {\n              beginAtZero: true,\n              ticks: {\n                stepSize: 1\n              },\n              title: {\n                display: true,\n                text: '판매량 (개)'\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: '제품'\n              }\n            }\n          }\n        }\n      });\n    };\n    return {\n      chartCanvas\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","Chart","axios","name","setup","chartCanvas","chartInstance","fetchTopProducts","response","get","data","topProducts","createChart","ctx","value","getContext","labels","map","product","product_name","total_quantity_sold","destroy","type","datasets","label","backgroundColor","borderColor","borderWidth","options","indexAxis","scales","x","beginAtZero","ticks","stepSize","title","display","text","y"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\components\\AgeGroupTopProducts.vue"],"sourcesContent":["<template>\n  <div class=\"chart-container\">\n    <canvas ref=\"chartCanvas\"></canvas>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport Chart from 'chart.js/auto';\nimport axios from 'axios';\n\nexport default {\n  name: 'TopProductsChart',\n  setup() {\n    const chartCanvas = ref(null);\n    const chartInstance = ref(null);\n\n    const fetchTopProducts = async () => {\n      const response = await axios.get('/api/surveys/top-products');\n      return response.data;\n    };\n\n    onMounted(async () => {\n      const topProducts = await fetchTopProducts();\n      createChart(topProducts);\n    });\n\n    const createChart = (topProducts) => {\n      const ctx = chartCanvas.value.getContext('2d');\n      const labels = topProducts.map(product => product.product_name);\n      const data = topProducts.map(product => product.total_quantity_sold);\n\n      if (chartInstance.value) {\n        chartInstance.value.destroy();\n      }\n\n      chartInstance.value = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: '판매량',\n            data: data,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          indexAxis: 'y', // 가로 막대형 차트로 변경\n          scales: {\n            x: {\n              beginAtZero: true,\n              ticks: {\n                stepSize: 1\n              },\n              title: {\n                display: true,\n                text: '판매량 (개)'\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: '제품'\n              }\n            }\n          }\n        }\n      });\n    };\n\n    return {\n      chartCanvas\n    };\n  }\n};\n</script>\n\n<style scoped>\n.chart-container {\n  position: relative;\n  height: 440                                   px; /* 차트 높이 조정 */\n  width: 100%;\n}\n</style>\n"],"mappings":"AAOA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,OAAOC,KAAI,MAAO,eAAe;AACjC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,KAAKA,CAAA,EAAG;IACN,MAAMC,WAAU,GAAIN,GAAG,CAAC,IAAI,CAAC;IAC7B,MAAMO,aAAY,GAAIP,GAAG,CAAC,IAAI,CAAC;IAE/B,MAAMQ,gBAAe,GAAI,MAAAA,CAAA,KAAY;MACnC,MAAMC,QAAO,GAAI,MAAMN,KAAK,CAACO,GAAG,CAAC,2BAA2B,CAAC;MAC7D,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC;IAEDV,SAAS,CAAC,YAAY;MACpB,MAAMW,WAAU,GAAI,MAAMJ,gBAAgB,CAAC,CAAC;MAC5CK,WAAW,CAACD,WAAW,CAAC;IAC1B,CAAC,CAAC;IAEF,MAAMC,WAAU,GAAKD,WAAW,IAAK;MACnC,MAAME,GAAE,GAAIR,WAAW,CAACS,KAAK,CAACC,UAAU,CAAC,IAAI,CAAC;MAC9C,MAAMC,MAAK,GAAIL,WAAW,CAACM,GAAG,CAACC,OAAM,IAAKA,OAAO,CAACC,YAAY,CAAC;MAC/D,MAAMT,IAAG,GAAIC,WAAW,CAACM,GAAG,CAACC,OAAM,IAAKA,OAAO,CAACE,mBAAmB,CAAC;MAEpE,IAAId,aAAa,CAACQ,KAAK,EAAE;QACvBR,aAAa,CAACQ,KAAK,CAACO,OAAO,CAAC,CAAC;MAC/B;MAEAf,aAAa,CAACQ,KAAI,GAAI,IAAIb,KAAK,CAACY,GAAG,EAAE;QACnCS,IAAI,EAAE,KAAK;QACXZ,IAAI,EAAE;UACJM,MAAM,EAAEA,MAAM;UACdO,QAAQ,EAAE,CAAC;YACTC,KAAK,EAAE,KAAK;YACZd,IAAI,EAAEA,IAAI;YACVe,eAAe,EAAE,yBAAyB;YAC1CC,WAAW,EAAE,uBAAuB;YACpCC,WAAW,EAAE;UACf,CAAC;QACH,CAAC;QACDC,OAAO,EAAE;UACPC,SAAS,EAAE,GAAG;UAAE;UAChBC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,WAAW,EAAE,IAAI;cACjBC,KAAK,EAAE;gBACLC,QAAQ,EAAE;cACZ,CAAC;cACDC,KAAK,EAAE;gBACLC,OAAO,EAAE,IAAI;gBACbC,IAAI,EAAE;cACR;YACF,CAAC;YACDC,CAAC,EAAE;cACDH,KAAK,EAAE;gBACLC,OAAO,EAAE,IAAI;gBACbC,IAAI,EAAE;cACR;YACF;UACF;QACF;MACF,CAAC,CAAC;IACJ,CAAC;IAED,OAAO;MACLhC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}