{"ast":null,"code":"import axios from '../../axios';\nconst state = {\n  billingKey: null\n};\nconst mutations = {\n  setBillingKey(state, billingKey) {\n    state.billingKey = billingKey;\n  }\n};\nconst actions = {\n  async fetchBillingKey({\n    commit\n  }) {\n    try {\n      const response = await axios.get('/api/payment/billing-key', {\n        withCredentials: true\n      });\n      if (response.data) {\n        commit('setBillingKey', response.data);\n      } else {\n        console.log('Billing key not found');\n      }\n    } catch (error) {\n      console.error('Error fetching billing key:', error);\n    }\n  },\n  async issueBillingKey({\n    commit\n  }, billingRequest) {\n    try {\n      const response = await axios.post('/api/payment/issue-billing-key', billingRequest, {\n        withCredentials: true\n      });\n      if (response.status === 200 && response.data.billingKey) {\n        commit('setBillingKey', response.data.billingKey);\n      } else {\n        console.error('Billing key issuance failed');\n      }\n    } catch (error) {\n      console.error('Error issuing billing key:', error);\n    }\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n};","map":{"version":3,"names":["axios","state","billingKey","mutations","setBillingKey","actions","fetchBillingKey","commit","response","get","withCredentials","data","console","log","error","issueBillingKey","billingRequest","post","status","namespaced"],"sources":["C:/Users/woori/IdeaProjects/pillgood_v2/src/frontend/src/store/modules/billingStore.js"],"sourcesContent":["import axios from '../../axios';\n\nconst state = {\n  billingKey: null\n};\n\nconst mutations = {\n  setBillingKey(state, billingKey) {\n    state.billingKey = billingKey;\n  }\n};\n\nconst actions = {\n  async fetchBillingKey({ commit }) {\n    try {\n      const response = await axios.get('/api/payment/billing-key', { withCredentials: true });\n      if (response.data) {\n        commit('setBillingKey', response.data);\n      } else {\n        console.log('Billing key not found');\n      }\n    } catch (error) {\n      console.error('Error fetching billing key:', error);\n    }\n  },\n  async issueBillingKey({ commit }, billingRequest) {\n    try {\n      const response = await axios.post('/api/payment/issue-billing-key', billingRequest, { withCredentials: true });\n      if (response.status === 200 && response.data.billingKey) {\n        commit('setBillingKey', response.data.billingKey);\n      } else {\n        console.error('Billing key issuance failed');\n      }\n    } catch (error) {\n      console.error('Error issuing billing key:', error);\n    }\n  }\n};\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,aAAa;AAE/B,MAAMC,KAAK,GAAG;EACZC,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,SAAS,GAAG;EAChBC,aAAaA,CAACH,KAAK,EAAEC,UAAU,EAAE;IAC/BD,KAAK,CAACC,UAAU,GAAGA,UAAU;EAC/B;AACF,CAAC;AAED,MAAMG,OAAO,GAAG;EACd,MAAMC,eAAeA,CAAC;IAAEC;EAAO,CAAC,EAAE;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,0BAA0B,EAAE;QAAEC,eAAe,EAAE;MAAK,CAAC,CAAC;MACvF,IAAIF,QAAQ,CAACG,IAAI,EAAE;QACjBJ,MAAM,CAAC,eAAe,EAAEC,QAAQ,CAACG,IAAI,CAAC;MACxC,CAAC,MAAM;QACLC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACtC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EACD,MAAMC,eAAeA,CAAC;IAAER;EAAO,CAAC,EAAES,cAAc,EAAE;IAChD,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACiB,IAAI,CAAC,gCAAgC,EAAED,cAAc,EAAE;QAAEN,eAAe,EAAE;MAAK,CAAC,CAAC;MAC9G,IAAIF,QAAQ,CAACU,MAAM,KAAK,GAAG,IAAIV,QAAQ,CAACG,IAAI,CAACT,UAAU,EAAE;QACvDK,MAAM,CAAC,eAAe,EAAEC,QAAQ,CAACG,IAAI,CAACT,UAAU,CAAC;MACnD,CAAC,MAAM;QACLU,OAAO,CAACE,KAAK,CAAC,6BAA6B,CAAC;MAC9C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF;AACF,CAAC;AAED,eAAe;EACbK,UAAU,EAAE,IAAI;EAChBlB,KAAK;EACLE,SAAS;EACTE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}