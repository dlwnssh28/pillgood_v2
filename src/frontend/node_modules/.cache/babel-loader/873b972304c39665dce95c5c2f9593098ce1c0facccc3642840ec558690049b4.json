{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState } from 'vuex';\nimport '../assets/layout.css';\nimport HamburgerMenu from './HamburgerMenu.vue';\nexport default {\n  name: 'HeaderView',\n  components: {\n    HamburgerMenu\n  },\n  data() {\n    return {\n      searchQuery: '',\n      // searchQuery를 data에 정의\n      isMenuOpen: false\n    };\n  },\n  computed: {\n    ...mapState('member', {\n      isLoggedIn: state => state.isLoggedIn,\n      userName: state => state.member?.name || 'Guest',\n      // Vuex 상태에서 사용자 이름을 가져옴 || 로그인 안 되었을 시 Guest\n      isAdmin: state => state.isAdmin\n    })\n  },\n  methods: {\n    logoutAndNavigate() {\n      this.logout();\n      this.$router.push('/');\n    },\n    navigateTo(path) {\n      this.$router.push(path);\n    },\n    logout() {\n      this.$store.dispatch('member/logout');\n    },\n    navigateToCart() {\n      if (this.isLoggedIn) {\n        this.$router.push('/cart');\n      } else {\n        this.$router.push('/login');\n      }\n    },\n    searchProducts() {\n      if (this.searchQuery.trim()) {\n        this.$router.push({\n          name: 'ProductList',\n          query: {\n            search: this.searchQuery.trim()\n          }\n        });\n      }\n    },\n    toggleMenu() {\n      this.isMenuOpen = !this.isMenuOpen;\n    },\n    goToAdminPage() {\n      window.location.href = '/admin';\n    }\n  },\n  watch: {\n    isLoggedIn(newVal) {\n      console.log('로그인 상태 변경:', newVal);\n    }\n  },\n  created() {\n    // 주기적으로 isLoggedIn 상태 확인\n    setInterval(() => {\n      console.log('30초마다 isLoggedIn 상태 확인:', this.isLoggedIn);\n    }, 30000); // 30초마다 실행\n  }\n};","map":{"version":3,"names":["mapState","HamburgerMenu","name","components","data","searchQuery","isMenuOpen","computed","isLoggedIn","state","userName","member","isAdmin","methods","logoutAndNavigate","logout","$router","push","navigateTo","path","$store","dispatch","navigateToCart","searchProducts","trim","query","search","toggleMenu","goToAdminPage","window","location","href","watch","newVal","console","log","created","setInterval"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\components\\HeaderView.vue"],"sourcesContent":["<template>\n  <header>\n    <div class=\"header-container header-shadow\">\n      <header class=\"header-shadow\">\n        <div class=\"container\">\n          <div class=\"form-container\">\n            <!-- 로고 이미지 컨테이너 -->\n            <div class=\"logo-container\">\n\n              <!-- 메뉴 -->\n              <i class=\"fa-solid fa-bars\" @click=\"toggleMenu\" style=\"font-size: 20px; color: #B4D9A9;\"></i>\n              <HamburgerMenu v-if=\"isMenuOpen\" @close=\"toggleMenu\" /> &nbsp;&nbsp;&nbsp;\n              <!-- 메뉴 끝 -->\n              \n              <router-link to=\"/\" style=\"display: flex; align-items: center;\">\n                <img src=\"../assets/pillgood_logo.png\">&nbsp;\n                <span style=\"white-space: nowrap;\">: 필굿</span>\n              </router-link>\n            </div>\n            <!-- 검색창 -->\n            <div class=\"search-container\">\n              <input v-model=\"searchQuery\" type=\"search\" placeholder=\"검색어를 입력하세요\" aria-label=\"Search\"\n                class=\"form-control form-control-white text-bg-white search-input\">\n              <i class=\"fa-solid fa-magnifying-glass search-icon\" @click=\"searchProducts\"></i>\n            </div>\n\n            <div class=\"header-right\">\n              <!-- 사용자 이름 -->\n              <div v-if=\"isLoggedIn\" class=\"user-name\" style=\"margin-right: 5px;\">\n              {{ userName }} 님\n              </div>\n              <!-- 아이콘 -->\n              <div class=\"icon-container\">\n                <button v-if=\"isLoggedIn\" @click=\"navigateTo('/mypage')\" class=\"icon-link\">\n                  <i class=\"fa-solid fa-user\"></i>\n                </button>\n                <button v-if=\"isLoggedIn\" @click=\"logoutAndNavigate\" class=\"icon-link\">\n                  <i class=\"fa-solid fa-arrow-right-from-bracket\"></i>\n                </button>\n                <button v-else @click=\"navigateTo('/login')\" class=\"icon-link\">\n                  <i class=\"fa-solid fa-user\"></i>\n                </button>\n                <button @click=\"navigateTo('/cart')\" class=\"icon-link\">\n                  <i class=\"fa-solid fa-cart-shopping\"></i>\n                </button>\n                <button @click=\"navigateTo('/noticelist')\" class=\"icon-link\">\n                  <i class=\"fa-solid fa-bullhorn\"></i>\n                </button>\n                <button @click=\"goToAdminPage\" v-if=\"isAdmin\" class=\"icon-link\">\n                  <i class=\"fa-solid fa-gear\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </header>\n    </div>\n  </header>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport '../assets/layout.css';\nimport HamburgerMenu from './HamburgerMenu.vue';\n\nexport default {\n  name: 'HeaderView',\n  components: {\n    HamburgerMenu\n  },\n  data() {\n    return {\n      searchQuery: '', // searchQuery를 data에 정의\n      isMenuOpen: false\n    };\n  },\n  computed: {\n    ...mapState('member', {\n      isLoggedIn: state => state.isLoggedIn,\n      userName: state => state.member?.name || 'Guest', // Vuex 상태에서 사용자 이름을 가져옴 || 로그인 안 되었을 시 Guest\n      isAdmin: state => state.isAdmin\n    })\n  },\n  methods: {\n    logoutAndNavigate() {\n      this.logout();\n      this.$router.push('/');\n    },\n    navigateTo(path) {\n      this.$router.push(path);\n    },\n    logout() {\n      this.$store.dispatch('member/logout');\n    },\n    navigateToCart() {\n      if (this.isLoggedIn) {\n        this.$router.push('/cart');\n      } else {\n        this.$router.push('/login');\n      }\n    },\n    searchProducts() {\n      if (this.searchQuery.trim()) {\n        this.$router.push({ name: 'ProductList', query: { search: this.searchQuery.trim() } });\n      }\n    },\n    toggleMenu() {\n      this.isMenuOpen = !this.isMenuOpen;\n    },\n    goToAdminPage() {\n      window.location.href = '/admin';\n    }\n  },\n  watch: {\n    isLoggedIn(newVal) {\n      console.log('로그인 상태 변경:', newVal);\n    }\n  },\n  created() {\n    // 주기적으로 isLoggedIn 상태 확인\n    setInterval(() => {\n      console.log('30초마다 isLoggedIn 상태 확인:', this.isLoggedIn);\n    }, 30000); // 30초마다 실행\n  }\n};\n</script>\n"],"mappings":";AA8DA,SAASA,QAAO,QAAS,MAAM;AAC/B,OAAO,sBAAsB;AAC7B,OAAOC,aAAY,MAAO,qBAAqB;AAE/C,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MAAE;MACjBC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGP,QAAQ,CAAC,QAAQ,EAAE;MACpBQ,UAAU,EAAEC,KAAI,IAAKA,KAAK,CAACD,UAAU;MACrCE,QAAQ,EAAED,KAAI,IAAKA,KAAK,CAACE,MAAM,EAAET,IAAG,IAAK,OAAO;MAAE;MAClDU,OAAO,EAAEH,KAAI,IAAKA,KAAK,CAACG;IAC1B,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACC,MAAM,CAAC,CAAC;MACb,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IACxB,CAAC;IACDC,UAAUA,CAACC,IAAI,EAAE;MACf,IAAI,CAACH,OAAO,CAACC,IAAI,CAACE,IAAI,CAAC;IACzB,CAAC;IACDJ,MAAMA,CAAA,EAAG;MACP,IAAI,CAACK,MAAM,CAACC,QAAQ,CAAC,eAAe,CAAC;IACvC,CAAC;IACDC,cAAcA,CAAA,EAAG;MACf,IAAI,IAAI,CAACd,UAAU,EAAE;QACnB,IAAI,CAACQ,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;MAC5B,OAAO;QACL,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MAC7B;IACF,CAAC;IACDM,cAAcA,CAAA,EAAG;MACf,IAAI,IAAI,CAAClB,WAAW,CAACmB,IAAI,CAAC,CAAC,EAAE;QAC3B,IAAI,CAACR,OAAO,CAACC,IAAI,CAAC;UAAEf,IAAI,EAAE,aAAa;UAAEuB,KAAK,EAAE;YAAEC,MAAM,EAAE,IAAI,CAACrB,WAAW,CAACmB,IAAI,CAAC;UAAE;QAAE,CAAC,CAAC;MACxF;IACF,CAAC;IACDG,UAAUA,CAAA,EAAG;MACX,IAAI,CAACrB,UAAS,GAAI,CAAC,IAAI,CAACA,UAAU;IACpC,CAAC;IACDsB,aAAaA,CAAA,EAAG;MACdC,MAAM,CAACC,QAAQ,CAACC,IAAG,GAAI,QAAQ;IACjC;EACF,CAAC;EACDC,KAAK,EAAE;IACLxB,UAAUA,CAACyB,MAAM,EAAE;MACjBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,MAAM,CAAC;IACnC;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR;IACAC,WAAW,CAAC,MAAM;MAChBH,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE,IAAI,CAAC3B,UAAU,CAAC;IACzD,CAAC,EAAE,KAAK,CAAC,EAAE;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}