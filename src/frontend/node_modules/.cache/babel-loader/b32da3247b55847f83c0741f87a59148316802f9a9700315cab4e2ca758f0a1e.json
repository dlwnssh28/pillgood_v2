{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '../../axios';\nconst state = {\n  coupons: [],\n  activeCoupons: []\n};\nconst getters = {\n  allCoupons: state => state.coupons,\n  activeCoupons: state => state.activeCoupons\n};\nconst actions = {\n  async fetchCoupons({\n    commit\n  }) {\n    console.log('쿠폰 요청 시작'); // 요청 시작 로그\n    try {\n      const response = await axios.get('/api/coupons/list');\n      console.log('쿠폰 컨트롤러 응답:', response.data); // 응답 로그\n      commit('setCoupons', response.data);\n    } catch (error) {\n      console.error('쿠폰 요청 실패:', error); // 실패 로그\n    }\n  },\n  async fetchActiveCoupons({\n    commit\n  }) {\n    console.log('활성 쿠폰 요청 시작'); // 요청 시작 로그\n    try {\n      const response = await axios.get('/api/coupons/list');\n      console.log('활성 쿠폰 컨트롤러 응답:', response.data); // 응답 로그\n      const activeCoupons = response.data.filter(coupon => coupon.couponStatus === 'T'); // 필터링 적용\n      commit('setActiveCoupons', activeCoupons);\n    } catch (error) {\n      console.error('활성 쿠폰 요청 실패:', error); // 실패 로그\n    }\n  },\n  async createOwnedCoupon({\n    commit,\n    state\n  }, {\n    memberUniqueId,\n    couponId\n  }) {\n    console.log('쿠폰 발급 요청 시작'); // 요청 시작 로그\n    const coupon = state.activeCoupons.find(coupon => coupon.couponId === couponId);\n    if (!coupon) {\n      throw new Error('쿠폰을 찾을 수 없습니다.');\n    }\n    const issuedDate = new Date().toISOString();\n    const expiryDate = new Date(new Date().setDate(new Date().getDate() + coupon.validityPeriod)).toISOString(); // 발급날짜 + 유효기간\n\n    const ownedCoupon = {\n      memberUniqueId,\n      couponId,\n      couponUsed: false,\n      // 기본값 설정\n      issuedDate,\n      expiryDate\n    };\n    console.log('최종 전송 데이터:', ownedCoupon); // 최종 데이터 로그\n\n    try {\n      const response = await axios.post('/admin/ownedcoupons/create', ownedCoupon, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}` // 인증 토큰 추가\n        }\n      });\n      console.log('쿠폰 발급 응답:', response.data); // 응답 로그\n      commit('addOwnedCoupon', response.data);\n    } catch (error) {\n      console.error('쿠폰 발급 실패:', error); // 실패 로그\n      throw error;\n    }\n  },\n  async createCoupon({\n    commit\n  }, coupon) {\n    try {\n      const response = await axios.post('/admin/coupons/create', coupon);\n      commit('newCoupon', response.data);\n    } catch (error) {\n      console.error('쿠폰 생성 실패:', error);\n    }\n  },\n  async updateCoupon({\n    commit\n  }, updatedCoupon) {\n    try {\n      const response = await axios.put(`/admin/coupons/${updatedCoupon.couponId}`, updatedCoupon);\n      commit('updateCoupon', response.data);\n    } catch (error) {\n      console.error('쿠폰 업데이트 실패:', error);\n    }\n  },\n  async deleteCoupon({\n    commit\n  }, couponId) {\n    try {\n      await axios.delete(`/admin/coupons/${couponId}`);\n      commit('removeCoupon', couponId);\n    } catch (error) {\n      console.error('쿠폰 삭제 실패:', error);\n    }\n  }\n};\nconst mutations = {\n  setCoupons: (state, coupons) => {\n    console.log('setCoupons 호출:', coupons); // 커밋 로그\n    state.coupons = coupons;\n  },\n  setActiveCoupons: (state, activeCoupons) => {\n    console.log('setActiveCoupons 호출:', activeCoupons); // 커밋 로그\n    state.activeCoupons = activeCoupons;\n  },\n  addOwnedCoupon: (state, ownedCoupon) => {\n    console.log('addOwnedCoupon 호출:', ownedCoupon); // 커밋 로그\n    // 필요한 경우, 상태를 업데이트\n  },\n  newCoupon: (state, coupon) => state.coupons.push(coupon),\n  updateCoupon: (state, updatedCoupon) => {\n    const index = state.coupons.findIndex(coupon => coupon.couponId === updatedCoupon.couponId);\n    if (index !== -1) {\n      state.coupons.splice(index, 1, updatedCoupon);\n    }\n  },\n  removeCoupon: (state, couponId) => {\n    state.coupons = state.coupons.filter(coupon => coupon.couponId !== couponId);\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["axios","state","coupons","activeCoupons","getters","allCoupons","actions","fetchCoupons","commit","console","log","response","get","data","error","fetchActiveCoupons","filter","coupon","couponStatus","createOwnedCoupon","memberUniqueId","couponId","find","Error","issuedDate","Date","toISOString","expiryDate","setDate","getDate","validityPeriod","ownedCoupon","couponUsed","post","headers","localStorage","getItem","createCoupon","updateCoupon","updatedCoupon","put","deleteCoupon","delete","mutations","setCoupons","setActiveCoupons","addOwnedCoupon","newCoupon","push","index","findIndex","splice","removeCoupon","namespaced"],"sources":["C:/Users/woori/IdeaProjects/pillgood_v2/src/frontend/src/store/modules/couponStore.js"],"sourcesContent":["import axios from '../../axios';\n\nconst state = {\n  coupons: [],\n  activeCoupons: [],\n};\n\nconst getters = {\n  allCoupons: (state) => state.coupons,\n  activeCoupons: (state) => state.activeCoupons,\n};\n\nconst actions = {\n  async fetchCoupons({ commit }) {\n    console.log('쿠폰 요청 시작'); // 요청 시작 로그\n    try {\n      const response = await axios.get('/api/coupons/list');\n      console.log('쿠폰 컨트롤러 응답:', response.data); // 응답 로그\n      commit('setCoupons', response.data);\n    } catch (error) {\n      console.error('쿠폰 요청 실패:', error); // 실패 로그\n    }\n  },\n  async fetchActiveCoupons({ commit }) {\n    console.log('활성 쿠폰 요청 시작'); // 요청 시작 로그\n    try {\n      const response = await axios.get('/api/coupons/list');\n      console.log('활성 쿠폰 컨트롤러 응답:', response.data); // 응답 로그\n      const activeCoupons = response.data.filter(coupon => coupon.couponStatus === 'T'); // 필터링 적용\n      commit('setActiveCoupons', activeCoupons);\n    } catch (error) {\n      console.error('활성 쿠폰 요청 실패:', error); // 실패 로그\n    }\n  },\n  async createOwnedCoupon({ commit, state }, { memberUniqueId, couponId }) {\n    console.log('쿠폰 발급 요청 시작'); // 요청 시작 로그\n    const coupon = state.activeCoupons.find(coupon => coupon.couponId === couponId);\n\n    if (!coupon) {\n      throw new Error('쿠폰을 찾을 수 없습니다.');\n    }\n\n    const issuedDate = new Date().toISOString();\n    const expiryDate = new Date(new Date().setDate(\n      new Date().getDate() + coupon.validityPeriod)\n      ).toISOString(); // 발급날짜 + 유효기간\n\n    const ownedCoupon = {\n      memberUniqueId,\n      couponId,\n      couponUsed: false, // 기본값 설정\n      issuedDate,\n      expiryDate\n    };\n\n    console.log('최종 전송 데이터:', ownedCoupon); // 최종 데이터 로그\n\n    try {\n      const response = await axios.post('/admin/ownedcoupons/create', ownedCoupon, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`, // 인증 토큰 추가\n        }\n      });\n      console.log('쿠폰 발급 응답:', response.data); // 응답 로그\n      commit('addOwnedCoupon', response.data);\n    } catch (error) {\n      console.error('쿠폰 발급 실패:', error); // 실패 로그\n      throw error;\n    }\n  },\n  async createCoupon({ commit }, coupon) {\n    try {\n      const response = await axios.post('/admin/coupons/create', coupon);\n      commit('newCoupon', response.data);\n    } catch (error) {\n      console.error('쿠폰 생성 실패:', error);\n    }\n  },\n  async updateCoupon({ commit }, updatedCoupon) {\n    try {\n      const response = await axios.put(`/admin/coupons/${updatedCoupon.couponId}`, updatedCoupon);\n      commit('updateCoupon', response.data);\n    } catch (error) {\n      console.error('쿠폰 업데이트 실패:', error);\n    }\n  },\n  async deleteCoupon({ commit }, couponId) {\n    try {\n      await axios.delete(`/admin/coupons/${couponId}`);\n      commit('removeCoupon', couponId);\n    } catch (error) {\n      console.error('쿠폰 삭제 실패:', error);\n    }\n  },\n};\n\nconst mutations = {\n  setCoupons: (state, coupons) => {\n    console.log('setCoupons 호출:', coupons); // 커밋 로그\n    state.coupons = coupons;\n  },\n  setActiveCoupons: (state, activeCoupons) => {\n    console.log('setActiveCoupons 호출:', activeCoupons); // 커밋 로그\n    state.activeCoupons = activeCoupons;\n  },\n  addOwnedCoupon: (state, ownedCoupon) => {\n    console.log('addOwnedCoupon 호출:', ownedCoupon); // 커밋 로그\n    // 필요한 경우, 상태를 업데이트\n  },\n  newCoupon: (state, coupon) => state.coupons.push(coupon),\n  updateCoupon: (state, updatedCoupon) => {\n    const index = state.coupons.findIndex(coupon => coupon.couponId === updatedCoupon.couponId);\n    if (index !== -1) {\n      state.coupons.splice(index, 1, updatedCoupon);\n    }\n  },\n  removeCoupon: (state, couponId) => {\n    state.coupons = state.coupons.filter(coupon => coupon.couponId !== couponId);\n  },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}