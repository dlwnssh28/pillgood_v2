{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { mapState, mapActions } from 'vuex';\nimport axios from 'axios';\nexport default {\n  name: 'CardRegistration',\n  data() {\n    return {\n      customerKey: null,\n      authKey: null,\n      billingKey: null,\n      loading: true\n    };\n  },\n  computed: {\n    ...mapState('order', {\n      user: state => state.userProfile\n    })\n  },\n  async created() {\n    await this.fetchUserProfile(); // 사용자 정보를 가져옵니다.\n    this.loading = false;\n    const urlParams = new URLSearchParams(window.location.search);\n    this.customerKey = urlParams.get('customerKey');\n    this.authKey = urlParams.get('authKey');\n    if (this.customerKey && this.authKey) {\n      try {\n        // billing key 발급\n        const billingResponse = await axios.post('/api/payment/issue-billing-key', {\n          customerKey: this.customerKey,\n          authKey: this.authKey\n        });\n        if (billingResponse.data && billingResponse.data.billingKey) {\n          this.billingKey = billingResponse.data.billingKey;\n          this.$store.commit('billing/setBillingKey', this.billingKey);\n        } else {\n          console.error('Billing key 발급 실패:', billingResponse);\n        }\n      } catch (error) {\n        console.error('Billing key 발급 중 오류 발생:', error);\n      }\n    }\n  },\n  methods: {\n    ...mapActions('order', ['fetchUserProfile']),\n    goToApprovePayment() {\n      this.$router.push({\n        name: 'ApprovePayment'\n      });\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapActions","axios","name","data","customerKey","authKey","billingKey","loading","computed","user","state","userProfile","created","fetchUserProfile","urlParams","URLSearchParams","window","location","search","get","billingResponse","post","$store","commit","console","error","methods","goToApprovePayment","$router","push"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\CardRegistration.vue"],"sourcesContent":["<template>\n  <div class=\"main-container box-shadow\">\n    <h4 class=\"payment-title text-melon\">카드 등록 중...</h4>\n    <div v-if=\"loading\">\n      <p>카드를 등록하는 중입니다. 잠시만 기다려주세요...</p>\n    </div>\n    <div v-else-if=\"billingKey\">\n      <p>카드가 성공적으로 등록되었습니다.</p>\n      <button @click=\"goToApprovePayment\" class=\"btn btn-green\">결제 요청 페이지로 이동</button>\n    </div>\n    <div v-else>\n      <p>카드 등록에 실패했습니다. 다시 시도해주세요.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex';\nimport axios from 'axios';\n\nexport default {\n  name: 'CardRegistration',\n  data() {\n    return {\n      customerKey: null,\n      authKey: null,\n      billingKey: null,\n      loading: true,\n    };\n  },\n  computed: {\n    ...mapState('order', {\n      user: state => state.userProfile,\n    })\n  },\n  async created() {\n    await this.fetchUserProfile(); // 사용자 정보를 가져옵니다.\n    this.loading = false;\n    const urlParams = new URLSearchParams(window.location.search);\n    this.customerKey = urlParams.get('customerKey');\n    this.authKey = urlParams.get('authKey');\n\n    if (this.customerKey && this.authKey) {\n      try {\n        // billing key 발급\n        const billingResponse = await axios.post('/api/payment/issue-billing-key', {\n          customerKey: this.customerKey,\n          authKey: this.authKey\n        });\n        if (billingResponse.data && billingResponse.data.billingKey) {\n          this.billingKey = billingResponse.data.billingKey;\n          this.$store.commit('billing/setBillingKey', this.billingKey);\n        } else {\n          console.error('Billing key 발급 실패:', billingResponse);\n        }\n      } catch (error) {\n        console.error('Billing key 발급 중 오류 발생:', error);\n      }\n    }\n  },\n  methods: {\n    ...mapActions('order', ['fetchUserProfile']),\n    goToApprovePayment() {\n      this.$router.push({ name: 'ApprovePayment' });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.main-container {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.payment-title {\n  font-size: 1.5rem;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.btn {\n  display: block;\n  width: 100%;\n  padding: 10px;\n  background-color: #5cb85c;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 1.2rem;\n  text-align: center;\n}\n\n.btn:hover {\n  background-color: #4cae4c;\n}\n\n.loading {\n  font-size: 1.2rem;\n  text-align: center;\n  margin-top: 20px;\n}\n</style>\n"],"mappings":";;;;AAiBA,SAASA,QAAQ,EAAEC,UAAS,QAAS,MAAM;AAC3C,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,IAAI;MACjBC,OAAO,EAAE,IAAI;MACbC,UAAU,EAAE,IAAI;MAChBC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGT,QAAQ,CAAC,OAAO,EAAE;MACnBU,IAAI,EAAEC,KAAI,IAAKA,KAAK,CAACC;IACvB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,gBAAgB,CAAC,CAAC,EAAE;IAC/B,IAAI,CAACN,OAAM,GAAI,KAAK;IACpB,MAAMO,SAAQ,GAAI,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC7D,IAAI,CAACd,WAAU,GAAIU,SAAS,CAACK,GAAG,CAAC,aAAa,CAAC;IAC/C,IAAI,CAACd,OAAM,GAAIS,SAAS,CAACK,GAAG,CAAC,SAAS,CAAC;IAEvC,IAAI,IAAI,CAACf,WAAU,IAAK,IAAI,CAACC,OAAO,EAAE;MACpC,IAAI;QACF;QACA,MAAMe,eAAc,GAAI,MAAMnB,KAAK,CAACoB,IAAI,CAAC,gCAAgC,EAAE;UACzEjB,WAAW,EAAE,IAAI,CAACA,WAAW;UAC7BC,OAAO,EAAE,IAAI,CAACA;QAChB,CAAC,CAAC;QACF,IAAIe,eAAe,CAACjB,IAAG,IAAKiB,eAAe,CAACjB,IAAI,CAACG,UAAU,EAAE;UAC3D,IAAI,CAACA,UAAS,GAAIc,eAAe,CAACjB,IAAI,CAACG,UAAU;UACjD,IAAI,CAACgB,MAAM,CAACC,MAAM,CAAC,uBAAuB,EAAE,IAAI,CAACjB,UAAU,CAAC;QAC9D,OAAO;UACLkB,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEL,eAAe,CAAC;QACtD;MACF,EAAE,OAAOK,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACP,GAAG1B,UAAU,CAAC,OAAO,EAAE,CAAC,kBAAkB,CAAC,CAAC;IAC5C2B,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAE3B,IAAI,EAAE;MAAiB,CAAC,CAAC;IAC/C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}