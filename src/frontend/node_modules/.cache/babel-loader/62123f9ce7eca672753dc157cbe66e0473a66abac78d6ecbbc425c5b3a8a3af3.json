{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, vModelText as _vModelText, vModelRadio as _vModelRadio, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-eb12d91c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"text-melon\"\n}, \"주문하기\", -1));\nconst _hoisted_3 = {\n  class: \"box-container\"\n};\nconst _hoisted_4 = {\n  class: \"line-table\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"상품 정보\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"수량\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"가격\")])], -1));\nconst _hoisted_6 = {\n  class: \"item-info\",\n  colspan: \"2\"\n};\nconst _hoisted_7 = {\n  class: \"item-image\"\n};\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"flex-end\",\n    \"flex-direction\": \"column\",\n    \"margin-top\": \"10px\"\n  }\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", {\n  style: {\n    \"width\": \"200px\"\n  }\n}, null, -1));\nconst _hoisted_11 = {\n  class: \"text-melon\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", {\n  class: \"line\"\n}, null, -1));\nconst _hoisted_13 = {\n  class: \"box-container-no-shade\"\n};\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"ownedCouponId\"\n}, [/*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"text-melon\"\n}, \"쿠폰 / 포인트 사용\")], -1));\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\"\n}, \"보유중인 쿠폰 선택하기\", -1));\nconst _hoisted_16 = [\"value\"];\nconst _hoisted_17 = {\n  key: 0\n};\nconst _hoisted_18 = {\n  class: \"box-container-no-shade btn-container\"\n};\nconst _hoisted_19 = {\n  class: \"point-wrapper\"\n};\nconst _hoisted_20 = [\"readonly\"];\nconst _hoisted_21 = {\n  style: {\n    \"color\": \"red\"\n  }\n};\nconst _hoisted_22 = [\"disabled\"];\nconst _hoisted_23 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"text-info\"\n}, \"포인트는 최소 1000 포인트 보유 시, 1000 포인트 이상 사용 가능합니다.\", -1));\nconst _hoisted_24 = {\n  key: 0,\n  class: \"text-danger\"\n};\nconst _hoisted_25 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", {\n  class: \"line\",\n  style: {\n    \"background\": \"white\"\n  }\n}, null, -1));\nconst _hoisted_26 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"flex-end\",\n    \"flex-direction\": \"column\"\n  }\n};\nconst _hoisted_27 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h6\", null, \"(3만원 이상 구매시 배송비 무료)\", -1));\nconst _hoisted_28 = {\n  class: \"text-melon\"\n};\nconst _hoisted_29 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", {\n  class: \"line\"\n}, null, -1));\nconst _hoisted_30 = {\n  class: \"order-details\"\n};\nconst _hoisted_31 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"text-melon\"\n}, \"배송 정보\", -1));\nconst _hoisted_32 = {\n  class: \"line-table\",\n  style: {\n    \"padding\": \"10px\"\n  }\n};\nconst _hoisted_33 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"colgroup\", null, [/*#__PURE__*/_createElementVNode(\"col\", {\n  style: {\n    \"width\": \"170px\"\n  }\n}), /*#__PURE__*/_createElementVNode(\"col\", {\n  style: {\n    \"width\": \"*\"\n  }\n})], -1));\nconst _hoisted_34 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", {\n  style: {\n    \"text-align\": \"left\"\n  }\n}, \"배송지 선택\", -1));\nconst _hoisted_35 = {\n  class: \"radio-container\"\n};\nconst _hoisted_36 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"existingAddress\"\n}, \"기존 배송지\", -1));\nconst _hoisted_37 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"newAddress\"\n}, \"새로운 배송지\", -1));\nconst _hoisted_38 = {\n  key: 0\n};\nconst _hoisted_39 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", {\n  style: {\n    \"text-align\": \"left\"\n  }\n}, \"배송지명\", -1));\nconst _hoisted_40 = [\"value\"];\nconst _hoisted_41 = {\n  key: 1\n};\nconst _hoisted_42 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", {\n  style: {\n    \"text-align\": \"left\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"recipient\"\n}, \"수령인 이름\")], -1));\nconst _hoisted_43 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_44 = {\n  key: 2\n};\nconst _hoisted_45 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", {\n  style: {\n    \"text-align\": \"left\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"phoneNumber\"\n}, \"수령인 연락처\")], -1));\nconst _hoisted_46 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_47 = {\n  key: 3,\n  class: \"postal-code-group\"\n};\nconst _hoisted_48 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", {\n  style: {\n    \"text-align\": \"left\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"postalCode\"\n}, \"주소\")], -1));\nconst _hoisted_49 = {\n  class: \"postal-code-input\"\n};\nconst _hoisted_50 = {\n  ref: \"wrap\",\n  style: {\n    \"display\": \"none\",\n    \"border\": \"1px solid\",\n    \"width\": \"500px\",\n    \"height\": \"300px\",\n    \"margin\": \"5px 0\",\n    \"position\": \"relative\"\n  }\n};\nconst _hoisted_51 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_52 = {\n  key: 1,\n  class: \"error\"\n};\nconst _hoisted_53 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", {\n  style: {\n    \"text-align\": \"left\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"orderRequest\"\n}, \"배송 요청사항\")], -1));\nconst _hoisted_54 = {\n  class: \"subscription-options\"\n};\nconst _hoisted_55 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"subscription-button\"\n}, \"정기구독\", -1));\nconst _hoisted_56 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"subscription-button\"\n}, \"한번만 구매하기\", -1));\nconst _hoisted_57 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"payment-method\",\n  class: \"w-100\"\n}, null, -1));\nconst _hoisted_58 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"agreement\",\n  class: \"w-100\"\n}, null, -1));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"table\", _hoisted_4, [_hoisted_5, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.items, item => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: item.productId\n    }, [_createElementVNode(\"td\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"img\", {\n      src: item.productImage,\n      alt: \"Product Image\"\n    }, null, 8, _hoisted_8)]), _createTextVNode(\" \" + _toDisplayString(item.productName), 1)]), _createElementVNode(\"td\", null, _toDisplayString(item.productQuantity), 1), _createElementVNode(\"td\", null, _toDisplayString(item.price * item.productQuantity) + \" 원\", 1)]);\n  }), 128))])]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"h6\", null, \"배송비 \" + _toDisplayString($options.shippingFeeMessage), 1), _hoisted_10, _createElementVNode(\"h4\", _hoisted_11, \"합계: \" + _toDisplayString($data.totalAmount) + \" 원\", 1)]), _hoisted_12, _createElementVNode(\"div\", _hoisted_13, [_hoisted_14, _withDirectives(_createElementVNode(\"select\", {\n    id: \"ownedCouponId\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.ownedCouponId = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.applyCoupon && $options.applyCoupon(...args))\n  }, [_hoisted_15, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.coupons, coupon => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: coupon.ownedCouponId,\n      value: coupon.ownedCouponId\n    }, _toDisplayString(coupon.couponName), 9, _hoisted_16);\n  }), 128))], 544), [[_vModelSelect, $data.ownedCouponId]]), _ctx.coupons.length === 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_17, \"보유중인 쿠폰이 없습니다.\")) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"usePoints\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.usePoints = $event),\n    readonly: $data.pointsApplied\n  }, null, 8, _hoisted_20), [[_vModelText, $data.usePoints, void 0, {\n    number: true\n  }]]), _createTextVNode(\" P / \"), _createElementVNode(\"span\", _hoisted_21, _toDisplayString($data.totalPoints), 1), _createTextVNode(\" P  \"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.applyPoints && $options.applyPoints(...args)),\n    disabled: $data.pointsApplied || $data.usePoints < 1000,\n    class: \"btn btn-green\",\n    style: {\n      \"height\": \"30px\"\n    }\n  }, \"적용하기\", 8, _hoisted_22)]), _hoisted_23, $data.pointsError ? (_openBlock(), _createElementBlock(\"span\", _hoisted_24, _toDisplayString($data.pointsError), 1)) : _createCommentVNode(\"\", true)]), _hoisted_25, _createElementVNode(\"div\", _hoisted_26, [_hoisted_27, _createElementVNode(\"h4\", _hoisted_28, \"총 결제액: \" + _toDisplayString($data.totalAmount) + \" 원\", 1)]), _hoisted_29, _createElementVNode(\"div\", _hoisted_30, [_hoisted_31, _createElementVNode(\"table\", _hoisted_32, [_hoisted_33, _createElementVNode(\"tbody\", null, [_createElementVNode(\"tr\", null, [_hoisted_34, _createElementVNode(\"td\", null, [_createElementVNode(\"div\", _hoisted_35, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    id: \"existingAddress\",\n    value: \"existing\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.addressType = $event)\n  }, null, 512), [[_vModelRadio, $data.addressType]]), _hoisted_36, _withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    id: \"newAddress\",\n    value: \"new\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.addressType = $event)\n  }, null, 512), [[_vModelRadio, $data.addressType]]), _hoisted_37])])]), $data.addressType === 'existing' ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_38, [_hoisted_39, _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.selectedAddress = $event)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.addresses, address => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: address.id,\n      value: address\n    }, _toDisplayString(address.name), 9, _hoisted_40);\n  }), 128))], 512), [[_vModelSelect, $data.selectedAddress]])])])) : _createCommentVNode(\"\", true), $data.addressType === 'new' ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_41, [_hoisted_42, _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"recipient\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.recipient = $event),\n    onInput: _cache[8] || (_cache[8] = (...args) => $options.validateRecipient && $options.validateRecipient(...args))\n  }, null, 544), [[_vModelText, $data.recipient]]), $data.errors.recipient ? (_openBlock(), _createElementBlock(\"p\", _hoisted_43, _toDisplayString($data.errors.recipient), 1)) : _createCommentVNode(\"\", true)])])) : _createCommentVNode(\"\", true), $data.addressType === 'new' ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_44, [_hoisted_45, _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"phoneNumber\",\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.phoneNumber = $event),\n    onInput: _cache[10] || (_cache[10] = (...args) => $options.validatePhoneNumber && $options.validatePhoneNumber(...args))\n  }, null, 544), [[_vModelText, $data.phoneNumber]]), $data.errors.phoneNumber ? (_openBlock(), _createElementBlock(\"p\", _hoisted_46, _toDisplayString($data.errors.phoneNumber), 1)) : _createCommentVNode(\"\", true)])])) : _createCommentVNode(\"\", true), $data.addressType === 'new' ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_47, [_hoisted_48, _createElementVNode(\"td\", null, [_createElementVNode(\"div\", _hoisted_49, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"postalCode\",\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.postalCode = $event),\n    class: \"postal-code-field\",\n    readonly: \"\"\n  }, null, 512), [[_vModelText, $data.postalCode]]), _createElementVNode(\"button\", {\n    onClick: _cache[12] || (_cache[12] = (...args) => $options.openDaumPostcode && $options.openDaumPostcode(...args)),\n    class: \"btn btn-green\",\n    style: {\n      \"display\": \"inline-block\",\n      \"white-space\": \"nowrap\"\n    }\n  }, \"우편 번호 찾기\")]), _createElementVNode(\"div\", _hoisted_50, [_createElementVNode(\"img\", {\n    src: \"//t1.daumcdn.net/postcode/resource/images/close.png\",\n    id: \"btnFoldWrap\",\n    style: {\n      \"cursor\": \"pointer\",\n      \"position\": \"absolute\",\n      \"right\": \"0px\",\n      \"top\": \"-1px\",\n      \"z-index\": \"1\"\n    },\n    onClick: _cache[13] || (_cache[13] = (...args) => $options.foldDaumPostcode && $options.foldDaumPostcode(...args)),\n    alt: \"접기 버튼\"\n  })], 512), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"address\",\n    \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $data.address = $event),\n    readonly: \"\"\n  }, null, 512), [[_vModelText, $data.address]]), $data.errors.address ? (_openBlock(), _createElementBlock(\"p\", _hoisted_51, _toDisplayString($data.errors.address), 1)) : _createCommentVNode(\"\", true), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"detailedAddress\",\n    \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => $data.detailedAddress = $event),\n    onInput: _cache[16] || (_cache[16] = (...args) => $options.validateDetailedAddress && $options.validateDetailedAddress(...args))\n  }, null, 544), [[_vModelText, $data.detailedAddress]]), $data.errors.detailedAddress ? (_openBlock(), _createElementBlock(\"p\", _hoisted_52, _toDisplayString($data.errors.detailedAddress), 1)) : _createCommentVNode(\"\", true)])])) : _createCommentVNode(\"\", true), _createElementVNode(\"tr\", null, [_hoisted_53, _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"orderRequest\",\n    \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => $data.orderRequest = $event),\n    placeholder: \" 배송 요청 사항을 입력해 주세요.\"\n  }, null, 512), [[_vModelText, $data.orderRequest]])])])])]), _createElementVNode(\"div\", _hoisted_54, [_createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => $data.subscriptionStatus = $event),\n    value: true\n  }, null, 512), [[_vModelRadio, $data.subscriptionStatus]]), _hoisted_55]), _createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => $data.subscriptionStatus = $event),\n    value: false\n  }, null, 512), [[_vModelRadio, $data.subscriptionStatus]]), _hoisted_56])])]), _hoisted_57, _hoisted_58, _createElementVNode(\"button\", {\n    id: \"payment-request-button\",\n    onClick: _cache[20] || (_cache[20] = (...args) => $options.preparePayment && $options.preparePayment(...args)),\n    class: \"order-button btn btn-green\"\n  }, \"결제하기\")])]);\n}","map":{"version":3,"names":["class","_createElementVNode","colspan","style","for","value","key","ref","id","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_Fragment","_renderList","_ctx","items","item","productId","_hoisted_6","_hoisted_7","src","productImage","alt","_hoisted_8","_createTextVNode","_toDisplayString","productName","productQuantity","price","_hoisted_9","$options","shippingFeeMessage","_hoisted_10","_hoisted_11","$data","totalAmount","_hoisted_12","_hoisted_13","_hoisted_14","_cache","$event","ownedCouponId","onChange","args","applyCoupon","_hoisted_15","coupons","coupon","couponName","_hoisted_16","length","_hoisted_17","_createCommentVNode","_hoisted_18","_hoisted_19","type","usePoints","readonly","pointsApplied","_hoisted_20","number","_hoisted_21","totalPoints","onClick","applyPoints","disabled","_hoisted_22","_hoisted_23","pointsError","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","addressType","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","selectedAddress","addresses","address","name","_hoisted_40","_hoisted_41","_hoisted_42","recipient","onInput","validateRecipient","errors","_hoisted_43","_hoisted_44","_hoisted_45","phoneNumber","validatePhoneNumber","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","postalCode","openDaumPostcode","_hoisted_50","foldDaumPostcode","_hoisted_51","detailedAddress","validateDetailedAddress","_hoisted_52","_hoisted_53","orderRequest","placeholder","_hoisted_54","subscriptionStatus","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","preparePayment"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\OrderPage.vue"],"sourcesContent":["<template>\n  <div class=\"main-container\">\n    <h2 class=\"text-melon\">주문하기</h2>\n    <div class=\"box-container\">\n    <table class=\"line-table\">\n    <thead>\n      <tr>\n        <th>상품 정보</th>\n        <th>수량</th>\n        <th>가격</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr v-for=\"item in items\" :key=\"item.productId\">\n        <td class=\"item-info\" colspan=\"2\"><div class=\"item-image\"><img :src=\"item.productImage\" alt=\"Product Image\" /></div>\n        {{ item.productName }}</td>\n        <td>{{ item.productQuantity }}</td>\n        <td>{{ item.price * item.productQuantity }} 원</td>\n      </tr>\n    </tbody>\n  </table>\n  <div style=\"display: flex; align-items: flex-end; flex-direction: column; margin-top: 10px;\">\n    <h6>배송비 {{ shippingFeeMessage }}</h6>\n    <hr style=\"width: 200px\">\n    <h4 class=\"text-melon\">합계: {{ totalAmount }} 원</h4>\n  </div>\n  <hr class=\"line\">\n\n  <div class=\"box-container-no-shade\">\n    <label for=\"ownedCouponId\"><h4 class=\"text-melon\">쿠폰 / 포인트 사용</h4></label>\n    <select id=\"ownedCouponId\" v-model=\"ownedCouponId\" @change=\"applyCoupon\">\n      <option value=\"\">보유중인 쿠폰 선택하기</option>\n      <option v-for=\"coupon in coupons\" :key=\"coupon.ownedCouponId\" :value=\"coupon.ownedCouponId\">\n        {{ coupon.couponName }}\n      </option>\n    </select>\n    <p v-if=\"coupons.length === 0\">보유중인 쿠폰이 없습니다.</p>\n  </div>\n  <div class=\"box-container-no-shade btn-container\">\n    <div class=\"point-wrapper\">\n    <input type=\"number\" id=\"usePoints\" v-model.number=\"usePoints\" :readonly=\"pointsApplied\" /> P&nbsp;/&nbsp;<span style=\"color: red\">{{ totalPoints }}</span>&nbsp;P&nbsp;  \n    <button @click=\"applyPoints\" :disabled=\"pointsApplied || usePoints < 1000\" class=\"btn btn-green\" style=\"height: 30px\">적용하기</button></div>\n    <span class=\"text-info\">포인트는 최소 1000 포인트 보유 시, 1000 포인트 이상 사용 가능합니다.</span>\n    <span v-if=\"pointsError\" class=\"text-danger\">{{ pointsError }}</span>\n  </div>\n\n  <hr class=\"line\" style=\"background: white\">\n\n  <div style=\"display: flex; align-items: flex-end; flex-direction: column;\">\n    <h6>(3만원 이상 구매시 배송비 무료)</h6>\n    <h4 class=\"text-melon\">총 결제액: {{ totalAmount }} 원</h4>\n  </div>\n\n  <hr class=\"line\">\n\n  <div class=\"order-details\">\n    <h4 class=\"text-melon\">배송 정보</h4>\n    <table class=\"line-table\" style=\"padding: 10px\">\n      <colgroup>\n        <col style=\"width:170px\">\n        <col style=\"width:*\">\n      </colgroup>\n      <tbody>\n        <tr>\n          <td style=\"text-align: left;\">배송지 선택</td>\n          <td>\n            <div class=\"radio-container\">\n              <input type=\"radio\" id=\"existingAddress\" value=\"existing\" v-model=\"addressType\" />\n              <label for=\"existingAddress\">기존 배송지</label>\n              <input type=\"radio\" id=\"newAddress\" value=\"new\" v-model=\"addressType\" />\n              <label for=\"newAddress\">새로운 배송지</label>\n            </div>\n          </td>\n        </tr>\n        <tr v-if=\"addressType === 'existing'\">\n          <td style=\"text-align: left;\">배송지명</td>\n          <td>\n            <select v-model=\"selectedAddress\">\n              <option v-for=\"address in addresses\" :key=\"address.id\" :value=\"address\">{{ address.name }}</option>\n            </select>\n          </td>\n        </tr>\n        <tr v-if=\"addressType === 'new'\">\n          <td style=\"text-align: left;\"><label for=\"recipient\">수령인 이름</label></td>\n          <td>\n            <input type=\"text\" id=\"recipient\" v-model=\"recipient\" @input=\"validateRecipient\" />\n            <p v-if=\"errors.recipient\" class=\"error\">{{ errors.recipient }}</p>\n          </td>\n        </tr>\n        <tr v-if=\"addressType === 'new'\">\n          <td style=\"text-align: left\"><label for=\"phoneNumber\">수령인 연락처</label></td>\n          <td>\n            <input type=\"text\" id=\"phoneNumber\" v-model=\"phoneNumber\" @input=\"validatePhoneNumber\" />\n            <p v-if=\"errors.phoneNumber\" class=\"error\">{{ errors.phoneNumber }}</p>\n          </td>\n        </tr>\n        <tr class=\"postal-code-group\" v-if=\"addressType === 'new'\">\n          <td style=\"text-align: left\"><label for=\"postalCode\">주소</label></td>\n          <td>\n            <div class=\"postal-code-input\">\n              <input type=\"text\" id=\"postalCode\" v-model=\"postalCode\" class=\"postal-code-field\" readonly />\n              <button @click=\"openDaumPostcode\" class=\"btn btn-green\" style=\"display: inline-block; white-space: nowrap;\">우편 번호 찾기</button>\n            </div>\n            <div ref=\"wrap\" style=\"display:none;border:1px solid;width:500px;height:300px;margin:5px 0;position:relative\">\n              <img src=\"//t1.daumcdn.net/postcode/resource/images/close.png\" id=\"btnFoldWrap\" style=\"cursor:pointer;position:absolute;right:0px;top:-1px;z-index:1\" @click=\"foldDaumPostcode\" alt=\"접기 버튼\">\n            </div>\n            <input type=\"text\" id=\"address\" v-model=\"address\" readonly />\n            <p v-if=\"errors.address\" class=\"error\">{{ errors.address }}</p>\n            <input type=\"text\" id=\"detailedAddress\" v-model=\"detailedAddress\" @input=\"validateDetailedAddress\" />\n            <p v-if=\"errors.detailedAddress\" class=\"error\">{{ errors.detailedAddress }}</p>\n          </td>\n        </tr>\n        <tr>\n          <td style=\"text-align: left\"><label for=\"orderRequest\">배송 요청사항</label></td>\n          <td>\n            <input type=\"text\" id=\"orderRequest\" v-model=\"orderRequest\" placeholder=\" 배송 요청 사항을 입력해 주세요.\" />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <div class=\"subscription-options\">\n      <label>\n        <input type=\"radio\" v-model=\"subscriptionStatus\" :value=\"true\" />\n        <span class=\"subscription-button\">정기구독</span>\n      </label>\n      <label>\n        <input type=\"radio\" v-model=\"subscriptionStatus\" :value=\"false\" />\n        <span class=\"subscription-button\">한번만 구매하기</span>\n      </label>\n    </div>\n  </div>\n  <div id=\"payment-method\" class=\"w-100\"></div>\n  <div id=\"agreement\" class=\"w-100\"></div>\n  <button id=\"payment-request-button\" @click=\"preparePayment\" class=\"order-button btn btn-green\">결제하기</button>\n  </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions, mapGetters } from 'vuex';\nimport axios from '../axios';\nimport '../assets/styles.css';\n\nexport default {\n  name: 'OrderPage',\n  data() {\n    return {\n      ownedCouponId: '',\n      recipient: '',\n      postalCode: '',\n      address: '',\n      detailedAddress: '',\n      phoneNumber: '',\n      orderRequest: '',\n      subscriptionStatus: false,\n      discountAmount: 0,\n      shippingFee: 0,\n      totalAmount: 0,\n      usePoints: 0,\n      pointsApplied: false,\n      pointsError: '',\n      totalPoints: 0,\n      tossPayments: null,\n      paymentWidget: null,\n      currentOrderId: null, // 현재 주문 ID를 저장합니다.\n      addressType: 'existing', // 기본값을 기존 배송지로 설정\n      addresses: [], // 기존 배송지 목록\n      selectedAddress: null, // 선택된 기존 배송지\n      errors: {\n        recipient: '',\n        phoneNumber: '',\n        address: '',\n        detailedAddress: ''\n      }\n    };\n  },\n  computed: {\n    ...mapGetters('member', ['memberId']),\n    ...mapState('order', {\n      isLoggedIn: state => state.isLoggedIn,\n      items: state => state.orderDetails,\n      user: state => state.userProfile,\n      coupons: state => state.coupons,\n    }),\n    ...mapState('billing', ['billingKey']), // billingStore에서 billingKey 가져오기\n    shippingFeeMessage() {\n      return this.shippingFee === 0 ? '무료' : `+${this.shippingFee} 원`;\n    }\n  },\n  async created() {\n    await this.fetchUserProfile();\n    await this.fetchCoupons();\n    await this.fetchOrderDetails();\n    await this.fetchBillingKey();\n    this.setRecipientAndPhoneNumber();\n    this.calculateTotalAmount();\n    await this.fetchTotalPoints(); // 총 포인트 가져오기\n    this.fetchAddresses(); // 기존 배송지 목록을 가져오는 함수 호출\n  },\n  methods: {\n    ...mapActions('order', ['fetchUserProfile', 'fetchCoupons', 'fetchOrderDetails', 'placeOrder']),\n    ...mapActions('billing', ['fetchBillingKey']),\n    async fetchTotalPoints() {\n      try {\n        const response = await axios.get('/api/points/totalPoints', { withCredentials: true });\n        this.totalPoints = response.data;\n      } catch (error) {\n        console.error('Error fetching total points:', error);\n      }\n    },\n    fetchAddresses() {\n      // API 호출 또는 데이터를 가져오는 로직\n      this.addresses = [\n        { id: 1, name: '배송지1', recipient: '홍길동', phoneNumber: '010-1234-5678', postalCode: '12345', address: '서울시 강남구', detailedAddress: '역삼동 123-45' },\n        { id: 2, name: '배송지2', recipient: '김철수', phoneNumber: '010-8765-4321', postalCode: '54321', address: '서울시 서초구', detailedAddress: '서초동 67-89' }\n      ];\n    },\n    applyCoupon() {\n      const selectedCoupon = this.coupons.find(coupon => coupon.ownedCouponId === this.ownedCouponId);\n      this.discountAmount = selectedCoupon ? selectedCoupon.discountAmount : 0;\n      this.calculateTotalAmount();\n    },\n    calculateTotalAmount() {\n      const subtotal = this.items.reduce((total, item) => total + item.price * item.productQuantity, 0);\n      this.shippingFee = subtotal >= 30000 ? 0 : 3000;\n      this.totalAmount = subtotal - this.discountAmount + this.shippingFee - this.usePoints;\n    },\n    setRecipientAndPhoneNumber() {\n      if (this.user) {\n        this.recipient = this.user.name;\n        this.phoneNumber = this.user.phoneNumber;\n      }\n    },\n    applyPoints() {\n      if (this.usePoints < 1000) {\n        this.pointsError = '포인트는 최소 1000포인트부터 사용 가능합니다.';\n        return;\n      }\n      if (this.usePoints > this.totalPoints) {\n        this.pointsError = '포인트가 부족합니다.';\n        return;\n      }\n      this.pointsError = '';\n      this.pointsApplied = true;\n      this.calculateTotalAmount();\n    },\n    validateRecipient() {\n      this.errors.recipient = this.recipient ? '' : '이름을 입력해주세요.';\n    },\n    validatePhoneNumber() {\n      this.errors.phoneNumber = this.phoneNumber ? '' : '연락처를 입력해주세요.';\n    },\n    validateAddress() {\n      if (this.postalCode && this.address) {\n        this.errors.address = '';\n      } else {\n        this.errors.address = '주소를 등록해주세요.';\n      }\n    },\n    validateDetailedAddress() {\n      this.errors.detailedAddress = this.detailedAddress ? '' : '나머지 주소를 입력해주세요.';\n    },\n    validateForm() {\n      this.validateRecipient();\n      this.validatePhoneNumber();\n      this.validateAddress();\n      this.validateDetailedAddress();\n\n      return !this.errors.recipient &&\n        !this.errors.phoneNumber &&\n        !this.errors.address &&\n        !this.errors.detailedAddress;\n    },\n    async preparePayment() {\n      if (!this.validateForm()) {\n        return;\n      }\n\n      const orderDetails = {\n        items: this.items,\n        totalAmount: this.totalAmount,\n        recipient: this.recipient,\n        postalCode: this.postalCode,\n        address: this.address,\n        detailedAddress: this.detailedAddress,\n        phoneNumber: this.phoneNumber,\n        orderRequest: this.orderRequest,\n        ownedCouponId: this.ownedCouponId || null,\n        subscriptionStatus: this.subscriptionStatus,\n        pointsToUse: this.usePoints // 포인트 사용 정보 추가\n      };\n\n      try {\n        const orderResponse = await this.placeOrder(orderDetails);\n\n        if (orderResponse.status === 201) {\n          this.currentOrderId = orderResponse.data.orderNo;\n          console.log('Current Order:', this.$store.state.order.currentOrder); // 로깅 추가\n          // localStorage에 currentOrder 저장\n          localStorage.setItem('currentOrder', JSON.stringify(this.$store.state.order.currentOrder));\n          \n          if (this.subscriptionStatus) {\n              if(this.billingKey) {\n                this.$router.push({ name: 'ApprovePayment' }); // 결제 성공 페이지로 이동\n              } else {\n                await this.initializeTossPayments();\n                this.setupBillingAuth(this.currentOrderId); // 정기 결제\n              }\n          } else {\n            await this.initializeTossPayments();\n            this.setupTossPayments(this.currentOrderId); // 일반 결제\n          }\n        } else {\n          console.error('주문 생성 실패:', orderResponse);\n          alert('주문 생성 중 오류가 발생했습니다. 다시 시도하세요.');\n        }\n      } catch (error) {\n        console.error('결제 준비 중 오류:', error);\n        alert('결제 준비 중 오류가 발생했습니다. 다시 시도하세요.');\n      }\n    },\n    initializeTossPayments() {\n      return new Promise((resolve, reject) => {\n        const script = document.createElement('script');\n        script.src = 'https://js.tosspayments.com/v1/payment';\n        script.onload = resolve;\n        script.onerror = reject;\n        document.head.appendChild(script);\n      });\n    },\n    async setupTossPayments(orderId) {\n      const clientKey = await this.fetchClientKey();\n      if (!clientKey) {\n        console.error('Client key is not defined');\n        return;\n      }\n\n      if (!window.TossPayments) {\n        console.error('TossPayments is not loaded');\n        return;\n      }\n\n      this.tossPayments = window.TossPayments(clientKey);\n\n      const paymentRequest = {\n        amount: this.totalAmount,\n        orderId: orderId,\n        orderName: 'Order Name',\n        customerName: this.recipient,\n        successUrl: `${window.location.origin}/payment/success`,\n        failUrl: `${window.location.origin}/payment/fail`\n      };\n\n      try {\n        const response = await this.tossPayments.requestPayment('카드', paymentRequest);\n        const paymentKey = response.paymentKey;\n        const successUrl = `${window.location.origin}/payment/success?orderId=${orderId}&amount=${this.totalAmount}&paymentKey=${paymentKey}`;\n        window.location.href = successUrl; // 결제 성공 페이지로 이동\n      } catch (error) {\n        console.error('결제 요청 오류:', error);\n        alert('결제 요청 중 오류가 발생했습니다. 다시 시도하세요.');\n        await this.cancelOrder(orderId); // 결제 요청 오류 발생 시 주문을 취소합니다.\n      }\n    },\n    async setupBillingAuth(orderId) {\n      const clientKey = await this.fetchClientKey();\n      if (!clientKey) {\n        console.error('Client key is not defined');\n        return;\n      }\n\n      if (!window.TossPayments) {\n        console.error('TossPayments is not loaded');\n        return;\n      }\n\n      this.tossPayments = window.TossPayments(clientKey);\n\n      try {\n        await this.tossPayments.requestBillingAuth('카드', {\n          customerKey: this.memberId, // 구매자 ID\n          successUrl: `${window.location.origin}/payment/card`,\n          failUrl: `${window.location.origin}/payment/fail`\n        });\n\n        // authKey는 successUrl로 이동하면서 전달됨\n      } catch (error) {\n        if (error.code === 'USER_CANCEL') {\n          console.log('결제 고객이 결제창을 닫았습니다.');\n          await this.cancelOrder(orderId); // 결제 취소 시 주문을 취소합니다.\n        } else {\n          console.error('결제 요청 오류:', error);\n          alert('결제 요청 중 오류가 발생했습니다. 다시 시도하세요.');\n          await this.cancelOrder(orderId); // 결제 요청 오류 발생 시 주문을 취소합니다.\n        }\n      }\n    },\n    async fetchClientKey() {\n      try {\n        const response = await axios.get('/api/payment/client-key');\n        return response.data.clientKey;\n      } catch (error) {\n        console.error('Failed to fetch client key:', error);\n      }\n    },\n    async cancelOrder(orderNo) {\n      try {\n        await axios.delete(`/api/orders/cancel/${orderNo}`, { withCredentials: true });\n        alert('주문이 취소되었습니다.');\n      } catch (error) {\n        console.error('주문 취소 중 오류 발생:', error);\n        alert('주문 취소 중 오류가 발생했습니다. 다시 시도하세요.');\n      }\n    },\n    openDaumPostcode() {\n      const elementWrap = this.$refs.wrap;\n      const currentScroll = Math.max(document.body.scrollTop, document.documentElement.scrollTop);\n      new window.daum.Postcode({\n        oncomplete: (data) => {\n          let addr = '';\n          if (data.userSelectedType === 'R') {\n            addr = data.roadAddress;\n          } else {\n            addr = data.jibunAddress;\n          }\n          this.postalCode = data.zonecode;\n          this.address = addr;\n          elementWrap.style.display = 'none';\n          document.body.scrollTop = currentScroll;\n          this.validateAddress(); // 주소 검색 후 유효성 검사\n        },\n        onresize: (size) => {\n          elementWrap.style.height = size.height + 'px';\n        },\n        width: '100%',\n        height: '100%'\n      }).embed(elementWrap);\n      elementWrap.style.display = 'block';\n    },\n    foldDaumPostcode() {\n      const elementWrap = this.$refs.wrap;\n      elementWrap.style.display = 'none';\n    }\n  },\n  watch: {\n    ownedCouponId(newVal) {\n      if (newVal === '') {\n        this.discountAmount = 0;\n      }\n      this.applyCoupon();\n    },\n    recipient() {\n      this.validateRecipient();\n    },\n    phoneNumber() {\n      this.validatePhoneNumber();\n    },\n    detailedAddress() {\n      this.validateDetailedAddress();\n    },\n    postalCode() {\n      this.validateAddress();\n    },\n    address() {\n      this.validateAddress();\n    }\n  }\n};\n</script>\n\n\n<style scoped>\n.item-info {\n  height: 120px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.item-image{\n  width: 100px;\n  height: 100px;\n  object-fit: cover;\n  border-radius: 8px;\n  margin-right: 30px;\n  overflow: hidden;\n  display: flex;\n  align-items: center; /* 세로 중앙 정렬 */\n  justify-content: center; /* 가로 중앙 정렬 */\n  background: rgb(221, 220, 220);\n}\n\n.item-image img {\n  max-width: 100%;\n  max-height: 100%;\n  object-fit: cover;\n}\n\n.box-container-no-shade label, select, p {\n  margin: 10px;\n}\n\n.btn-container {\n  position: relative;\n  display: inline-block;\n}\n\n.point-wrapper {\n  white-space: nowrap;\n  display: flex;\n  align-items: center;\n\n}\n\n.text-info {\n  font-size: 0.9em;\n  color: gray\n}\n\n.postal-code-input {\n  display: flex;\n  align-items: center;\n  width: 300px;\n}\n\n.postal-code-field {\n  margin-right: 10px;\n}\n\n.btn {\n  padding: 5px 10px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.subscription-options {\n  display: flex;\n  justify-content: space-around;\n  margin-top: 20px;\n  margin-bottom: 20px;\n}\n\n.subscription-options label {\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n}\n\n.subscription-options input[type=\"radio\"] {\n  display: none;\n}\n\n.subscription-button {\n  display: inline-block;\n  padding: 10px 20px;\n  border-radius: 20px;\n  background-color: #ddd;\n  color: #333;\n  transition: background-color 0.3s;\n}\n\n.subscription-options input[type=\"radio\"]:checked + .subscription-button {\n  background-color: #B4D9A9;\n  color: white;\n}\n\n.order-button {\n  width: 100%;\n  padding: 10px;\n  background-color: #B4D9A9;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.order-button:hover {\n  background-color: #B4D9A9;\n}\n\n.product-image {\n  width: 200px;\n  height: 200px;\n}\n\n.error {\n  color: red;\n  font-size: 12px;\n  margin-top: 5px;\n}\n\n.radio-container {\n display: flex;\n align-items: center;\n justify-content: flex-start;\n}\n\n.radio-container label {\n  margin-right: 20px; /* 라벨 사이의 간격 조절 */\n}\n\n.radio-container input[type=\"radio\"] {\n  width: 15px;\n  height: 15px;\n  margin-right: 5px; /* 라디오 버튼과 라벨 사이의 간격 조절 */\n}\n\nselect {\n  width: 100; /* select 요소의 너비를 부모 요소에 맞게 설정 */\n  box-sizing: border-box; /* 패딩과 테두리를 포함한 너비 계산 */\n  margin-left: 0;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}