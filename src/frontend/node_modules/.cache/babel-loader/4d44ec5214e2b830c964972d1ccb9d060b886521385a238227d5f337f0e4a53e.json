{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-31382d98\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"text-melon\"\n}, \"리뷰 리스트\", -1));\nconst _hoisted_3 = {\n  class: \"line-table\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"       \"), /*#__PURE__*/_createElementVNode(\"th\", {\n  colspan: \"2\"\n}, \"제품 정보\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"리뷰 내용\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"평점\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"회원 이름\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"작성일\")])], -1));\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"innerHTML\"];\nconst _hoisted_8 = {\n  key: 0,\n  class: \"fa-solid fa-paperclip\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_star_rating = _resolveComponent(\"star-rating\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredReviews, review => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: review.reviewId\n    }, [_createElementVNode(\"td\", null, _toDisplayString(review.reviewId), 1), _createElementVNode(\"td\", null, [_createElementVNode(\"img\", {\n      style: {\n        \"height\": \"100px\",\n        \"width\": \"auto\"\n      },\n      src: review.product.productImage,\n      alt: \"Prod uct Image\"\n    }, null, 8, _hoisted_5)]), _createElementVNode(\"td\", null, _toDisplayString($options.truncateText(review.product.productName, 15)), 1), _createElementVNode(\"td\", {\n      onClick: $event => $options.goToReviewDetail(review),\n      style: {\n        \"cursor\": \"pointer\",\n        \"white-space\": \"nowrap\",\n        \"display\": \"inline-flex\"\n      }\n    }, [_createElementVNode(\"span\", {\n      innerHTML: $options.truncateText($options.extractText(review.reviewContent), 20)\n    }, null, 8, _hoisted_7), $options.containsImageTag(review.reviewContent) ? (_openBlock(), _createElementBlock(\"i\", _hoisted_8)) : _createCommentVNode(\"\", true)], 8, _hoisted_6), _createElementVNode(\"td\", null, [_createVNode(_component_star_rating, {\n      modelValue: review.rating,\n      \"onUpdate:modelValue\": $event => review.rating = $event,\n      \"star-size\": 30,\n      \"show-rating\": false,\n      \"disable-click\": true\n    }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"])]), _createElementVNode(\"td\", null, _toDisplayString(review.memberName), 1), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(review.reviewDate)), 1)]);\n  }), 128))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","colspan","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$options","filteredReviews","review","reviewId","_toDisplayString","style","src","product","productImage","alt","_hoisted_5","truncateText","productName","onClick","$event","goToReviewDetail","innerHTML","extractText","reviewContent","_hoisted_7","containsImageTag","_hoisted_8","_createCommentVNode","_hoisted_6","_createVNode","_component_star_rating","modelValue","rating","memberName","formatDate","reviewDate"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\ReviewList.vue"],"sourcesContent":["<template>\n  <div class=\"main-container\">\n    <h2 class=\"text-melon\">리뷰 리스트</h2>\n    <table class=\"line-table\">\n      <thead>\n        <tr>\n          <th>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>\n          <th colspan=\"2\">제품 정보</th>\n          <th>리뷰 내용</th>\n          <th>평점</th>\n          <th>회원 이름</th>\n          <th>작성일</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"review in filteredReviews\" :key=\"review.reviewId\">\n          <td>{{ review.reviewId }}</td>\n          <td>\n            <img style=\"height: 100px; width: auto;\" :src=\"review.product.productImage\" alt=\"Prod uct Image\" />\n          </td>\n          <td>{{ truncateText(review.product.productName, 15) }}</td>\n          <td @click=\"goToReviewDetail(review)\" style=\"cursor: pointer; white-space: nowrap; display: inline-flex;\">\n            <span v-html=\"truncateText(extractText(review.reviewContent), 20)\"></span>\n            <i v-if=\"containsImageTag(review.reviewContent)\" class=\"fa-solid fa-paperclip\"></i>\n          </td>\n          <td>\n            <star-rating v-model=\"review.rating\" :star-size=\"30\" :show-rating=\"false\" :disable-click=\"true\"></star-rating>\n          </td>\n          <td>{{ review.memberName }}</td>\n          <td>{{ formatDate(review.reviewDate) }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from '../axios'; // 설정된 axios 인스턴스를 import\nimport '../assets/styles.css';\nimport { mapState, mapActions } from 'vuex'; // Vuex의 헬퍼 함수 import\nimport StarRating from 'vue3-star-ratings'; // StarRating 컴포넌트 import\n\nexport default {\n  name: 'ReviewList',\n  components: {\n    StarRating, // StarRating 컴포넌트 등록\n  },\n  data() {\n    return {\n      selectedCoupons: {}, // 각 리뷰 ID에 대한 선택된 쿠폰을 저장할 객체\n    };\n  },\n  computed: {\n    ...mapState('member', ['members', 'isAdmin', 'memberId']), // Vuex 상태에서 members와 isAdmin, memberId를 가져옴\n    ...mapState('coupon', ['activeCoupons']), // Vuex 상태에서 coupons을 가져옴\n    ...mapState('review', ['reviews']), // Vuex 상태에서 reviews을 가져옴\n    filteredReviews() {\n      let reviews;\n      // ADMIN 계정일 경우 모든 리뷰를 표시하고, 일반 사용자일 경우 자신의 리뷰만 표시\n      if (this.isAdmin) {\n        reviews = this.reviews;\n      } else {\n        reviews = this.reviews.filter(review => review.memberUniqueId === this.memberId);\n      }\n      // 작성 일자 기준으로 최신순 정렬\n      return reviews.sort((a, b) => new Date(b.reviewDate) - new Date(a.reviewDate));\n    }\n  },\n  created() {\n    console.log('컴포넌트 생성됨'); // 컴포넌트 생성 로그\n    this.fetchReviews(); // 컴포넌트 생성 시 리뷰 데이터를 불러옴\n    this.fetchActiveCoupons(); // couponStore의 coupons을 가져옴\n  },\n  methods: {\n    ...mapActions('coupon', ['fetchActiveCoupons', 'createOwnedCoupon']), // coupon 모듈에서 액션을 맵핑\n    ...mapActions('review', ['fetchReviews']), // review 모듈에서 액션을 맵핑\n    async issueCoupon(reviewId, memberUniqueId, couponId) {\n      if (!couponId) {\n        alert('쿠폰을 선택해주세요.');\n        return;\n      }\n\n      const ownedCoupon = {\n        memberUniqueId,\n        couponId,\n      };\n\n      try {\n        await this.createOwnedCoupon(ownedCoupon);\n        alert('쿠폰이 발급되었습니다.');\n        this.updateReviewCouponIssued(reviewId); // 쿠폰 발급 후 상태 업데이트\n      } catch (error) {\n        console.error('쿠폰 발급 실패:', error);\n        alert('쿠폰 발급에 실패했습니다.');\n      }\n    },\n    async updateReviewCouponIssued(reviewId) {\n      try {\n        const index = this.reviews.findIndex(review => review.reviewId === reviewId);\n        console.log('Updating review at index:', index); // 인덱스 로그\n\n        if (index !== -1) {\n          const updatedReview = {\n            ...this.reviews[index],\n            couponIssued: true\n          };\n          this.reviews.splice(index, 1, updatedReview); // 배열 업데이트\n          console.log('Updated review:', this.reviews[index]); // 업데이트된 리뷰 로그\n          \n          // 서버에 업데이트 요청\n          await axios.put('/admin/reviews/update-coupon-issued', null, {\n            params: {\n              reviewId,\n              couponIssued: true\n            }\n          });\n          console.log('Coupon issued status updated on server');\n        } else {\n          console.error('Review not found for ID:', reviewId); // 리뷰를 찾을 수 없는 경우 에러 로그\n        }\n      } catch (error) {\n        console.error('Error updating review couponIssued status:', error); // 업데이트 중 발생한 에러 로그\n        throw error; // 에러를 다시 던짐\n      }\n    },\n    async fetchOrderDetailById(orderDetailNo) {\n      try {\n        const response = await axios.get(`/api/order-details/${orderDetailNo}`); // orderDetailNo로 orderDetail 정보를 가져옴\n        return response.data; // orderDetail 정보를 반환\n      } catch (error) {\n        console.error(`Failed to fetch order detail for order detail ${orderDetailNo}:`, error);\n        return null;\n      }\n    },\n    async fetchOrderByOrderNo(orderNo) {\n      try {\n        const response = await axios.get(`/api/orders/${orderNo}`); // orderNo로 order 정보를 가져옴\n        return response.data; // order 정보를 반환\n      } catch (error) {\n        console.error(`Failed to fetch order for order number ${orderNo}:`, error);\n        return null;\n      }\n    },\n    getMemberName(memberId) {\n      const member = this.members.find(member => member.memberUniqueId === memberId); // memberId로 회원 이름을 가져옴\n      return member ? member.name : '알 수 없음';\n    },\n    formatDate(date) {\n      if (!date) return '';\n      return new Date(date).toLocaleDateString(); // 날짜를 읽기 쉬운 형식으로 변환\n    },\n    extractText(content) {\n      // <p> 태그와 다른 HTML 태그를 제거하고 텍스트만 추출\n      return content.replace(/<\\/?p>/g, '').replace(/<\\/?[^>]+(>|$)/g, \"\").trim();\n    },\n    containsImageTag(content) { // 이미지 태그가 존재하는 지 테스트\n      return /<img[^>]*src=\"[^\"]*\"[^>]*>/g.test(content);\n    },\n    truncateText(text, maxLength) {\n      if (text.length <= maxLength) {\n        return text;\n      }\n      return text.substring(0, maxLength) + '...';\n    },\n    async goToReviewDetail(review) {\n      const orderDetail = await this.fetchOrderDetailById(review.orderDetailNo);\n      const order = await this.fetchOrderByOrderNo(orderDetail.orderNo);\n      const queryParams = {\n        reviewId: review.reviewId,\n        orderNo: orderDetail.orderNo,\n        orderDate: order.orderDate,\n        productId: review.productId,\n        productName: review.product.productName,\n        productImage: review.product.productImage,\n        orderDetailNo: review.orderDetailNo,\n        reviewContent: review.reviewContent,\n        rating: review.rating\n      };\n      console.log(\"후기디테일페이지로 넘기는 정보:\", queryParams);\n\n      this.$router.push({\n        name: 'ReviewDetail',\n        query: queryParams\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n .line-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 30px;\n  }\n\n  .line-table td, tr, th {\n    border: none;\n  }\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAAkC;EAA9BD,KAAK,EAAC;AAAY,GAAC,QAAM;;EACtBA,KAAK,EAAC;AAAY;gEACvBC,mBAAA,CASQ,gB,aARNA,mBAAA,CAOK,a,aANHA,mBAAA,CAAmD,YAA/C,SAA0C,G,aAC9CA,mBAAA,CAA0B;EAAtBC,OAAO,EAAC;AAAG,GAAC,OAAK,G,aACrBD,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAY,YAAR,KAAG,E;mBAXjB;mBAAA;mBAAA;;EAAAE,GAAA;EAuB6DH,KAAK,EAAC;;;;uBAtBjEI,mBAAA,CAgCM,OAhCNC,UAgCM,GA/BJC,UAAkC,EAClCL,mBAAA,CA6BQ,SA7BRM,UA6BQ,GA5BNC,UASQ,EACRP,mBAAA,CAiBQ,iB,kBAhBNG,mBAAA,CAeKK,SAAA,QA9BbC,WAAA,CAe6BC,QAAA,CAAAC,eAAe,EAAzBC,MAAM;yBAAjBT,mBAAA,CAeK;MAfkCD,GAAG,EAAEU,MAAM,CAACC;QACjDb,mBAAA,CAA8B,YAAAc,gBAAA,CAAvBF,MAAM,CAACC,QAAQ,OACtBb,mBAAA,CAEK,aADHA,mBAAA,CAAmG;MAA9Fe,KAAmC,EAAnC;QAAA;QAAA;MAAA,CAAmC;MAAEC,GAAG,EAAEJ,MAAM,CAACK,OAAO,CAACC,YAAY;MAAEC,GAAG,EAAC;gBAlB5FC,UAAA,E,GAoBUpB,mBAAA,CAA2D,YAAAc,gBAAA,CAApDJ,QAAA,CAAAW,YAAY,CAACT,MAAM,CAACK,OAAO,CAACK,WAAW,YAC9CtB,mBAAA,CAGK;MAHAuB,OAAK,EAAAC,MAAA,IAAEd,QAAA,CAAAe,gBAAgB,CAACb,MAAM;MAAGG,KAAmE,EAAnE;QAAA;QAAA;QAAA;MAAA;QACpCf,mBAAA,CAA0E;MAApE0B,SAA4D,EAApDhB,QAAA,CAAAW,YAAY,CAACX,QAAA,CAAAiB,WAAW,CAACf,MAAM,CAACgB,aAAa;gBAtBvEC,UAAA,GAuBqBnB,QAAA,CAAAoB,gBAAgB,CAAClB,MAAM,CAACgB,aAAa,K,cAA9CzB,mBAAA,CAAmF,KAAnF4B,UAAmF,KAvB/FC,mBAAA,W,KAAAC,UAAA,GAyBUjC,mBAAA,CAEK,aADHkC,YAAA,CAA8GC,sBAAA;MA1B1HC,UAAA,EA0BkCxB,MAAM,CAACyB,MAAM;MA1B/C,uBAAAb,MAAA,IA0BkCZ,MAAM,CAACyB,MAAM,GAAAb,MAAA;MAAG,WAAS,EAAE,EAAE;MAAG,aAAW,EAAE,KAAK;MAAG,eAAa,EAAE;0DAE5FxB,mBAAA,CAAgC,YAAAc,gBAAA,CAAzBF,MAAM,CAAC0B,UAAU,OACxBtC,mBAAA,CAA4C,YAAAc,gBAAA,CAArCJ,QAAA,CAAA6B,UAAU,CAAC3B,MAAM,CAAC4B,UAAU,O","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}