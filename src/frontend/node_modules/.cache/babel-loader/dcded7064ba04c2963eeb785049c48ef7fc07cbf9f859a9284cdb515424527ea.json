{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '../axios';\nimport '../assets/styles.css';\nexport default {\n  name: 'PaymentSuccess',\n  data() {\n    return {\n      orderId: Array.isArray(this.$route.query.orderId) ? this.$route.query.orderId[0] : this.$route.query.orderId,\n      amount: Array.isArray(this.$route.query.amount) ? this.$route.query.amount[0] : this.$route.query.amount,\n      paymentKey: Array.isArray(this.$route.query.paymentKey) ? this.$route.query.paymentKey.find(key => key) : this.$route.query.paymentKey,\n      customerName: this.$route.query.customerName\n    };\n  },\n  async created() {\n    try {\n      await this.requestPaymentApproval();\n    } catch (error) {\n      console.error('결제 승인 요청 중 오류 발생:', error);\n      alert('결제 승인 중 오류가 발생했습니다. 다시 시도하세요.');\n    }\n  },\n  methods: {\n    async requestPaymentApproval() {\n      const paymentApproveRequest = {\n        paymentKey: this.paymentKey,\n        orderId: this.orderId,\n        amount: parseInt(this.amount, 10),\n        // 문자열을 숫자로 변환\n        customerName: this.customerName,\n        email: this.email,\n        phoneNumber: this.phoneNumber\n      };\n      try {\n        console.log('결제 승인 요청 전송:', paymentApproveRequest); // 디버깅을 위해 로그 추가\n        const approveResponse = await axios.post('/api/payment/approve', paymentApproveRequest);\n        if (approveResponse.status === 200) {\n          console.log('결제 승인 성공:', approveResponse.data);\n        } else {\n          console.error('결제 승인 실패:', approveResponse);\n          throw new Error('결제 승인 실패');\n        }\n      } catch (error) {\n        console.error('결제 승인 에러:', error);\n        throw error;\n      }\n    },\n    goOrderDetail() {\n      this.$router.push(`/order-detail/${this.orderId}`);\n    },\n    goHome() {\n      this.$router.push('/');\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","orderId","Array","isArray","$route","query","amount","paymentKey","find","key","customerName","created","requestPaymentApproval","error","console","alert","methods","paymentApproveRequest","parseInt","email","phoneNumber","log","approveResponse","post","status","Error","goOrderDetail","$router","push","goHome"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\PaymentSuccess.vue"],"sourcesContent":["<template>\n  <div class=\"main-container\">\n    <div class=\"box-container\">\n      <h2 class=\"text-melon\">결제가 성공적으로 완료되었습니다!</h2>\n      <hr class=\"line\">\n      <div>\n        <p>주문 번호: {{ orderId }}</p>\n        <h4>결제 금액: {{ amount }} 원</h4>\n      </div>\n      <hr class=\"line\">\n      <div class=\"btn-container\">\n        <button @click=\"goOrderDetail\" class=\"btn btn-green\">주문 내역 확인하기</button>\n        <button @click=\"goHome\" class=\"btn btn-gray\">홈으로 돌아가기</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from '../axios';\nimport '../assets/styles.css';\n\nexport default {\n  name: 'PaymentSuccess',\n  data() {\n    return {\n      orderId: Array.isArray(this.$route.query.orderId) ? this.$route.query.orderId[0] : this.$route.query.orderId,\n      amount: Array.isArray(this.$route.query.amount) ? this.$route.query.amount[0] : this.$route.query.amount,\n      paymentKey: Array.isArray(this.$route.query.paymentKey) ? this.$route.query.paymentKey.find(key => key) : this.$route.query.paymentKey,\n      customerName: this.$route.query.customerName\n    };\n  },\n  async created() {\n    try {\n      await this.requestPaymentApproval();\n    } catch (error) {\n      console.error('결제 승인 요청 중 오류 발생:', error);\n      alert('결제 승인 중 오류가 발생했습니다. 다시 시도하세요.');\n    }\n  },\n  methods: {\n    async requestPaymentApproval() {\n      const paymentApproveRequest = {\n        paymentKey: this.paymentKey,\n        orderId: this.orderId,\n        amount: parseInt(this.amount, 10), // 문자열을 숫자로 변환\n        customerName: this.customerName,\n        email: this.email,\n        phoneNumber: this.phoneNumber\n      };\n\n      try {\n        console.log('결제 승인 요청 전송:', paymentApproveRequest); // 디버깅을 위해 로그 추가\n        const approveResponse = await axios.post('/api/payment/approve', paymentApproveRequest);\n        if (approveResponse.status === 200) {\n          console.log('결제 승인 성공:', approveResponse.data);\n        } else {\n          console.error('결제 승인 실패:', approveResponse);\n          throw new Error('결제 승인 실패');\n        }\n      } catch (error) {\n        console.error('결제 승인 에러:', error);\n        throw error;\n      }\n    },\n    goOrderDetail() {\n      this.$router.push(`/order-detail/${this.orderId}`);\n    },\n    goHome() {\n      this.$router.push('/');\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* 필요한 스타일을 여기에 추가하세요 */\n</style>\n"],"mappings":";AAmBA,OAAOA,KAAI,MAAO,UAAU;AAC5B,OAAO,sBAAsB;AAE7B,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAEC,KAAK,CAACC,OAAO,CAAC,IAAI,CAACC,MAAM,CAACC,KAAK,CAACJ,OAAO,IAAI,IAAI,CAACG,MAAM,CAACC,KAAK,CAACJ,OAAO,CAAC,CAAC,IAAI,IAAI,CAACG,MAAM,CAACC,KAAK,CAACJ,OAAO;MAC5GK,MAAM,EAAEJ,KAAK,CAACC,OAAO,CAAC,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,IAAI,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,MAAM,CAAC,CAAC,IAAI,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,MAAM;MACxGC,UAAU,EAAEL,KAAK,CAACC,OAAO,CAAC,IAAI,CAACC,MAAM,CAACC,KAAK,CAACE,UAAU,IAAI,IAAI,CAACH,MAAM,CAACC,KAAK,CAACE,UAAU,CAACC,IAAI,CAACC,GAAE,IAAKA,GAAG,IAAI,IAAI,CAACL,MAAM,CAACC,KAAK,CAACE,UAAU;MACtIG,YAAY,EAAE,IAAI,CAACN,MAAM,CAACC,KAAK,CAACK;IAClC,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAM,IAAI,CAACC,sBAAsB,CAAC,CAAC;IACrC,EAAE,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzCE,KAAK,CAAC,+BAA+B,CAAC;IACxC;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMJ,sBAAsBA,CAAA,EAAG;MAC7B,MAAMK,qBAAoB,GAAI;QAC5BV,UAAU,EAAE,IAAI,CAACA,UAAU;QAC3BN,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBK,MAAM,EAAEY,QAAQ,CAAC,IAAI,CAACZ,MAAM,EAAE,EAAE,CAAC;QAAE;QACnCI,YAAY,EAAE,IAAI,CAACA,YAAY;QAC/BS,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,WAAW,EAAE,IAAI,CAACA;MACpB,CAAC;MAED,IAAI;QACFN,OAAO,CAACO,GAAG,CAAC,cAAc,EAAEJ,qBAAqB,CAAC,EAAE;QACpD,MAAMK,eAAc,GAAI,MAAMxB,KAAK,CAACyB,IAAI,CAAC,sBAAsB,EAAEN,qBAAqB,CAAC;QACvF,IAAIK,eAAe,CAACE,MAAK,KAAM,GAAG,EAAE;UAClCV,OAAO,CAACO,GAAG,CAAC,WAAW,EAAEC,eAAe,CAACtB,IAAI,CAAC;QAChD,OAAO;UACLc,OAAO,CAACD,KAAK,CAAC,WAAW,EAAES,eAAe,CAAC;UAC3C,MAAM,IAAIG,KAAK,CAAC,UAAU,CAAC;QAC7B;MACF,EAAE,OAAOZ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC,MAAMA,KAAK;MACb;IACF,CAAC;IACDa,aAAaA,CAAA,EAAG;MACd,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,iBAAiB,IAAI,CAAC3B,OAAO,EAAE,CAAC;IACpD,CAAC;IACD4B,MAAMA,CAAA,EAAG;MACP,IAAI,CAACF,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}