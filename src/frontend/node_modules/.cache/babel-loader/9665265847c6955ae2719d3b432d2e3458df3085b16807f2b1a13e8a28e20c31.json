{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0549f723\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"text-melon\"\n}, \"후기 상세보기\", -1));\nconst _hoisted_3 = {\n  class: \"box-container\"\n};\nconst _hoisted_4 = {\n  style: {\n    \"display\": \"flex\",\n    \"padding\": \"20px\"\n  }\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  style: {\n    \"text-align\": \"left\"\n  }\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1));\nconst _hoisted_10 = {\n  key: 0\n};\nconst _hoisted_11 = [\"src\"];\nconst _hoisted_12 = {\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_13 = {\n  key: 1\n};\nconst _hoisted_14 = [\"innerHTML\"];\nconst _hoisted_15 = {\n  class: \"btn-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_star_rating = _resolveComponent(\"star-rating\");\n  const _component_RichTextEditor = _resolveComponent(\"RichTextEditor\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"img\", {\n    src: $options.productImage,\n    alt: \"Product Image\",\n    style: {\n      \"width\": \"100px\"\n    }\n  }, null, 8, _hoisted_5), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"p\", null, [_createTextVNode(\" 주문 번호: \" + _toDisplayString($options.orderNo) + \" \", 1), _hoisted_7, _createTextVNode(\" 제품명: \" + _toDisplayString($options.productName) + \" \", 1), _hoisted_8, _createTextVNode(\" 주문 날짜: \" + _toDisplayString($options.formattedOrderDate) + \" \", 1), _hoisted_9])])]), !$data.isEditing ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.extractImages($data.reviewContent), image => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: image,\n      style: {\n        \"display\": \"inline-block\",\n        \"margin\": \"5px\"\n      }\n    }, [_createElementVNode(\"img\", {\n      src: image,\n      alt: \"Review Image\",\n      style: {\n        \"width\": \"100px\"\n      }\n    }, null, 8, _hoisted_11)]);\n  }), 128))])) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_12, [_createVNode(_component_star_rating, {\n    modelValue: $data.rating,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.rating = $event),\n    \"star-size\": 30,\n    \"show-rating\": false,\n    \"disable-click\": !$data.isEditing\n  }, null, 8, [\"modelValue\", \"disable-click\"])]), $data.isEditing ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createVNode(_component_RichTextEditor, {\n    modelValue: $data.reviewContent,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.reviewContent = $event)\n  }, null, 8, [\"modelValue\"])])) : (_openBlock(), _createElementBlock(\"div\", {\n    key: 2,\n    innerHTML: $options.extractText($data.reviewContent)\n  }, null, 8, _hoisted_14)), _createElementVNode(\"div\", _hoisted_15, [!$data.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[2] || (_cache[2] = $event => $data.isEditing = true),\n    class: \"btn btn-green\"\n  }, \"수정\")) : (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.saveReview && $options.saveReview(...args)),\n    class: \"btn btn-green\"\n  }, \"저장\")), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.navigateToReviewList && $options.navigateToReviewList(...args)),\n    class: \"btn btn-gray\"\n  }, \"목록으로\")])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","src","$options","productImage","alt","_hoisted_5","_hoisted_6","_createTextVNode","_toDisplayString","orderNo","_hoisted_7","productName","_hoisted_8","formattedOrderDate","_hoisted_9","$data","isEditing","_hoisted_10","_Fragment","_renderList","extractImages","reviewContent","image","_hoisted_11","_createCommentVNode","_hoisted_12","_createVNode","_component_star_rating","modelValue","rating","_cache","$event","_hoisted_13","_component_RichTextEditor","innerHTML","extractText","_hoisted_14","_hoisted_15","onClick","args","saveReview","navigateToReviewList"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\ReviewDetail.vue"],"sourcesContent":["<template>\n  <div class=\"main-container\">\n    <h2 class=\"text-melon\">후기 상세보기</h2>\n    <div class=\"box-container\">\n    <!-- 제품정보 출력 -->\n    <div style=\"display: flex; padding: 20px;\">\n      <img :src=\"productImage\" alt=\"Product Image\" style=\"width: 100px;\">\n      <div style=\"text-align: left;\">\n        <p>\n          주문 번호: {{ orderNo }} <br>\n          제품명: {{ productName }} <br>\n          주문 날짜: {{ formattedOrderDate }} <br>\n        </p>\n      </div>\n    </div>\n\n    <!-- 이미지 -->\n    <div v-if=\"!isEditing\">\n      <div v-for=\"image in extractImages(reviewContent)\" :key=\"image\" style=\"display: inline-block; margin: 5px;\">\n        <img :src=\"image\" alt=\"Review Image\" style=\"width: 100px;\">\n      </div>\n    </div>\n\n    <!-- 별점 -->\n    <div style=\"text-align: center;\">\n      <star-rating v-model=\"rating\" :star-size=\"30\" :show-rating=\"false\" :disable-click=\"!isEditing\"></star-rating>\n    </div>\n\n    <!-- 내용 -->\n    <div v-if=\"isEditing\">\n      <RichTextEditor v-model=\"reviewContent\" />\n    </div>\n    <div v-else v-html=\"extractText(reviewContent)\"></div>\n    <div class=\"btn-container\">\n      <button v-if=\"!isEditing\" @click=\"isEditing = true\" class=\"btn btn-green\">수정</button>\n      <button v-else @click=\"saveReview\" class=\"btn btn-green\">저장</button>\n      <button @click=\"navigateToReviewList\" class=\"btn btn-gray\">목록으로</button>\n    </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from '../axios'\nimport StarRating from 'vue3-star-ratings';\nimport { mapState } from 'vuex';\nimport '../assets/styles.css';\nimport RichTextEditor from '@/components/RichTextEditor.vue';\n\nexport default {\n  components: {\n    'star-rating': StarRating,\n    RichTextEditor\n  },\n  data() {\n    return {\n      reviewContent: '',\n      rating: 0,\n      reviewId: null,\n      isEditing: false\n    };\n  },\n  computed: {\n    ...mapState('member', ['memberId']),\n    orderNo() {\n      return this.$route.query.orderNo;\n    },\n    orderDate() {\n      return this.$route.query.orderDate;\n    },\n    productId() {\n      return this.$route.query.productId;\n    },\n    productName() {\n      return this.$route.query.productName;\n    },\n    productImage() {\n      return this.$route.query.productImage;\n    },\n    orderDetailNo() {\n      return this.$route.query.orderDetailNo;\n    },\n    formattedOrderDate() {\n      const options = { month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n      const formattedDate = new Date(this.orderDate).toLocaleDateString('ko-KR', options).replace(/\\./g, '').replace(/\\s/g, '. ');\n      return `${formattedDate}. 주문`;\n    },\n  },\n  mounted() {\n    this.reviewId = this.$route.query.reviewId;\n    this.reviewContent = this.$route.query.reviewContent || '';\n    this.rating = this.$route.query.rating || 0;\n\n    console.log('Received query params:');\n    console.log('orderNo:', this.orderNo);\n    console.log('orderDate:', this.orderDate);\n    console.log('productId:', this.productId);\n    console.log('productName:', this.productName);\n    console.log('productImage:', this.productImage);\n    console.log('orderDetailNo:', this.orderDetailNo);\n  },\n  methods: {\n    extractText(content) {\n      // 텍스트만 추출\n      return content.replace(/<\\/?p>/g, '').replace(/<\\/?[^>]+(>|$)/g, \"\").trim();\n    },\n    extractImages(content) {\n      // 이미지 URL을 추출하는 로직\n      const images = [];\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(content, 'text/html');\n      const imgTags = doc.querySelectorAll('img');\n      imgTags.forEach(img => {\n        images.push(img.src);\n      });\n      return images;\n    },\n    async saveReview() {\n      try {\n        const response = await axios.put(`/api/reviews/update/${this.reviewId}`, {\n          reviewContent: this.reviewContent,\n          rating: this.rating\n        }, {\n          withCredentials: true\n        });\n        console.log('서버응답:', response),\n        console.log('Review updated successfully');\n        this.isEditing = false;\n      } catch (error) {\n        console.error('Failed to update review:', error);\n      }\n    },\n    navigateToReviewList() {\n      this.$router.push('/reviewlist');\n    }\n  }\n};\n</script>\n\n<style scoped>\n.box-container {\n  background: white;\n  padding: 30px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 20px;\n  text-align: left;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}