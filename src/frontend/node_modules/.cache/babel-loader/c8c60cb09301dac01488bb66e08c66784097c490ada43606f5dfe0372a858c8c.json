{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9e2eb9c6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"chart-container\"\n};\nconst _hoisted_2 = {\n  ref: \"chartCanvas\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"canvas\", _hoisted_2, null, 512)]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\components\\AgeGroupTopProducts.vue"],"sourcesContent":["<template>\n  <div class=\"chart-container\">\n    <canvas ref=\"chartCanvas\"></canvas>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport Chart from 'chart.js/auto';\nimport axios from 'axios';\n\nexport default {\n  name: 'TopProductsChart',\n  setup() {\n    const chartCanvas = ref(null);\n    const chartInstance = ref(null);\n\n    const fetchTopProducts = async () => {\n      const response = await axios.get('/api/surveys/top-products');\n      return response.data;\n    };\n\n    onMounted(async () => {\n      const topProducts = await fetchTopProducts();\n      createChart(topProducts);\n    });\n\n    const createChart = (topProducts) => {\n      const ctx = chartCanvas.value.getContext('2d');\n      const labels = topProducts.map(product => product.product_name);\n      const data = topProducts.map(product => product.total_quantity_sold);\n\n      if (chartInstance.value) {\n        chartInstance.value.destroy();\n      }\n\n      chartInstance.value = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: '판매량',\n            data: data,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          indexAxis: 'y', // 가로 막대형 차트로 변경\n          scales: {\n            x: {\n              beginAtZero: true,\n              ticks: {\n                stepSize: 1\n              },\n              title: {\n                display: true,\n                text: '판매량 (개)'\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: '제품'\n              }\n            }\n          }\n        }\n      });\n    };\n\n    return {\n      chartCanvas\n    };\n  }\n};\n</script>\n\n<style scoped>\n.chart-container {\n  position: relative;\n  height: 440                                   px; /* 차트 높이 조정 */\n  width: 100%;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAiB;;EAClBC,GAAG,EAAC;AAAa;;uBAD3BC,mBAAA,CAEM,OAFNC,UAEM,GADJC,mBAAA,CAAmC,UAAnCC,UAAmC,a","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}