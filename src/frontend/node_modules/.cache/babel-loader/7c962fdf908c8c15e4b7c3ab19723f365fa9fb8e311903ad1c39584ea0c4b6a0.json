{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5ed664ad\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"text-melon\"\n}, \"장바구니\", -1));\nconst _hoisted_3 = {\n  class: \"box-container box-shadow\"\n};\nconst _hoisted_4 = {\n  class: \"bttn-container\",\n  style: {\n    \"width\": \"300px\"\n  }\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", {\n  class: \"line\"\n}, null, -1));\nconst _hoisted_6 = {\n  key: 0,\n  class: \"line-table\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  colspan: \"2\"\n}, \"상품\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"수량\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"가격\"), /*#__PURE__*/_createElementVNode(\"th\")])], -1));\nconst _hoisted_8 = [\"onUpdate:modelValue\"];\nconst _hoisted_9 = {\n  class: \"item-image\"\n};\nconst _hoisted_10 = [\"src\"];\nconst _hoisted_11 = {\n  class: \"item-quantity\"\n};\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = [\"onClick\"];\nconst _hoisted_15 = {\n  key: 1\n};\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", {\n  class: \"line\"\n}, null, -1));\nconst _hoisted_17 = {\n  key: 2,\n  class: \"total-amount\"\n};\nconst _hoisted_18 = {\n  key: 3,\n  class: \"btn-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.selectAllItems && $options.selectAllItems(...args)),\n    class: \"btn btn-green\"\n  }, \"전체 선택\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.deselectAllItems && $options.deselectAllItems(...args)),\n    class: \"btn btn-gray\"\n  }, \"전체 선택 해제\")]), _hoisted_5, $data.localCartItems.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_6, [_hoisted_7, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.localCartItems, item => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: item.cartNo\n    }, [_createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => item.selected = $event\n    }, null, 8, _hoisted_8), [[_vModelCheckbox, item.selected]])]), _createElementVNode(\"td\", null, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"img\", {\n      src: item.productImage || '../assets/product_01.png',\n      alt: \"\"\n    }, null, 8, _hoisted_10)])]), _createElementVNode(\"td\", null, _toDisplayString(item.productName), 1), _createElementVNode(\"td\", null, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"button\", {\n      onClick: $event => $options.decreaseQuantity(item)\n    }, \"-\", 8, _hoisted_12), _createElementVNode(\"span\", null, _toDisplayString(item.productQuantity), 1), _createElementVNode(\"button\", {\n      onClick: $event => $options.increaseQuantity(item)\n    }, \"+\", 8, _hoisted_13)])]), _createElementVNode(\"td\", null, _toDisplayString(item.price * item.productQuantity) + \" 원\", 1), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.deleteCartItem(item),\n      class: \"btn btn-gray\"\n    }, \"삭제\", 8, _hoisted_14)])]);\n  }), 128))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_15, \" 장바구니에 상품이 없습니다. \")), _hoisted_16, $data.localCartItems.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, \"선택한 상품 총 금액: \" + _toDisplayString($options.totalAmount) + \" 원\", 1)) : _createCommentVNode(\"\", true), $data.localCartItems.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.placeOrder && $options.placeOrder(...args)),\n    class: \"btn btn-green\"\n  }, \"주문하기\")])) : _createCommentVNode(\"\", true)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","key","colspan","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","onClick","_cache","args","$options","selectAllItems","deselectAllItems","_hoisted_5","$data","localCartItems","length","_hoisted_6","_hoisted_7","_Fragment","_renderList","item","cartNo","type","$event","selected","_hoisted_8","_hoisted_9","src","productImage","alt","_hoisted_10","_toDisplayString","productName","_hoisted_11","decreaseQuantity","_hoisted_12","productQuantity","increaseQuantity","_hoisted_13","price","deleteCartItem","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","totalAmount","_createCommentVNode","_hoisted_18","placeOrder"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\CartPage.vue"],"sourcesContent":["<template>\n  <div class=\"main-container\">\n    <h2 class=\"text-melon\">장바구니</h2>\n      <div class=\"box-container box-shadow\">\n        <div class=\"bttn-container\" style=\"width: 300px;\">\n          <button @click=\"selectAllItems\" class=\"btn btn-green\">전체 선택</button>\n          <button @click=\"deselectAllItems\" class=\"btn btn-gray\">전체 선택 해제</button>\n        </div>\n        <hr class=\"line\">\n          <table class=\"line-table\" v-if=\"localCartItems.length > 0\">\n\n            <thead>\n              <tr>\n                <th></th>\n                  <th colspan=\"2\">상품</th>\n                  <th>수량</th>\n                  <th>가격</th>\n                  <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"item in localCartItems\" :key=\"item.cartNo\">\n                <td><input type=\"checkbox\" v-model=\"item.selected\" /></td>\n                <td ><div class=\"item-image\"><img :src=\"item.productImage || '../assets/product_01.png'\" alt=\"\"></div></td>\n                <td>{{ item.productName }}</td>\n                <td>\n                  <div class=\"item-quantity\">\n                    <button @click=\"decreaseQuantity(item)\">-</button>\n                    <span>{{ item.productQuantity }}</span>\n                    <button @click=\"increaseQuantity(item)\">+</button>\n                    </div>\n                </td>\n                <td>{{ item.price * item.productQuantity }} 원</td>\n                <td>\n                  <button @click=\"deleteCartItem(item)\" class=\"btn btn-gray\">삭제</button>\n                  </td>\n              </tr>\n            </tbody>\n          </table>\n          <div v-else>\n              장바구니에 상품이 없습니다.\n          </div>\n          <hr class=\"line\">\n          <div class=\"total-amount\" v-if=\"localCartItems.length > 0\">선택한 상품 총 금액: {{ totalAmount }} 원</div>\n          <div class=\"btn-container\" v-if=\"localCartItems.length > 0\">\n              <button @click=\"placeOrder\" class=\"btn btn-green\">주문하기</button>\n          </div>\n      </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport axios from 'axios';\nimport '../assets/styles.css';\n\nexport default {\n  name: 'CartPage',\n  data() {\n    return {\n      localCartItems: [] // 로컬 상태로 관리할 장바구니 항목\n    };\n  },\n  computed: {\n    ...mapState('cart', {\n      cartItems: state => state.cartItems\n    }),\n    totalAmount() {\n      return this.localCartItems\n        .filter(item => item.selected)\n        .reduce((total, item) => total + item.price * item.productQuantity, 0);\n    }\n  },\n  watch: {\n    cartItems: {\n      immediate: true,\n      handler(newItems) {\n        // Vuex 상태가 변경될 때 로컬 상태를 업데이트\n        this.localCartItems = newItems.map(item => ({\n          ...item,\n          selected: true // 모든 아이템을 기본적으로 선택 상태로 설정\n        }));\n\n        // 각 제품의 이미지를 가져오는 작업 수행\n        this.localCartItems.forEach(item => {\n          this.fetchProductImage(item);\n        });\n      }\n    }\n  },\n  methods: {\n    async fetchProductImage(item) {\n      try {\n        const response = await axios.get(`/api/products/detail/${item.productId}`);\n        item.productImage = this.extractFirstImage(response.data.productImage);\n      } catch (error) {\n        console.error(`Error fetching image for product ID ${item.productId}:`, error);\n        item.productImage = null; // 기본 이미지로 설정\n      }\n    },\n    extractFirstImage(htmlString) {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(htmlString, 'text/html');\n      const imgTag = doc.querySelector('img');\n      return imgTag ? imgTag.src : null;\n    },\n    decreaseQuantity(item) {\n      if (item.productQuantity > 1) {\n        item.productQuantity--;\n        this.updateCartItem(item);\n      }\n    },\n    increaseQuantity(item) {\n      item.productQuantity++;\n      this.updateCartItem(item);\n    },\n    async updateCartItem(item) {\n      try {\n        await this.$store.dispatch('cart/updateCartItem', item);\n        // 선택 상태 유지\n        const updatedItem = this.localCartItems.find(localItem => localItem.cartNo === item.cartNo);\n        if (updatedItem) {\n          updatedItem.selected = item.selected;\n        }\n      } catch (error) {\n        console.error('장바구니 항목 업데이트 에러:', error);\n      }\n    },\n    async deleteCartItem(item) {\n      try {\n        await this.$store.dispatch('cart/deleteCartItem', item.cartNo);\n        this.localCartItems = this.localCartItems.filter(localItem => localItem.cartNo !== item.cartNo);\n      } catch (error) {\n        console.error('장바구니 항목 삭제 에러:', error);\n      }\n    },\n    selectAllItems() {\n      this.localCartItems.forEach(item => {\n        item.selected = true;\n      });\n    },\n    deselectAllItems() {\n      this.localCartItems.forEach(item => {\n        item.selected = false;\n      });\n    },\n    async placeOrder() {\n      const selectedItems = this.localCartItems.filter(item => item.selected);\n      if (selectedItems.length === 0) {\n        alert('주문할 상품을 선택하세요.');\n        return;\n      }\n      try {\n        await axios.post('/api/orders/prepare', selectedItems, { withCredentials: true });\n        this.$router.push({ name: 'Order' });\n      } catch (error) {\n        console.error('Error preparing order:', error);\n      }\n    }\n  },\n  mounted() {\n    this.$store.dispatch('cart/fetchCartItems');\n  }\n};\n</script>\n\n<style scoped>\n.bttn-container {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n.delete-btn {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n}\n\n.item-image img {\n  width: 200px;\n  height: 200px;\n  object-fit: cover;\n  border-radius: 8px;\n}\n\n.item-quantity {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  justify-content: center;\n}\n\n.item-quantity button {\n  width: 30px;\n  height: 30px;\n  background-color: #ddd;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.total-amount {\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 20px;\n  font-size: 1.5rem;\n  font-weight: bold;\n  background-color: #f1f1f1;\n  border-radius: 8px;\n  margin-top: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}