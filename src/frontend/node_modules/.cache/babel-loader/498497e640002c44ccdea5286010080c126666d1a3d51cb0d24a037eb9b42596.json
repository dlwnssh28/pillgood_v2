{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelRadio as _vModelRadio, withDirectives as _withDirectives, createTextVNode as _createTextVNode, vModelText as _vModelText, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-399704e5\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = {\n  class: \"box-container box-shadow\"\n};\nconst _hoisted_3 = {\n  class: \"order-no\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"return-exchange-info\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"return-exchange-title\"\n}, \" 반품/환불 안내 \"), /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"return-exchange-description\"\n}, \" 반품 및 환불 신청 페이지에 모든 항목을 기재하신 후, 상품을 우체국으로 이용해 착불로 보내주세요. \")], -1));\nconst _hoisted_5 = {\n  class: \"form-group check-container\"\n};\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"상세 사유 입력 (선택사항)\", -1));\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"은행명\", -1));\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"계좌번호\", -1));\nconst _hoisted_12 = {\n  class: \"form-group\"\n};\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"예금주\", -1));\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-green\",\n  type: \"submit\"\n}, \"제출\", -1));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h2\", _hoisted_3, _toDisplayString($data.orderNo), 1), _hoisted_4, _createElementVNode(\"form\", {\n    onSubmit: _cache[7] || (_cache[7] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.requestType = $event),\n    value: \"반품\"\n  }, null, 512), [[_vModelRadio, $data.requestType]]), _createTextVNode(\" 반품\")]), _createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.requestType = $event),\n    value: \"환불\"\n  }, null, 512), [[_vModelRadio, $data.requestType]]), _createTextVNode(\" 환불\")])]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.detailedReason = $event),\n    onFocus: _cache[3] || (_cache[3] = (...args) => $options.clearTextArea && $options.clearTextArea(...args))\n  }, null, 544), [[_vModelText, $data.detailedReason]])]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.bankName = $event),\n    type: \"text\"\n  }, null, 512), [[_vModelText, $data.bankName]])]), _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.accountNumber = $event),\n    type: \"text\"\n  }, null, 512), [[_vModelText, $data.accountNumber]])]), _createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.accountHolder = $event),\n    type: \"text\"\n  }, null, 512), [[_vModelText, $data.accountHolder]])]), _hoisted_14], 32)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$data","orderNo","_hoisted_4","onSubmit","_cache","_withModifiers","args","$options","handleSubmit","_hoisted_5","$event","requestType","value","_createTextVNode","_hoisted_6","_hoisted_7","detailedReason","onFocus","clearTextArea","_hoisted_8","_hoisted_9","bankName","_hoisted_10","_hoisted_11","accountNumber","_hoisted_12","_hoisted_13","accountHolder","_hoisted_14"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\RefundCreate.vue"],"sourcesContent":["<template>\n  <div class=\"main-container\">\n    <div class=\"box-container box-shadow\">\n      <h2 class=\"order-no\">{{ orderNo }}</h2>\n      <div class=\"return-exchange-info\">\n        <div class=\"return-exchange-title\">\n          반품/환불 안내\n        </div>\n        <p class=\"return-exchange-description\">\n          반품 및 환불 신청 페이지에 모든 항목을 기재하신 후, 상품을 우체국으로 이용해 착불로 보내주세요.\n        </p>\n      </div>\n\n      <form @submit.prevent=\"handleSubmit\">\n        <div class=\"form-group check-container\">\n          <label><input type=\"radio\" v-model=\"requestType\" value=\"반품\"> 반품</label>\n          <label><input type=\"radio\" v-model=\"requestType\" value=\"환불\"> 환불</label>\n        </div>\n        \n        <div class=\"form-group\">\n          <label>상세 사유 입력 (선택사항)</label>\n          <textarea v-model=\"detailedReason\" @focus=\"clearTextArea\"></textarea>\n        </div>\n        \n        <div class=\"form-group\">\n          <label>은행명</label>\n          <input v-model=\"bankName\" type=\"text\">\n        </div>\n        \n        <div class=\"form-group\">\n          <label>계좌번호</label>\n          <input v-model=\"accountNumber\" type=\"text\">\n        </div>\n        \n        <div class=\"form-group\">\n          <label>예금주</label>\n          <input v-model=\"accountHolder\" type=\"text\">\n        </div>\n        <button class=\"btn btn-green\" type=\"submit\">제출</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from '../axios';\n\nexport default {\n  props: {\n    refundAmount: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      orderNo: this.$route.query.orderNo,\n      requestType: this.$route.query.requestType || '반품',\n      detailedReason: '상세 사유는 선택사항입니다.',\n      bankName: '',\n      accountNumber: '',\n      accountHolder: '',\n      refundStatus: '환불대기' // 기본값 설정\n    };\n  },\n  methods: {\n    clearTextArea() {\n      if (this.detailedReason === '상세 사유는 선택사항입니다.') {\n        this.detailedReason = '';\n      }\n    },\n    async handleSubmit() {\n      const refundData = {\n        refundRequestDate: new Date(),\n        refundCompleteDate: null,\n        orderDate: this.$route.query.orderDate,\n        totalRefundAmount: this.refundAmount,\n        refundMethod: this.requestType,\n        refundBank: this.bankName,\n        refundAccount: this.accountNumber,\n        accountHolder: this.accountHolder,\n        refundStatus: this.refundStatus,\n        orderNo: this.orderNo,\n        userId: this.$store.state.member.id\n      };\n\n      try {\n        const response = await axios.post('/api/refunds/create', refundData);\n        console.log('환불 정보가 성공적으로 저장되었습니다:', response.data);\n        this.$router.push({ name: 'RefundDetail', params: { orderNo: refundData.orderNo } });\n      } catch (error) {\n        console.error('환불 정보 저장 중 오류가 발생했습니다:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.main-container {\n  padding: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}