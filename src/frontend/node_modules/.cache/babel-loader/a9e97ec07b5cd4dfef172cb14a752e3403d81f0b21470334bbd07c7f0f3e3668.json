{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6f65f23a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = {\n  class: \"box-container\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"text-melon\"\n}, \"결제가 성공적으로 완료되었습니다!\", -1));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", {\n  class: \"line\"\n}, null, -1));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", {\n  class: \"line\"\n}, null, -1));\nconst _hoisted_6 = {\n  class: \"btn-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _hoisted_4, _createElementVNode(\"div\", null, [_createElementVNode(\"p\", null, \"주문 번호: \" + _toDisplayString($data.orderId), 1), _createElementVNode(\"h4\", null, \"결제 금액: \" + _toDisplayString($data.amount) + \" 원\", 1)]), _hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goOrderDetail && $options.goOrderDetail(...args)),\n    class: \"btn btn-green\"\n  }, \"주문 내역 확인하기\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.goHome && $options.goHome(...args)),\n    class: \"btn btn-gray\"\n  }, \"홈으로 돌아가기\")])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$data","orderId","amount","_hoisted_5","_hoisted_6","onClick","_cache","args","$options","goOrderDetail","goHome"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\PaymentSuccess.vue"],"sourcesContent":["<template>\n  <div class=\"main-container\">\n    <div class=\"box-container\">\n      <h2 class=\"text-melon\">결제가 성공적으로 완료되었습니다!</h2>\n      <hr class=\"line\">\n      <div>\n        <p>주문 번호: {{ orderId }}</p>\n        <h4>결제 금액: {{ amount }} 원</h4>\n      </div>\n      <hr class=\"line\">\n      <div class=\"btn-container\">\n        <button @click=\"goOrderDetail\" class=\"btn btn-green\">주문 내역 확인하기</button>\n        <button @click=\"goHome\" class=\"btn btn-gray\">홈으로 돌아가기</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from '../axios';\nimport '../assets/styles.css';\n\nexport default {\n  name: 'PaymentSuccess',\n  data() {\n    return {\n      orderId: Array.isArray(this.$route.query.orderId) ? this.$route.query.orderId[0] : this.$route.query.orderId,\n      amount: Array.isArray(this.$route.query.amount) ? this.$route.query.amount[0] : this.$route.query.amount,\n      paymentKey: Array.isArray(this.$route.query.paymentKey) ? this.$route.query.paymentKey.find(key => key) : this.$route.query.paymentKey,\n      customerName: this.$route.query.customerName\n    };\n  },\n  async created() {\n    try {\n      await this.requestPaymentApproval();\n    } catch (error) {\n      console.error('결제 승인 요청 중 오류 발생:', error);\n      alert('결제 승인 중 오류가 발생했습니다. 다시 시도하세요.');\n    }\n  },\n  methods: {\n    async requestPaymentApproval() {\n      const paymentApproveRequest = {\n        paymentKey: this.paymentKey,\n        orderId: this.orderId,\n        amount: parseInt(this.amount, 10), // 문자열을 숫자로 변환\n        customerName: this.customerName,\n        email: this.email,\n        phoneNumber: this.phoneNumber\n      };\n\n      try {\n        console.log('결제 승인 요청 전송:', paymentApproveRequest); // 디버깅을 위해 로그 추가\n        const approveResponse = await axios.post('/api/payment/approve', paymentApproveRequest);\n        if (approveResponse.status === 200) {\n          console.log('결제 승인 성공:', approveResponse.data);\n        } else {\n          console.error('결제 승인 실패:', approveResponse);\n          throw new Error('결제 승인 실패');\n        }\n      } catch (error) {\n        console.error('결제 승인 에러:', error);\n        throw error;\n      }\n    },\n    goOrderDetail() {\n      this.$router.push(`/order-detail/${this.orderId}`);\n    },\n    goHome() {\n      this.$router.push('/');\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* 필요한 스타일을 여기에 추가하세요 */\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAe;gEACxBC,mBAAA,CAA8C;EAA1CD,KAAK,EAAC;AAAY,GAAC,oBAAkB;gEACzCC,mBAAA,CAAiB;EAAbD,KAAK,EAAC;AAAM;gEAKhBC,mBAAA,CAAiB;EAAbD,KAAK,EAAC;AAAM;;EACXA,KAAK,EAAC;AAAe;;uBAT9BE,mBAAA,CAcM,OAdNC,UAcM,GAbJF,mBAAA,CAYM,OAZNG,UAYM,GAXJC,UAA8C,EAC9CC,UAAiB,EACjBL,mBAAA,CAGM,cAFJA,mBAAA,CAA2B,WAAxB,SAAO,GAAAM,gBAAA,CAAGC,KAAA,CAAAC,OAAO,OACpBR,mBAAA,CAA8B,YAA1B,SAAO,GAAAM,gBAAA,CAAGC,KAAA,CAAAE,MAAM,IAAG,IAAE,K,GAE3BC,UAAiB,EACjBV,mBAAA,CAGM,OAHNW,UAGM,GAFJX,mBAAA,CAAwE;IAA/DY,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;IAAEf,KAAK,EAAC;KAAgB,YAAU,GAC/DC,mBAAA,CAA8D;IAArDY,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,MAAA,IAAAF,QAAA,CAAAE,MAAA,IAAAH,IAAA,CAAM;IAAEf,KAAK,EAAC;KAAe,UAAQ,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}