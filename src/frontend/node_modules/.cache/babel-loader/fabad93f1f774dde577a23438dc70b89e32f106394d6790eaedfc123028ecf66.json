{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '../axios'; // 'axios.js' 설정 파일을 import\n\nexport default {\n  data() {\n    return {\n      cancelReason: '',\n      orderNo: this.$route.params.orderNo,\n      paymentKey: null,\n      cancelAmount: null\n    };\n  },\n  async created() {\n    await this.fetchPaymentKey();\n  },\n  methods: {\n    async fetchPaymentKey() {\n      try {\n        const response = await axios.get(`/api/payment/payment-info/${this.orderNo}`);\n        if (response.status === 200 && response.data) {\n          this.paymentKey = response.data.paymentNo; // 주문 정보에서 결제 키를 가져옵니다.\n          this.cancelAmount = response.data.amount;\n        } else {\n          console.error('결제 키를 가져오는 중 오류 발생:', response);\n        }\n      } catch (error) {\n        console.error('결제 키를 가져오는 중 오류 발생:', error);\n      }\n    },\n    async cancelPayment() {\n      try {\n        const response = await axios.post('/api/payment/cancel', {\n          paymentKey: this.paymentKey,\n          cancelReason: this.cancelReason\n        });\n        if (response.status === 200) {\n          this.$router.push({\n            name: 'CancelSuccess'\n          }); // 결제 취소 성공 페이지로 이동\n        } else {\n          console.error('결제 취소 요청 실패:', response);\n        }\n      } catch (error) {\n        console.error('결제 취소 요청 중 오류 발생:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","cancelReason","orderNo","$route","params","paymentKey","cancelAmount","created","fetchPaymentKey","methods","response","get","status","paymentNo","amount","console","error","cancelPayment","post","$router","push","name"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\CancelPayment.vue"],"sourcesContent":["<template>\n  <div class=\"main-container\">\n    <h2 class=\"text-melon\">결제 취소 요청</h2>\n    <div class=\"box-container-no-shade\">\n      <div class=\"input-group\">\n        <label for=\"paymentKey\">결제 번호</label>\n        <input type=\"text\" id=\"paymentKey\" v-model=\"paymentKey\" readonly />\n      </div>\n      <div class=\"input-group\">\n        <label for=\"cancelAmount\">취소 금액</label>\n        <input type=\"number\" id=\"cancelAmount\" v-model=\"cancelAmount\" readonly/>\n      </div>\n      <div class=\"input-group\">\n        <label for=\"cancelReason\">취소 사유</label>\n        <input type=\"text\" id=\"cancelReason\" v-model=\"cancelReason\" />\n      </div>\n      <button class=\"btn btn-green\" @click=\"cancelPayment\">결제 취소</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from '../axios'; // 'axios.js' 설정 파일을 import\n\nexport default {\n  data() {\n    return {\n      cancelReason: '',\n      orderNo: this.$route.params.orderNo,\n      paymentKey: null,\n      cancelAmount: null,\n    };\n  },\n  async created() {\n    await this.fetchPaymentKey();\n  },\n  methods: {\n    async fetchPaymentKey() {\n      try {\n        const response = await axios.get(`/api/payment/payment-info/${this.orderNo}`);\n        if (response.status === 200 && response.data) {\n          this.paymentKey = response.data.paymentNo; // 주문 정보에서 결제 키를 가져옵니다.\n          this.cancelAmount = response.data.amount\n        } else {\n          console.error('결제 키를 가져오는 중 오류 발생:', response);\n        }\n      } catch (error) {\n        console.error('결제 키를 가져오는 중 오류 발생:', error);\n      }\n    },\n    async cancelPayment() {\n      try {\n        const response = await axios.post('/api/payment/cancel', {\n          paymentKey: this.paymentKey,\n          cancelReason: this.cancelReason\n        });\n        if (response.status === 200) {\n          this.$router.push({ name: 'CancelSuccess' }); // 결제 취소 성공 페이지로 이동\n        } else {\n          console.error('결제 취소 요청 실패:', response);\n        }\n      } catch (error) {\n        console.error('결제 취소 요청 중 오류 발생:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.main-container {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.input-group {\n  margin-bottom: 20px;\n}\n\n.input-group label {\n  display: block;\n  margin-bottom: 5px;\n}\n\n.input-group input {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.btn {\n  display: block;\n  width: 100%;\n  padding: 10px;\n  background-color: #5cb85c;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 1.2rem;\n  text-align: center;\n}\n\n.btn:hover {\n  background-color: #4cae4c;\n}\n</style>\n"],"mappings":";AAsBA,OAAOA,KAAI,MAAO,UAAU,EAAE;;AAE9B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,OAAO,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,OAAO;MACnCG,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,eAAe,CAAC,CAAC;EAC9B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMX,KAAK,CAACY,GAAG,CAAC,6BAA6B,IAAI,CAACT,OAAO,EAAE,CAAC;QAC7E,IAAIQ,QAAQ,CAACE,MAAK,KAAM,GAAE,IAAKF,QAAQ,CAACV,IAAI,EAAE;UAC5C,IAAI,CAACK,UAAS,GAAIK,QAAQ,CAACV,IAAI,CAACa,SAAS,EAAE;UAC3C,IAAI,CAACP,YAAW,GAAII,QAAQ,CAACV,IAAI,CAACc,MAAK;QACzC,OAAO;UACLC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEN,QAAQ,CAAC;QAChD;MACF,EAAE,OAAOM,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF,CAAC;IACD,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMP,QAAO,GAAI,MAAMX,KAAK,CAACmB,IAAI,CAAC,qBAAqB,EAAE;UACvDb,UAAU,EAAE,IAAI,CAACA,UAAU;UAC3BJ,YAAY,EAAE,IAAI,CAACA;QACrB,CAAC,CAAC;QACF,IAAIS,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAACO,OAAO,CAACC,IAAI,CAAC;YAAEC,IAAI,EAAE;UAAgB,CAAC,CAAC,EAAE;QAChD,OAAO;UACLN,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEN,QAAQ,CAAC;QACzC;MACF,EAAE,OAAOM,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MAC3C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}