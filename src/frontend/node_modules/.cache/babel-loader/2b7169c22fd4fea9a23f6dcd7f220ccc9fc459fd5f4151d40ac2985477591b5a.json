{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeaderView = _resolveComponent(\"HeaderView\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  const _component_FooterView = _resolveComponent(\"FooterView\");\n  const _component_BackToTop = _resolveComponent(\"BackToTop\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.showHeaderAndFooter ? (_openBlock(), _createBlock(_component_HeaderView, {\n    key: 0\n  })) : _createCommentVNode(\"\", true), _createElementVNode(\"main\", null, [_createVNode(_component_router_view)]), $setup.showHeaderAndFooter ? (_openBlock(), _createBlock(_component_FooterView, {\n    key: 1\n  })) : _createCommentVNode(\"\", true), _createVNode(_component_BackToTop)]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","$setup","showHeaderAndFooter","_createBlock","_component_HeaderView","key","_createCommentVNode","_createElementVNode","_createVNode","_component_router_view","_component_FooterView","_component_BackToTop"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <HeaderView v-if=\"showHeaderAndFooter\" />\n    <main>\n      <router-view />\n    </main>\n    <FooterView v-if=\"showHeaderAndFooter\" />\n    <BackToTop />\n  </div>\n</template>\n\n<script>\nimport { provide, ref, watch } from 'vue'\nimport { useRoute } from 'vue-router'\nimport HeaderView from './components/HeaderView.vue';\nimport FooterView from './components/FooterView.vue';\nimport BackToTop from './components/BackToTop.vue';\nimport { mapActions, mapState } from 'vuex';\n\nexport default {\n  name: 'App',\n  components: {\n    HeaderView,\n    FooterView,\n    BackToTop\n  },\n  setup() {\n    const route = useRoute()\n    const showHeaderAndFooter = ref(true)\n\n    provide('showHeaderAndFooter', showHeaderAndFooter)\n\n    const updateHeaderAndFooterVisibility = () => {\n      if (route.path.startsWith('/admin')) {\n        showHeaderAndFooter.value = false\n      } else {\n        showHeaderAndFooter.value = true\n      }\n    }\n\n    watch(route, updateHeaderAndFooterVisibility, { immediate: true })\n\n    return { showHeaderAndFooter }\n  },\n  computed: {\n    ...mapState('member', {\n      isLoggedIn: (state) => state.isLoggedIn,\n      memberId: (state) => state.memberId,\n      member: (state) => state.member,\n    }),\n  },\n  methods: {\n    ...mapActions('member', ['checkLoginStatus', 'fetchMemberInfo']),\n  },\n  async created() {\n    try {\n      await this.checkLoginStatus()\n      if (this.isLoggedIn && this.memberId) {\n        await this.fetchMemberInfo(this.memberId)\n      } else {\n        console.log('로그인되지 않았거나 memberId가 없음')\n      }\n    } catch (error) {\n      console.error('checkLoginStatus 에러:', error)\n    }\n\n    // 주기적으로 세션 상태 확인\n    setInterval(async () => {\n      try {\n        await this.checkLoginStatus()\n        if (this.isLoggedIn) {\n          await this.fetchMemberInfo(this.memberId)\n        } else {\n          console.log('로그인된 사용자가 없음')\n        }\n      } catch (error) {\n        console.error('세션 상태 확인 중 에러:', error)\n      }\n    }, 600000) // 10분마다 실행\n  },\n  mounted() {\n    // 카카오 SDK 로드 및 초기화\n    /* global Kakao */ // Kakao를 전역 변수로 선언\n    const kakaoScript = document.createElement('script')\n    kakaoScript.src = 'https://developers.kakao.com/sdk/js/kakao.js'\n    kakaoScript.onload = () => {\n      Kakao.init('03f074279f45f35b6bed2cfbcc42ec4d') // 카카오 개발자 콘솔에서 발급받은 JavaScript 키\n      console.log('Kakao SDK initialized')\n    }\n    document.head.appendChild(kakaoScript)\n  },\n  watch: {\n    isLoggedIn(newVal) {\n      console.log('A 로그인 상태 변경:', newVal) // 상태 변경 확인\n    },\n  },\n}\n</script>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;;;;;uBAAbC,mBAAA,CAOM,OAPNC,UAOM,GANcC,MAAA,CAAAC,mBAAmB,I,cAArCC,YAAA,CAAyCC,qBAAA;IAF7CC,GAAA;EAAA,MAAAC,mBAAA,YAGIC,mBAAA,CAEO,eADLC,YAAA,CAAeC,sBAAA,E,GAECR,MAAA,CAAAC,mBAAmB,I,cAArCC,YAAA,CAAyCO,qBAAA;IAN7CL,GAAA;EAAA,MAAAC,mBAAA,YAOIE,YAAA,CAAaG,oBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}