{"ast":null,"code":"import { ref, onMounted, watch } from 'vue';\nimport { useStore } from 'vuex';\nimport Chart from 'chart.js/auto';\nexport default {\n  name: 'AgeGroupDeficiencyChart',\n  props: {\n    userAge: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const chartCanvas = ref(null);\n    const store = useStore();\n    let chartInstance = null;\n    const getAgeGroup = age => {\n      if (age < 20) return '10-19';\n      if (age < 30) return '20-29';\n      if (age < 40) return '30-39';\n      if (age < 50) return '40-49';\n      if (age < 60) return '50-59';\n      return '60+';\n    };\n    const createChart = data => {\n      const ctx = chartCanvas.value.getContext('2d');\n      const ageGroup = getAgeGroup(props.userAge);\n      const filteredData = data.filter(item => item[0] === ageGroup);\n      if (filteredData.length === 0) {\n        console.warn(`No data available for age group: ${ageGroup}`);\n        return;\n      }\n\n      // 결핍 유형별 총 인원 수를 계산하고 정렬\n      const deficiencyCounts = filteredData.reduce((acc, item) => {\n        const deficiency = item[1];\n        const count = item[2];\n        if (!acc[deficiency]) {\n          acc[deficiency] = 0;\n        }\n        acc[deficiency] += count;\n        return acc;\n      }, {});\n\n      // 상위 세 개 항목 선택\n      const topDeficiencies = Object.entries(deficiencyCounts).sort((a, b) => b[1] - a[1]).slice(0, 3);\n      const deficiencies = topDeficiencies.map(item => item[0]);\n      const counts = topDeficiencies.map(item => item[1]);\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n      chartInstance = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: deficiencies,\n          datasets: [{\n            label: `Age Group: ${ageGroup}`,\n            data: counts,\n            backgroundColor: deficiencies.map(() => `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 0.5)`),\n            borderColor: deficiencies.map(() => `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 1)`),\n            borderWidth: 1\n          }]\n        },\n        options: {\n          indexAxis: 'y',\n          // 가로 막대형 차트로 변경\n          scales: {\n            x: {\n              beginAtZero: true,\n              ticks: {\n                stepSize: 1\n              },\n              title: {\n                display: true,\n                text: '인원 수 (명)'\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: '결핍 유형'\n              }\n            }\n          }\n        }\n      });\n    };\n    const loadDataAndCreateChart = () => {\n      const data = store.getters['survey/ageGroupDeficiencyData'];\n      if (data.length) {\n        createChart(data);\n      } else {\n        console.error('차트를 생성할 데이터가 없습니다.');\n      }\n    };\n    onMounted(() => {\n      store.dispatch('survey/fetchAgeGroupDeficiencyData').then(() => {\n        loadDataAndCreateChart();\n      });\n    });\n    watch(() => props.userAge, () => {\n      loadDataAndCreateChart();\n    });\n    return {\n      chartCanvas\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","useStore","Chart","name","props","userAge","type","Number","required","setup","chartCanvas","store","chartInstance","getAgeGroup","age","createChart","data","ctx","value","getContext","ageGroup","filteredData","filter","item","length","console","warn","deficiencyCounts","reduce","acc","deficiency","count","topDeficiencies","Object","entries","sort","a","b","slice","deficiencies","map","counts","destroy","labels","datasets","label","backgroundColor","Math","floor","random","borderColor","borderWidth","options","indexAxis","scales","x","beginAtZero","ticks","stepSize","title","display","text","y","loadDataAndCreateChart","getters","error","dispatch","then"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\components\\AgeGroupDeficiencyChart.vue"],"sourcesContent":["<template>\n  <div class=\"chart-container\">\n    <canvas ref=\"chartCanvas\"></canvas>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch } from 'vue';\nimport { useStore } from 'vuex';\nimport Chart from 'chart.js/auto';\n\nexport default {\n  name: 'AgeGroupDeficiencyChart',\n  props: {\n    userAge: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const chartCanvas = ref(null);\n    const store = useStore();\n    let chartInstance = null;\n\n    const getAgeGroup = (age) => {\n      if (age < 20) return '10-19';\n      if (age < 30) return '20-29';\n      if (age < 40) return '30-39';\n      if (age < 50) return '40-49';\n      if (age < 60) return '50-59';\n      return '60+';\n    };\n\n    const createChart = (data) => {\n      const ctx = chartCanvas.value.getContext('2d');\n      const ageGroup = getAgeGroup(props.userAge);\n      const filteredData = data.filter(item => item[0] === ageGroup);\n\n      if (filteredData.length === 0) {\n        console.warn(`No data available for age group: ${ageGroup}`);\n        return;\n      }\n\n      // 결핍 유형별 총 인원 수를 계산하고 정렬\n      const deficiencyCounts = filteredData.reduce((acc, item) => {\n        const deficiency = item[1];\n        const count = item[2];\n        if (!acc[deficiency]) {\n          acc[deficiency] = 0;\n        }\n        acc[deficiency] += count;\n        return acc;\n      }, {});\n\n      // 상위 세 개 항목 선택\n      const topDeficiencies = Object.entries(deficiencyCounts)\n        .sort((a, b) => b[1] - a[1])\n        .slice(0, 3);\n\n      const deficiencies = topDeficiencies.map(item => item[0]);\n      const counts = topDeficiencies.map(item => item[1]);\n\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n\n      chartInstance = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: deficiencies,\n          datasets: [{\n            label: `Age Group: ${ageGroup}`,\n            data: counts,\n            backgroundColor: deficiencies.map(() => `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 0.5)`),\n            borderColor: deficiencies.map(() => `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 1)`),\n            borderWidth: 1\n          }]\n        },\n        options: {\n          indexAxis: 'y', // 가로 막대형 차트로 변경\n          scales: {\n            x: {\n              beginAtZero: true,\n              ticks: {\n                stepSize: 1\n              },\n              title: {\n                display: true,\n                text: '인원 수 (명)'\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: '결핍 유형'\n              }\n            }\n          }\n        }\n      });\n    };\n\n    const loadDataAndCreateChart = () => {\n      const data = store.getters['survey/ageGroupDeficiencyData'];\n      if (data.length) {\n        createChart(data);\n      } else {\n        console.error('차트를 생성할 데이터가 없습니다.');\n      }\n    };\n\n    onMounted(() => {\n      store.dispatch('survey/fetchAgeGroupDeficiencyData').then(() => {\n        loadDataAndCreateChart();\n      });\n    });\n\n    watch(() => props.userAge, () => {\n      loadDataAndCreateChart();\n    });\n\n    return {\n      chartCanvas\n    };\n  }\n};\n</script>\n\n<style scoped>\n.chart-container {\n  position: relative;\n  height: 500px; /* 차트 높이 조정 */\n  width: 100%;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}