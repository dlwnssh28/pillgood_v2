{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions } from 'vuex';\nimport '../assets/styles.css';\nimport StarRating from 'vue3-star-ratings'; // 기본 내보내기로 수정\nimport RichTextEditor from '@/components/RichTextEditor.vue';\nexport default {\n  components: {\n    'star-rating': StarRating,\n    'rich-text-editor': RichTextEditor\n  },\n  data() {\n    return {\n      reviewContent: '',\n      rating: 0,\n      error: null // 에러 메시지\n    };\n  },\n  computed: {\n    orderNo() {\n      return this.$route.query.orderNo;\n    },\n    orderDate() {\n      return this.$route.query.orderDate;\n    },\n    productId() {\n      return this.$route.query.productId;\n    },\n    productName() {\n      return this.$route.query.productName;\n    },\n    productImage() {\n      return this.$route.query.productImage;\n    },\n    orderDetailNo() {\n      return this.$route.query.orderDetailNo;\n    },\n    formattedOrderDate() {\n      const options = {\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      };\n      const formattedDate = new Date(this.orderDate).toLocaleDateString('ko-KR', options).replace(/\\./g, '').replace(/\\s/g, '. ');\n      return `${formattedDate}. 주문`;\n    }\n  },\n  mounted() {\n    console.log('Received query params:');\n    console.log('orderNo:', this.orderNo);\n    console.log('orderDate:', this.orderDate);\n    console.log('productId:', this.productId);\n    console.log('productName:', this.productName);\n    console.log('productImage:', this.productImage);\n    console.log('orderDetailNo', this.orderDetailNo);\n  },\n  methods: {\n    ...mapActions('review', ['createReview']),\n    handleTextChange(textContent) {\n      console.log('Text content:', textContent);\n      if (textContent.length >= 10) {\n        this.error = null;\n      } else {\n        this.error = '리뷰는 최소 10자 이상 작성해야 합니다.';\n      }\n    },\n    async submitReview() {\n      const textContent = this.$refs.richTextEditor.getTextContent();\n      console.log('textContent.length:', textContent.length); // textContent.length 출력\n\n      if (textContent.length < 10) {\n        this.error = '리뷰는 최소 10자 이상 작성해야 합니다.';\n        return;\n      }\n      this.error = null; // 에러 메시지 제거\n\n      try {\n        const reviewData = {\n          orderNo: this.orderNo,\n          orderDate: this.orderDate,\n          productId: this.productId,\n          productName: this.productName,\n          reviewContent: this.reviewContent,\n          rating: this.rating,\n          memberUniqueId: this.memberId,\n          reviewDate: new Date().toISOString(),\n          orderDetailNo: this.orderDetailNo\n        };\n        console.log('리뷰 제출:', reviewData);\n        await this.createReview(reviewData);\n        alert('리뷰가 성공적으로 제출되었습니다.');\n        this.$router.push('/order-history');\n      } catch (error) {\n        console.error('리뷰 제출 실패:', error);\n        alert('리뷰 제출에 실패했습니다.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapActions","StarRating","RichTextEditor","components","data","reviewContent","rating","error","computed","orderNo","$route","query","orderDate","productId","productName","productImage","orderDetailNo","formattedOrderDate","options","month","day","hour","minute","formattedDate","Date","toLocaleDateString","replace","mounted","console","log","methods","handleTextChange","textContent","length","submitReview","$refs","richTextEditor","getTextContent","reviewData","memberUniqueId","memberId","reviewDate","toISOString","createReview","alert","$router","push"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\ReviewCreate.vue"],"sourcesContent":["<template>\n  <div class=\"main-container\">\n    <h2 class=\"text-melon\">리뷰 작성</h2>\n    <div style=\"text-align: left; display: flex\">\n      <img :src=\"productImage\" alt=\"Product Image\" style=\"width: 150px;\">\n      <p>\n        주문 번호: {{ orderNo }}<br>\n        주문 날짜: {{ formattedOrderDate }}<br>\n        제품 이름: {{ productName }}\n      </p>\n    </div>\n    <form @submit.prevent=\"submitReview\">\n      <star-rating \n        v-model=\"rating\" \n        :star-size=\"30\" \n        :show-rating=\"false\"\n        style=\"margin: 0 auto 10px auto;\"\n      ></star-rating>\n      <div>\n        <span v-if=\"error\" class=\"error\">{{ error }}</span> <!-- 에러 메시지 표시 -->\n        <rich-text-editor v-model=\"reviewContent\" ref=\"richTextEditor\" @text-change=\"handleTextChange\"></rich-text-editor>\n      </div>\n      <div class=\"btn-container\">\n        <button type=\"submit\" class=\"btn btn-green\">리뷰 작성</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex';\nimport '../assets/styles.css';\nimport StarRating from 'vue3-star-ratings'; // 기본 내보내기로 수정\nimport RichTextEditor from '@/components/RichTextEditor.vue';\n\nexport default {\n  components: {\n    'star-rating': StarRating,\n    'rich-text-editor': RichTextEditor,\n  },\n  data() {\n    return {\n      reviewContent: '',\n      rating: 0,\n      error: null, // 에러 메시지\n    };\n  },\n  computed: {\n    orderNo() {\n      return this.$route.query.orderNo;\n    },\n    orderDate() {\n      return this.$route.query.orderDate;\n    },\n    productId() {\n      return this.$route.query.productId;\n    },\n    productName() {\n      return this.$route.query.productName;\n    },\n    productImage() {\n      return this.$route.query.productImage;\n    },\n    orderDetailNo() {\n      return this.$route.query.orderDetailNo;\n    },\n    formattedOrderDate() {\n      const options = { month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n      const formattedDate = new Date(this.orderDate).toLocaleDateString('ko-KR', options).replace(/\\./g, '').replace(/\\s/g, '. ');\n      return `${formattedDate}. 주문`;\n    },\n  },\n  mounted() {\n    console.log('Received query params:');\n    console.log('orderNo:', this.orderNo);\n    console.log('orderDate:', this.orderDate);\n    console.log('productId:', this.productId);\n    console.log('productName:', this.productName);\n    console.log('productImage:', this.productImage);\n    console.log('orderDetailNo', this.orderDetailNo);\n  },\n  methods: {\n    ...mapActions('review', ['createReview']),\n    handleTextChange(textContent) {\n      console.log('Text content:', textContent);\n      if (textContent.length >= 10){\n        this.error = null;\n      } else {\n        this.error = '리뷰는 최소 10자 이상 작성해야 합니다.'\n      }\n    },\n    async submitReview() {\n\n      const textContent = this.$refs.richTextEditor.getTextContent();\n      console.log('textContent.length:', textContent.length); // textContent.length 출력\n\n      if (textContent.length < 10) {\n        this.error = '리뷰는 최소 10자 이상 작성해야 합니다.';\n        return;\n      }\n\n      this.error = null; // 에러 메시지 제거\n\n      try {\n        const reviewData = {\n          orderNo: this.orderNo,\n          orderDate: this.orderDate,\n          productId: this.productId,\n          productName: this.productName,\n          reviewContent: this.reviewContent,\n          rating: this.rating,\n          memberUniqueId: this.memberId,\n          reviewDate: new Date().toISOString(),\n          orderDetailNo: this.orderDetailNo\n        };\n        console.log('리뷰 제출:', reviewData);\n        await this.createReview(reviewData);\n        alert('리뷰가 성공적으로 제출되었습니다.');\n        this.$router.push('/order-history');\n      } catch (error) {\n        console.error('리뷰 제출 실패:', error);\n        alert('리뷰 제출에 실패했습니다.');\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.error {\n  color: red;\n  margin-top: 5px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}