{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions, mapGetters } from 'vuex';\nimport RichTextEditor from '@/components/RichTextEditor.vue';\nexport default {\n  name: 'ProductCreate',\n  components: {\n    RichTextEditor\n  },\n  data() {\n    return {\n      product: {\n        productName: '',\n        nutrientId: null,\n        price: '',\n        stock: '',\n        target: '공통',\n        productImage: '',\n        active: true\n      },\n      newNutrientName: '',\n      // 새로 추가되는 nutrient name\n      newNutrientDescription: '' // 새로 추가되는 nutrient description\n    };\n  },\n  async created() {\n    await this.fetchNutrients();\n  },\n  computed: {\n    ...mapGetters('nutrient', ['nutrients']),\n    nutrientList() {\n      console.log('nutrients 상태:', this.nutrients); // nutrients 상태 로그\n      return this.nutrients;\n    },\n    selectedNutrientDescription() {\n      const selectedNutrient = this.nutrientList.find(nutrient => nutrient.nutrientId === this.product.nutrientId);\n      return selectedNutrient ? selectedNutrient.description : '';\n    }\n  },\n  methods: {\n    ...mapActions('nutrient', ['fetchNutrients', 'createNutrient']),\n    ...mapActions('product', ['createProduct']),\n    handleNutrientChange() {\n      if (this.product.nutrientId !== 'new') {\n        this.newNutrientName = '';\n        this.newNutrientDescription = '';\n      }\n    },\n    async saveNewNutrient() {\n      if (!this.newNutrientName || !this.newNutrientDescription) {\n        alert('영양제와 효능을 입력해주세요');\n        return;\n      }\n      try {\n        console.log('새 영양소 저장 시도:', {\n          nutrientName: this.newNutrientName,\n          description: this.newNutrientDescription\n        });\n        const newNutrient = await this.createNutrient({\n          nutrientName: this.newNutrientName,\n          description: this.newNutrientDescription\n        });\n        console.log('새로운 영양제 등록 응답:', newNutrient); // 생성 응답 로그 추가\n        this.product.nutrientId = newNutrient.nutrientId;\n        alert('새로운 영양제 등록 성공');\n        await this.fetchNutrients(); // 새로운 영양소 목록을 다시 가져옵니다.\n      } catch (error) {\n        console.error('새로운 영양제 등록 실패:', error);\n        alert('새로운 영양제를 등록하는 데 실패했습니다.');\n      }\n    },\n    async handleCreateProduct() {\n      try {\n        console.log('폼 제출 전 제품 정보:', this.product); // 폼 제출 전 데이터 확인\n        await this.createProduct(this.product);\n        console.log('제품 등록 완료');\n        this.navigateToProductList(); // 등록 성공 후 제품 목록 페이지로 이동\n      } catch (error) {\n        console.error('제품 등록 실패:', error);\n      }\n    },\n    navigateToProductList() {\n      this.$router.push('/productlist');\n    }\n  }\n};","map":{"version":3,"names":["mapActions","mapGetters","RichTextEditor","name","components","data","product","productName","nutrientId","price","stock","target","productImage","active","newNutrientName","newNutrientDescription","created","fetchNutrients","computed","nutrientList","console","log","nutrients","selectedNutrientDescription","selectedNutrient","find","nutrient","description","methods","handleNutrientChange","saveNewNutrient","alert","nutrientName","newNutrient","createNutrient","error","handleCreateProduct","createProduct","navigateToProductList","$router","push"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\product\\ProductCreate.vue"],"sourcesContent":["<template>\n  <div class=\"main-container\">\n    <h1 class=\"text-melon\">상품등록</h1>\n    <form @submit.prevent=\"handleCreateProduct\">\n      <table style=\"width: 100%\">\n        <tr>\n          <td>제품명:</td>\n          <td><input v-model=\"product.productName\" type=\"text\" required /></td>\n        </tr>\n        <tr>\n          <td>영양제:</td>\n          <td class=\"select-input-flex\" style=\"display:flex\">\n            <select v-model=\"product.nutrientId\" @change=\"handleNutrientChange\">\n              <option :value=\"null\" selected>선택 안 함</option>\n              <option style=\"color:red;\" :value=\"'new'\">+ Add New Nutrient</option>\n              <option v-for=\"nutrient in nutrients\" :key=\"nutrient.nutrientId\" :value=\"nutrient.nutrientId\">\n                {{ nutrient.nutrientName }}\n              </option>\n            </select>\n            <input v-if=\"product.nutrientId === 'new'\" v-model=\"newNutrientName\" type=\"text\" placeholder=\"Enter Nutrient Name\" />\n            <input v-if=\"product.nutrientId === 'new'\" v-model=\"newNutrientDescription\" type=\"text\" placeholder=\"Enter Nutrient Description\" />\n            <input v-else type=\"text\" :value=\"selectedNutrientDescription\" disabled />\n            <button class=\"small-btn\" v-if=\"product.nutrientId === 'new'\" type=\"button\" @click=\"saveNewNutrient\">Save</button>\n          </td>\n        </tr>\n        <tr>\n          <td>가격:</td>\n          <td><input v-model=\"product.price\" type=\"number\" required /></td>\n          <!-- <td>상태:</td>\n          <td><input v-model=\"product.active\" type=\"number\" required /></td> -->\n        </tr>\n        <tr>\n          <td>재고:</td>\n          <td><input v-model=\"product.stock\" type=\"number\" required /></td>\n        </tr>\n        <tr>\n          <td>대상:</td>\n          <td>\n            <select v-model=\"product.target\" required>\n              <option value=\"공통\">공통</option>\n              <option value=\"여성\">여성</option>\n              <option value=\"남성\">남성</option>\n            </select>\n          </td>\n        </tr>\n      </table>\n      <RichTextEditor v-model=\"product.productImage\" contentType=\"html\"/>\n      <div class=\"box-container\">\n        <div class=\"btn-container\">\n          <button type=\"submit\" class=\"btn btn-green\">Create Product</button>\n          <button class=\"btn btn-gray\" @click=\"navigateToProductList\">Cancel</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\nimport RichTextEditor from '@/components/RichTextEditor.vue'\n\nexport default {\n  name: 'ProductCreate',\n  components: {\n    RichTextEditor\n  },\n  data() {\n    return {\n      product: {\n        productName: '',\n        nutrientId: null, \n        price: '',\n        stock: '',\n        target: '공통',\n        productImage: '', \n        active: true \n      },\n      newNutrientName: '', // 새로 추가되는 nutrient name\n      newNutrientDescription: '' // 새로 추가되는 nutrient description\n    };\n  },\n  async created() {\n    await this.fetchNutrients();\n  },\n  computed: {\n    ...mapGetters('nutrient', ['nutrients']),\n    nutrientList() {\n      console.log('nutrients 상태:', this.nutrients); // nutrients 상태 로그\n      return this.nutrients;\n    },\n    selectedNutrientDescription() {\n      const selectedNutrient = this.nutrientList.find(nutrient => nutrient.nutrientId === this.product.nutrientId);\n      return selectedNutrient ? selectedNutrient.description : '';\n    }\n  },\n  methods: {\n    ...mapActions('nutrient', ['fetchNutrients', 'createNutrient']),\n    ...mapActions('product', ['createProduct']),\n    handleNutrientChange() {\n      if (this.product.nutrientId !== 'new') {\n        this.newNutrientName = '';\n        this.newNutrientDescription = '';\n      }\n    },\n    async saveNewNutrient() {\n      if (!this.newNutrientName || !this.newNutrientDescription) {\n        alert('영양제와 효능을 입력해주세요');\n        return;\n      }\n\n      try {\n        console.log('새 영양소 저장 시도:', { nutrientName: this.newNutrientName, description: this.newNutrientDescription });\n        const newNutrient = await this.createNutrient({\n          nutrientName: this.newNutrientName,\n          description: this.newNutrientDescription\n        });\n        console.log('새로운 영양제 등록 응답:', newNutrient); // 생성 응답 로그 추가\n        this.product.nutrientId = newNutrient.nutrientId;\n        alert('새로운 영양제 등록 성공');\n        await this.fetchNutrients(); // 새로운 영양소 목록을 다시 가져옵니다.\n      } catch (error) {\n        console.error('새로운 영양제 등록 실패:', error);\n        alert('새로운 영양제를 등록하는 데 실패했습니다.');\n      }\n    },\n    async handleCreateProduct() {\n      try {\n        console.log('폼 제출 전 제품 정보:', this.product); // 폼 제출 전 데이터 확인\n        await this.createProduct(this.product);\n        console.log('제품 등록 완료');\n        this.navigateToProductList(); // 등록 성공 후 제품 목록 페이지로 이동\n      } catch (error) {\n        console.error('제품 등록 실패:', error);\n      }\n    },\n    navigateToProductList() {\n      this.$router.push('/productlist');\n    }\n  }\n};\n</script>\n\n\n<style>\n\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}