{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions, mapState } from 'vuex';\nexport default {\n  name: 'MemberEdit',\n  data() {\n    return {\n      member: {\n        name: '',\n        age: '',\n        email: '',\n        phone: '',\n        gender: '',\n        subscriptionStatus: false,\n        memberLevel: ''\n      }\n    };\n  },\n  computed: {\n    ...mapState('member', ['editingMember'])\n  },\n  created() {\n    if (this.editingMember) {\n      console.log('MemberEdit에서 받은 memberId:', this.editingMember.memberId); // 콘솔 로그 추가\n      this.member = {\n        ...this.editingMember\n      };\n    } else {\n      this.$router.push('/memberlist');\n    }\n  },\n  methods: {\n    ...mapActions('member', ['updateMember']),\n    async saveMember() {\n      try {\n        await this.updateMember(this.member);\n        this.$router.push('/memberlist');\n      } catch (error) {\n        console.error('회원 정보를 업데이트하는 중 오류 발생:', error);\n      }\n    },\n    cancelEdit() {\n      this.$router.push('/memberlist');\n    }\n  }\n};","map":{"version":3,"names":["mapActions","mapState","name","data","member","age","email","phone","gender","subscriptionStatus","memberLevel","computed","created","editingMember","console","log","memberId","$router","push","methods","saveMember","updateMember","error","cancelEdit"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\MemberEdit.vue"],"sourcesContent":["<template>\n  <div class=\"main-container box-shadow\">\n    <h1 class=\"text-melon\">회원 정보 수정</h1>\n    <form @submit.prevent=\"saveMember\">\n      <table class=\"line-table\">\n        <tr>\n          <td>이름</td>\n          <td><input v-model=\"member.name\" type=\"text\" required /></td>\n          <td>나이</td>\n          <td><input v-model=\"member.age\" type=\"number\" required /></td>\n          <td>성별</td>\n          <td>\n            <select v-model=\"member.gender\" required>\n              <option value=\"F\">여성</option>\n              <option value=\"M\">남성</option>\n            </select>\n          </td>\n          <td>구독여부</td>\n          <td>\n            <select v-model=\"member.subscriptionStatus\">\n              <option :value=\"true\">구독중</option>\n              <option :value=\"false\">-</option>\n            </select>\n          </td>\n        </tr>\n        <tr>\n          <td>이메일</td>\n          <td><input v-model=\"member.email\" type=\"email\" required /></td>\n          <td>휴대폰번호</td>\n          <td><input v-model=\"member.phoneNumber\" type=\"text\" required /></td>\n          <td>권한</td>\n          <td>\n            <select v-model=\"member.memberLevel\" required>\n              <option value=\"ADMIN\">관리자</option>\n              <option value=\"USER\">사용자</option>\n            </select>\n          </td>\n          <td></td>\n          <td></td>\n        </tr>\n      </table>\n      <div class=\"btn-container\">\n        <button type=\"submit\" class=\"btn btn-green\">저장</button>\n        <button type=\"button\" class=\"btn btn-gray\" @click=\"cancelEdit\">취소</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapState } from 'vuex';\n\nexport default {\n  name: 'MemberEdit',\n  data() {\n    return {\n      member: {\n        name: '',\n        age: '',\n        email: '',\n        phone: '',\n        gender: '',\n        subscriptionStatus: false,\n        memberLevel: ''\n      }\n    };\n  },\n  computed: {\n    ...mapState('member', ['editingMember'])\n  },\n  created() {\n    if (this.editingMember) {\n      console.log('MemberEdit에서 받은 memberId:', this.editingMember.memberId);  // 콘솔 로그 추가\n      this.member = { ...this.editingMember };\n    } else {\n      this.$router.push('/memberlist');\n    }\n  },\n  methods: {\n    ...mapActions('member', ['updateMember']),\n    async saveMember() {\n      try {\n        await this.updateMember(this.member);\n        this.$router.push('/memberlist');\n      } catch (error) {\n        console.error('회원 정보를 업데이트하는 중 오류 발생:', error);\n      }\n    },\n    cancelEdit() {\n      this.$router.push('/memberlist');\n    }\n  }\n};\n</script>\n\n<style>\n.line-table td input {\n  width: 100%;\n  margin: 5px auto;\n  padding: 3px;\n}\n</style>\n"],"mappings":";AAkDA,SAASA,UAAU,EAAEC,QAAO,QAAS,MAAM;AAE3C,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE;QACNF,IAAI,EAAE,EAAE;QACRG,GAAG,EAAE,EAAE;QACPC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,MAAM,EAAE,EAAE;QACVC,kBAAkB,EAAE,KAAK;QACzBC,WAAW,EAAE;MACf;IACF,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGV,QAAQ,CAAC,QAAQ,EAAE,CAAC,eAAe,CAAC;EACzC,CAAC;EACDW,OAAOA,CAAA,EAAG;IACR,IAAI,IAAI,CAACC,aAAa,EAAE;MACtBC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAACF,aAAa,CAACG,QAAQ,CAAC,EAAG;MACxE,IAAI,CAACZ,MAAK,GAAI;QAAE,GAAG,IAAI,CAACS;MAAc,CAAC;IACzC,OAAO;MACL,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;IAClC;EACF,CAAC;EACDC,OAAO,EAAE;IACP,GAAGnB,UAAU,CAAC,QAAQ,EAAE,CAAC,cAAc,CAAC,CAAC;IACzC,MAAMoB,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAM,IAAI,CAACC,YAAY,CAAC,IAAI,CAACjB,MAAM,CAAC;QACpC,IAAI,CAACa,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;MAClC,EAAE,OAAOI,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACN,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;IAClC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}