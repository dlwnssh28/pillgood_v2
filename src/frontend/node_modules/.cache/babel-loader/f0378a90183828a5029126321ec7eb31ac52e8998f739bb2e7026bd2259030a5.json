{"ast":null,"code":"import axios from '../axios';\nexport default {\n  data() {\n    return {\n      refunds: []\n    };\n  },\n  async created() {\n    try {\n      const response = await axios.get('/api/refunds/list');\n      this.refunds = response.data;\n    } catch (error) {\n      console.error('환불 목록을 가져오는 중 오류가 발생했습니다:', error);\n    }\n  },\n  methods: {\n    async updateRefundStatus(refund) {\n      try {\n        await axios.put(`/api/refunds/update-status/${refund.refundId}`, refund.refundStatus);\n        console.log('환불 상태가 성공적으로 업데이트되었습니다.');\n      } catch (error) {\n        console.error('환불 상태 업데이트 중 오류가 발생했습니다:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","refunds","created","response","get","error","console","methods","updateRefundStatus","refund","put","refundId","refundStatus","log"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\RefundList.vue"],"sourcesContent":["<template>\n  <div class=\"main-container\">\n    <h2>환불 요청 관리</h2>\n    <div v-if=\"refunds.length === 0\">환불 요청 내역이 없습니다.</div>\n    <ul v-else>\n      <li v-for=\"refund in refunds\" :key=\"refund.refundId\">\n        주문 번호: {{ refund.orderNo }} / 환불 금액: {{ refund.totalRefundAmount }} / 환불 상태: {{ refund.refundStatus }}\n        <select v-model=\"refund.refundStatus\" @change=\"updateRefundStatus(refund)\">\n          <option value=\"환불대기\">환불대기</option>\n          <option value=\"환불승인\">환불승인</option>\n          <option value=\"환불완료\">환불완료</option>\n        </select>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from '../axios';\n\nexport default {\n  data() {\n    return {\n      refunds: []\n    };\n  },\n  async created() {\n    try {\n      const response = await axios.get('/api/refunds/list');\n      this.refunds = response.data;\n    } catch (error) {\n      console.error('환불 목록을 가져오는 중 오류가 발생했습니다:', error);\n    }\n  },\n  methods: {\n    async updateRefundStatus(refund) {\n      try {\n        await axios.put(`/api/refunds/update-status/${refund.refundId}`, refund.refundStatus);\n        console.log('환불 상태가 성공적으로 업데이트되었습니다.');\n      } catch (error) {\n        console.error('환불 상태 업데이트 중 오류가 발생했습니다:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.main-container {\n  padding: 20px;\n}\n</style>\n"],"mappings":"AAkBA,OAAOA,KAAI,MAAO,UAAU;AAE5B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAMC,QAAO,GAAI,MAAMJ,KAAK,CAACK,GAAG,CAAC,mBAAmB,CAAC;MACrD,IAAI,CAACH,OAAM,GAAIE,QAAQ,CAACH,IAAI;IAC9B,EAAE,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EACDE,OAAO,EAAE;IACP,MAAMC,kBAAkBA,CAACC,MAAM,EAAE;MAC/B,IAAI;QACF,MAAMV,KAAK,CAACW,GAAG,CAAC,8BAA8BD,MAAM,CAACE,QAAQ,EAAE,EAAEF,MAAM,CAACG,YAAY,CAAC;QACrFN,OAAO,CAACO,GAAG,CAAC,yBAAyB,CAAC;MACxC,EAAE,OAAOR,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}