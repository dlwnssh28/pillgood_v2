{"ast":null,"code":"import axios from '../../axios'; // 설정된 axios 인스턴스 불러오기\n\nconst state = {\n  orderDetails: [],\n  currentOrder: null,\n  // 현재 주문 정보 추가\n  userProfile: null,\n  coupons: []\n};\nconst mutations = {\n  setOrderDetails(state, orderDetails) {\n    state.orderDetails = orderDetails;\n  },\n  setCurrentOrder(state, order) {\n    // 현재 주문 정보 설정\n    state.currentOrder = order;\n  },\n  setUserProfile(state, userProfile) {\n    state.userProfile = userProfile;\n  },\n  setCoupons(state, coupons) {\n    state.coupons = coupons;\n  },\n  updateOrderItemImage(state, {\n    productId,\n    productImage\n  }) {\n    const item = state.orderDetails.find(item => item.productId === productId);\n    if (item) {\n      item.productImage = productImage;\n    }\n  }\n};\nconst actions = {\n  async fetchUserProfile({\n    commit\n  }) {\n    try {\n      const response = await axios.get('/api/members/mypage', {\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        commit('setUserProfile', response.data);\n      } else {\n        console.error('Failed to fetch user profile');\n      }\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n    }\n  },\n  async fetchCoupons({\n    commit\n  }) {\n    try {\n      const response = await axios.get('/api/ownedcoupons/findbyid', {\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        commit('setCoupons', response.data);\n      } else {\n        console.error('Failed to fetch coupons');\n      }\n    } catch (error) {\n      console.error('Error fetching coupons:', error);\n    }\n  },\n  async fetchOrderDetails({\n    commit,\n    dispatch\n  }) {\n    try {\n      const response = await axios.get('/api/orders/prepare', {\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        commit('setOrderDetails', response.data);\n\n        // 각 제품의 이미지를 가져오는 작업 수행\n        for (const item of response.data) {\n          dispatch('fetchProductImage', item);\n        }\n      } else {\n        console.error('Failed to fetch order details');\n      }\n    } catch (error) {\n      console.error('Error fetching order details:', error);\n    }\n  },\n  async fetchProductImage({\n    commit\n  }, item) {\n    try {\n      const response = await axios.get(`/api/products/detail/${item.productId}`);\n      const productImage = extractFirstImage(response.data.productImage);\n      commit('updateOrderItemImage', {\n        productId: item.productId,\n        productImage\n      });\n    } catch (error) {\n      console.error(`Error fetching image for product ID ${item.productId}:`, error);\n    }\n  },\n  async placeOrder({\n    commit\n  }, orderDetails) {\n    try {\n      const response = await axios.post('/api/orders/create', orderDetails, {\n        withCredentials: true\n      });\n      commit('setCurrentOrder', response.data); // 현재 주문 정보 설정\n      return response;\n    } catch (error) {\n      console.error('주문 에러: ', error);\n      throw error;\n    }\n  }\n};\nfunction extractFirstImage(htmlString) {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(htmlString, 'text/html');\n  const imgTag = doc.querySelector('img');\n  return imgTag ? imgTag.src : null;\n}\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n};","map":{"version":3,"names":["axios","state","orderDetails","currentOrder","userProfile","coupons","mutations","setOrderDetails","setCurrentOrder","order","setUserProfile","setCoupons","updateOrderItemImage","productId","productImage","item","find","actions","fetchUserProfile","commit","response","get","withCredentials","status","data","console","error","fetchCoupons","fetchOrderDetails","dispatch","fetchProductImage","extractFirstImage","placeOrder","post","htmlString","parser","DOMParser","doc","parseFromString","imgTag","querySelector","src","namespaced"],"sources":["C:/Users/woori/IdeaProjects/pillgood_v2/src/frontend/src/store/modules/orderStore.js"],"sourcesContent":["import axios from '../../axios'; // 설정된 axios 인스턴스 불러오기\n\nconst state = {\n  orderDetails: [],\n  currentOrder: null, // 현재 주문 정보 추가\n  userProfile: null,\n  coupons: []\n};\n\nconst mutations = {\n  setOrderDetails(state, orderDetails) {\n    state.orderDetails = orderDetails;\n  },\n  setCurrentOrder(state, order) { // 현재 주문 정보 설정\n    state.currentOrder = order;\n  },\n  setUserProfile(state, userProfile) {\n    state.userProfile = userProfile;\n  },\n  setCoupons(state, coupons) {\n    state.coupons = coupons;\n  },\n  updateOrderItemImage(state, { productId, productImage }) {\n    const item = state.orderDetails.find(item => item.productId === productId);\n    if (item) {\n      item.productImage = productImage;\n    }\n  }\n};\n\nconst actions = {\n  async fetchUserProfile({ commit }) {\n    try {\n      const response = await axios.get('/api/members/mypage', { withCredentials: true });\n      if (response.status === 200) {\n        commit('setUserProfile', response.data);\n      } else {\n        console.error('Failed to fetch user profile');\n      }\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n    }\n  },\n  async fetchCoupons({ commit }) {\n    try {\n      const response = await axios.get('/api/ownedcoupons/findbyid', { withCredentials: true });\n      if (response.status === 200) {\n        commit('setCoupons', response.data);\n      } else {\n        console.error('Failed to fetch coupons');\n      }\n    } catch (error) {\n      console.error('Error fetching coupons:', error);\n    }\n  },\n  async fetchOrderDetails({ commit, dispatch }) {\n    try {\n      const response = await axios.get('/api/orders/prepare', { withCredentials: true });\n      if (response.status === 200) {\n        commit('setOrderDetails', response.data);\n        \n        // 각 제품의 이미지를 가져오는 작업 수행\n        for (const item of response.data) {\n          dispatch('fetchProductImage', item);\n        }\n      } else {\n        console.error('Failed to fetch order details');\n      }\n    } catch (error) {\n      console.error('Error fetching order details:', error);\n    }\n  },\n  async fetchProductImage({ commit }, item) {\n    try {\n      const response = await axios.get(`/api/products/detail/${item.productId}`);\n      const productImage = extractFirstImage(response.data.productImage);\n      commit('updateOrderItemImage', { productId: item.productId, productImage });\n    } catch (error) {\n      console.error(`Error fetching image for product ID ${item.productId}:`, error);\n    }\n  },\n  async placeOrder({ commit }, orderDetails) {\n    try {\n      const response = await axios.post('/api/orders/create', orderDetails, { withCredentials: true });\n      commit('setCurrentOrder', response.data); // 현재 주문 정보 설정\n      return response;\n    } catch (error) {\n      console.error('주문 에러: ', error);\n      throw error;\n    }\n  }\n};\n\nfunction extractFirstImage(htmlString) {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(htmlString, 'text/html');\n  const imgTag = doc.querySelector('img');\n  return imgTag ? imgTag.src : null;\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}