{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport '../assets/styles.css';\nimport ReviewView from '../components/ReviewView.vue'; // ReviewView 컴포넌트 불러오기\nimport InquiryInfo from '../components/InquiryInfo.vue'; // 문의 안내 컴포넌트\nimport SRCInfo from '../components/SRCInfo.vue'; // 배송 취소 환불 안내 컴포넌트\n\nexport default {\n  components: {\n    ReviewView,\n    // 컴포넌트 등록\n    InquiryInfo,\n    SRCInfo\n  },\n  props: ['id'],\n  data() {\n    return {\n      activeTab: 'description',\n      product: {\n        productId: 0,\n        productName: '',\n        price: 0,\n        productImages: [],\n        description: '',\n        fullDescription: '',\n        details: ''\n      },\n      quantity: 1 // 초기 수량 설정\n    };\n  },\n  methods: {\n    async fetchProductDetails() {\n      try {\n        const response = await axios.get(`/api/products/detail/${this.id}`);\n        this.product = response.data;\n        this.product.productImages = this.extractImages(response.data.productImage);\n        console.log('Product images:', this.product.productImages);\n      } catch (error) {\n        console.error('Error fetching product details:', error);\n      }\n    },\n    extractImages(htmlString) {\n      const regex = /<img[^>]+src=\"([^\">]+)\"/g;\n      const matches = [];\n      let match;\n      while ((match = regex.exec(htmlString)) !== null) {\n        matches.push(match[1]);\n      }\n      console.log('Extracted image URLs:', matches);\n      return matches;\n    },\n    decreaseQuantity() {\n      if (this.quantity > 1) {\n        this.quantity--;\n      }\n    },\n    increaseQuantity() {\n      this.quantity++;\n    },\n    async addToCart() {\n      try {\n        const cartItem = {\n          productId: this.product.productId,\n          // 여기에서 this.product.productId를 사용합니다.\n          productQuantity: this.quantity // 선택한 수량을 보냄\n        };\n        const response = await axios.post('/api/carts/create', cartItem, {\n          withCredentials: true\n        });\n        if (response.status === 201) {\n          this.$router.push({\n            name: 'Cart'\n          });\n        } else {\n          console.error('장바구니 추가 실패:', response);\n        }\n      } catch (error) {\n        console.error('Error adding to cart:', error);\n      }\n    },\n    async buyNow() {\n      const orderItem = {\n        productId: this.product.productId,\n        // 여기에서 this.product.productId를 사용합니다.\n        productName: this.product.productName,\n        productQuantity: this.quantity,\n        price: this.product.price\n      };\n      try {\n        await axios.post('/api/orders/prepare', [orderItem], {\n          withCredentials: true\n        });\n        this.$router.push({\n          name: 'Order'\n        });\n      } catch (error) {\n        console.error('Error preparing order:', error);\n      }\n    }\n  },\n  created() {\n    this.fetchProductDetails();\n  }\n};","map":{"version":3,"names":["axios","ReviewView","InquiryInfo","SRCInfo","components","props","data","activeTab","product","productId","productName","price","productImages","description","fullDescription","details","quantity","methods","fetchProductDetails","response","get","id","extractImages","productImage","console","log","error","htmlString","regex","matches","match","exec","push","decreaseQuantity","increaseQuantity","addToCart","cartItem","productQuantity","post","withCredentials","status","$router","name","buyNow","orderItem","created"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\ProductDetail.vue"],"sourcesContent":["<template>\n  <div class=\"main-container\">\n    <div class=\"breadcrumb\">\n      <p>카테고리 > [브랜드명] {{ product.productName }}</p>\n    </div>\n    <div class=\"product-main\">\n      <div class=\"product-image\">\n        <img :src=\"product.productImages[0] || '../assets/product_01.png'\" alt=\"Product Image\" />\n      </div>\n      <div class=\"product-info\" style=\"justify-content: space-around;\">\n        <div class=\"box-container-no-shade\">\n          <h1 class=\"product-title\">{{ product.productName }}</h1>\n          <p class=\"product-price\">{{ product.price }}원</p>\n          <p>{{ product.description }}</p>\n          <p> 예시 설명 텍스트 예시 설명 텍스트 </p>\n\n          <div class=\"quantity-selector\">\n            <button @click=\"decreaseQuantity\">-</button>\n            <span>{{ quantity }}</span>\n            <button @click=\"increaseQuantity\">+</button>\n          </div>\n\n          <!-- 버튼 -->\n          <div class=\"btn-container\" style=\"align-item: center; justify-content: end;\">\n            <button @click=\"addToCart\" class=\"btn btn-gray\">장바구니 담기</button>\n            <button @click=\"buyNow\" class=\"btn btn-green\">바로 구매</button>\n          </div>\n        </div>\n        \n      </div>\n    </div>\n    <div class=\"tabs\">\n      <button @click=\"activeTab = 'description'\" :class=\"{ active: activeTab === 'description' }\">상품설명</button>\n      <button @click=\"activeTab = 'reviews'\" :class=\"{ active: activeTab === 'reviews' }\">후기</button>\n      <button @click=\"activeTab = 'inquiryinfo'\" :class=\"{ active: activeTab === 'inquiryinfo' }\">문의</button>\n      <button @click=\"activeTab = 'scrinfo'\" :class=\"{ active: activeTab === 'scrinfo' }\">배송/취소/환불</button>\n    </div>\n    <!-- 탭 내용 -->\n    <div class=\"tab-content\">\n\n      <div v-if=\"activeTab === 'description'\">\n        <p>{{ product.fullDescription }}</p>\n        <img :src=\"product.productImages[1] || '../assets/product_01.png'\" alt=\"Second Product Image\" style=\"width: 100%;\"/>\n      </div>\n\n      <div v-if=\"activeTab === 'details'\">\n        <p>{{ product.details }}</p>\n      </div>\n\n      <div v-if=\"activeTab === 'reviews'\">\n        <ReviewView :productId=\"product.productId\" /> \n      </div>\n\n      <div v-if=\"activeTab === 'inquiryinfo'\">\n        <InquiryInfo /> \n      </div>\n\n      <div v-if=\"activeTab === 'scrinfo'\">\n        <SRCInfo /> \n      </div>\n\n    </div>\n    <!-- 탭 끝 -->\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport '../assets/styles.css';\nimport ReviewView from '../components/ReviewView.vue'; // ReviewView 컴포넌트 불러오기\nimport InquiryInfo from '../components/InquiryInfo.vue'; // 문의 안내 컴포넌트\nimport SRCInfo from '../components/SRCInfo.vue'; // 배송 취소 환불 안내 컴포넌트\n\nexport default {\n  components: {\n    ReviewView, // 컴포넌트 등록\n    InquiryInfo,\n    SRCInfo\n  },\n  props: ['id'],\n  data() {\n    return {\n      activeTab: 'description',\n      product: {\n        productId: 0,\n        productName: '',\n        price: 0,\n        productImages: [],\n        description: '',\n        fullDescription: '',\n        details: '',\n      },\n      quantity: 1 // 초기 수량 설정\n    };\n  },\n  methods: {\n    async fetchProductDetails() {\n      try {\n        const response = await axios.get(`/api/products/detail/${this.id}`);\n        this.product = response.data;\n        this.product.productImages = this.extractImages(response.data.productImage);\n        console.log('Product images:', this.product.productImages);\n      } catch (error) {\n        console.error('Error fetching product details:', error);\n      }\n    },\n    extractImages(htmlString) {\n      const regex = /<img[^>]+src=\"([^\">]+)\"/g;\n      const matches = [];\n      let match;\n      while ((match = regex.exec(htmlString)) !== null) {\n        matches.push(match[1]);\n      }\n      console.log('Extracted image URLs:', matches);\n      return matches;\n    },\n    decreaseQuantity() {\n      if (this.quantity > 1) {\n        this.quantity--;\n      }\n    },\n    increaseQuantity() {\n      this.quantity++;\n    },\n    async addToCart() {\n      try {\n        const cartItem = {\n          productId: this.product.productId, // 여기에서 this.product.productId를 사용합니다.\n          productQuantity: this.quantity // 선택한 수량을 보냄\n        };\n        const response = await axios.post('/api/carts/create', cartItem, { withCredentials: true });\n        if (response.status === 201) {\n          this.$router.push({ name: 'Cart' });\n        } else {\n          console.error('장바구니 추가 실패:', response);\n        }\n      } catch (error) {\n        console.error('Error adding to cart:', error);\n      }\n    },\n    async buyNow() {\n      const orderItem = {\n        productId: this.product.productId, // 여기에서 this.product.productId를 사용합니다.\n        productName: this.product.productName,\n        productQuantity: this.quantity,\n        price: this.product.price\n      };\n\n      try {\n        await axios.post('/api/orders/prepare', [orderItem], { withCredentials: true });\n        this.$router.push({ name: 'Order' });\n      } catch (error) {\n        console.error('Error preparing order:', error);\n      }\n    }\n  },\n  created() {\n    this.fetchProductDetails();\n  }\n};\n</script>\n\n<style scoped>\n.product-detail {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.breadcrumb {\n  font-size: 0.9rem;\n  color: #888;\n  margin-bottom: 20px;\n}\n\n.product-main {\n  display: flex;\n  gap: 40px;\n}\n\n.product-image {\n  flex: 1;\n  background-color: #f8f9fa;\n  text-align: center;\n  padding: 40px;\n  border-radius: 8px;\n}\n\n.product-image img {\n  max-width: 100%;\n  height: auto;\n  border-radius: 8px;\n}\n\n.product-info {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.product-title {\n  font-size: 1.5rem;\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.product-price {\n  font-size: 1.2rem;\n  color: #d9534f;\n  margin-bottom: 20px;\n}\n\n.quantity-selector {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin: auto;\n  margin-top: 10px;\n  margin-bottom: 15px;\n  width: 150px;\n}\n\n.quantity-selector button {\n  width: 30px;\n  height: 30px;\n  background-color: #ddd;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n\n/* .btn {\n  width: 120px;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.btn-cart {\n  background-color: #5cb85c;\n  color: white;\n}\n\n.btn-buy {\n  background-color: #5cb85c;\n  color: white;\n} */\n\n.tabs {\n  display: flex;\n  justify-content: space-around;\n  margin-top: 40px;\n  margin-bottom: 20px;\n  border-bottom: 1px solid #ccc;\n}\n\n.tabs button {\n  flex: 1;\n  padding: 10px 0;\n  background-color: transparent;\n  border: none;\n  border-bottom: 2px solid transparent;\n  cursor: pointer;\n  transition: border-color 0.3s;\n  color: #aaa;\n}\n\n.tabs button.active {\n  border-color: #5cb85c;\n  color: #5cb85c;\n}\n\n.tab-content {\n  background-color: #ffffff;\n  padding: 20px;\n  border-radius: 8px;\n  width: calc(100% + 40px); /* Extend width to cover side padding */\n  margin-left: -20px; /* Offset margin to align with parent container */\n  margin-right: -20px; /* Offset margin to align with parent container */\n}\n\n.review, .inquiry {\n  background-color: #ffffff;\n  padding: 10px;\n  margin-bottom: 10px;\n  border-radius: 4px;\n  border: 1px solid #eee;\n}\n\n.rating, .answered {\n  font-weight: bold;\n  color: #343a40;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}