{"ast":null,"code":"import axios from 'axios';\nconst state = {\n  inquiries: [],\n  inquiry: null,\n  answer: null\n};\nconst getters = {\n  allInquiries: state => state.inquiries,\n  singleInquiry: state => state.inquiry,\n  singleAnswer: state => state.answer\n};\nconst actions = {\n  async fetchInquiries({\n    commit\n  }) {\n    try {\n      const response = await axios.get('/api/inquiries/list');\n      commit('setInquiries', response.data);\n    } catch (error) {\n      console.error('문의 조회 실패:', error);\n    }\n  },\n  fetchInquiry({\n    commit\n  }, id) {\n    return axios.get(`/api/inquiries/${id}`).then(response => {\n      commit('setInquiry', response.data);\n      return response.data;\n    }).catch(error => {\n      console.error('문의 조회 실패:', error);\n      throw error;\n    });\n  },\n  async fetchInquiriesByMember({\n    commit\n  }, memberUniqueId) {\n    try {\n      const response = await axios.get(`/api/inquiries/member/${memberUniqueId}`);\n      commit('setInquiries', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('문의 조회 실패:', error);\n    }\n  },\n  async createInquiry({\n    dispatch\n  }, inquiry) {\n    try {\n      const response = await axios.post('/api/inquiries/create', inquiry);\n      console.log('문의 작성됨', response.data);\n      dispatch('fetchInquiries');\n    } catch (error) {\n      console.error('문의 생성 실패:', error);\n    }\n  },\n  async updateInquiry({\n    dispatch\n  }, inquiry) {\n    try {\n      await axios.put(`/api/inquiries/update/${inquiry.inquiryNo}`, inquiry);\n      dispatch('fetchInquiry', inquiry.inquiryNo);\n    } catch (error) {\n      console.error('문의 수정 실패:', error);\n    }\n  },\n  async deleteInquiry({\n    dispatch\n  }, inquiryNo) {\n    try {\n      await axios.delete(`/api/inquiries/delete/${inquiryNo}`);\n      dispatch('fetchInquiries');\n    } catch (error) {\n      console.error('문의 삭제 실패:', error);\n    }\n  },\n  fetchAnswer({\n    commit\n  }, inquiryNo) {\n    return axios.get(`/api/answers/${inquiryNo}`).then(response => {\n      commit('setAnswer', response.data);\n      console.log(\"fetched answer: \" + response.data);\n      return response.data;\n    }).catch(error => {\n      console.error('답변 조회 실패:', error);\n      commit('setAnswer', null);\n      throw error;\n    });\n  },\n  async createAnswer({\n    dispatch\n  }, answer) {\n    try {\n      const response = await axios.post('/admin/answers/create', answer);\n      console.log(\"Response from server:\", response.data);\n      await dispatch('fetchAnswer', answer.inquiry.inquiryNo);\n      return response.data;\n    } catch (error) {\n      console.error('답변 생성 실패:', error);\n      throw error;\n    }\n  },\n  async updateAnswer({\n    dispatch\n  }, answer) {\n    try {\n      const response = await axios.put(`/admin/answers/update/${answer.inquiryNo}`, answer);\n      await dispatch('fetchAnswer', answer.inquiryNo);\n      return response.data;\n    } catch (error) {\n      console.error('답변 수정 실패:', error);\n      throw error;\n    }\n  },\n  async deleteAnswer({\n    dispatch\n  }, answer) {\n    try {\n      const response = await axios.delete(`/admin/answers/delete/${answer.inquiryNo}`);\n      await dispatch('fetchAnswer', answer.inquiryNo);\n      return response.data;\n    } catch (error) {\n      console.error('답변 삭제 실패:', error);\n      throw error;\n    }\n  }\n};\nconst mutations = {\n  setInquiries: (state, inquiries) => state.inquiries = inquiries,\n  setInquiry: (state, inquiry) => state.inquiry = inquiry,\n  setAnswer: (state, answer) => state.answer = answer\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["axios","state","inquiries","inquiry","answer","getters","allInquiries","singleInquiry","singleAnswer","actions","fetchInquiries","commit","response","get","data","error","console","fetchInquiry","id","then","catch","fetchInquiriesByMember","memberUniqueId","createInquiry","dispatch","post","log","updateInquiry","put","inquiryNo","deleteInquiry","delete","fetchAnswer","createAnswer","updateAnswer","deleteAnswer","mutations","setInquiries","setInquiry","setAnswer","namespaced"],"sources":["C:/Users/woori/IdeaProjects/pillgood_v2/src/frontend/src/store/modules/inquiryStore.js"],"sourcesContent":["import axios from 'axios';\n\nconst state = {\n  inquiries: [],\n  inquiry: null,\n  answer: null\n};\n\nconst getters = {\n  allInquiries: state => state.inquiries,\n  singleInquiry: state => state.inquiry,\n  singleAnswer: state => state.answer\n};\n\nconst actions = {\n  async fetchInquiries({ commit }) {\n    try {\n      const response = await axios.get('/api/inquiries/list');\n      commit('setInquiries', response.data);\n    } catch (error) {\n      console.error('문의 조회 실패:', error);\n    }\n  },\n  fetchInquiry({ commit }, id) {\n    return axios.get(`/api/inquiries/${id}`)\n      .then(response => {\n        commit('setInquiry', response.data);\n        return response.data;\n      })\n      .catch(error => {\n        console.error('문의 조회 실패:', error);\n        throw error;\n      });\n  },\n  async fetchInquiriesByMember({ commit }, memberUniqueId) {\n    try {\n      const response = await axios.get(`/api/inquiries/member/${memberUniqueId}`);\n      commit('setInquiries', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('문의 조회 실패:', error);\n    }\n  },\n  async createInquiry({ dispatch }, inquiry) {\n    try {\n      const response = await axios.post('/api/inquiries/create', inquiry);\n      console.log('문의 작성됨', response.data);\n      dispatch('fetchInquiries');\n    } catch (error) {\n      console.error('문의 생성 실패:', error);\n    }\n  },\n  async updateInquiry({ dispatch }, inquiry) {\n    try {\n      await axios.put(`/api/inquiries/update/${inquiry.inquiryNo}`, inquiry);\n      dispatch('fetchInquiry', inquiry.inquiryNo);\n    } catch (error) {\n      console.error('문의 수정 실패:', error);\n    }\n  },\n  async deleteInquiry({ dispatch }, inquiryNo) {\n    try {\n      await axios.delete(`/api/inquiries/delete/${inquiryNo}`);\n      dispatch('fetchInquiries');\n    } catch (error) {\n      console.error('문의 삭제 실패:', error);\n    }\n  },\n  fetchAnswer({ commit }, inquiryNo) {\n    return axios.get(`/api/answers/${inquiryNo}`)\n      .then(response => {\n        commit('setAnswer', response.data);\n        console.log(\"fetched answer: \" + response.data);\n        return response.data;\n      })\n      .catch(error => {\n        console.error('답변 조회 실패:', error);\n        commit('setAnswer', null);\n        throw error;\n      });\n  },\n  async createAnswer({ dispatch }, answer) {\n    try {\n      const response = await axios.post('/admin/answers/create', answer);\n      console.log(\"Response from server:\", response.data);\n      await dispatch('fetchAnswer', answer.inquiry.inquiryNo);\n      return response.data;\n    } catch (error) {\n      console.error('답변 생성 실패:', error);\n      throw error;\n    }\n  },\n  async updateAnswer({ dispatch }, answer) {\n    try {\n      const response = await axios.put(`/admin/answers/update/${answer.inquiryNo}`, answer);\n      await dispatch('fetchAnswer', answer.inquiryNo);\n      return response.data;\n    } catch (error) {\n      console.error('답변 수정 실패:', error);\n      throw error;\n    }\n  },\n  async deleteAnswer({ dispatch }, answer) {\n    try {\n      const response = await axios.delete(`/admin/answers/delete/${answer.inquiryNo}`);\n      await dispatch('fetchAnswer', answer.inquiryNo);\n      return response.data;\n    } catch (error) {\n      console.error('답변 삭제 실패:', error);\n      throw error;\n    }\n  }\n};\n\nconst mutations = {\n  setInquiries: (state, inquiries) => (state.inquiries = inquiries),\n  setInquiry: (state, inquiry) => (state.inquiry = inquiry),\n  setAnswer: (state, answer) => (state.answer = answer)\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}