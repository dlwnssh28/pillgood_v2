{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, watch, defineComponent, onMounted, computed } from 'vue';\nimport { QuillEditor } from '@vueup/vue-quill';\nimport axios from '@/axios';\nexport default defineComponent({\n  name: 'RichTextEditor',\n  components: {\n    QuillEditor\n  },\n  props: {\n    modelValue: {\n      type: String,\n      required: true\n    },\n    editorOptions: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props, {\n    emit\n  }) {\n    const content = ref(props.modelValue);\n    const quillEditor = ref(null);\n    const images = ref([]);\n    const defaultEditorOptions = {\n      placeholder: 'Write something...',\n      modules: {\n        toolbar: {\n          container: [[{\n            header: [false]\n          }, 'image']],\n          handlers: {\n            image: () => {\n              const input = document.createElement('input');\n              input.setAttribute('type', 'file');\n              input.setAttribute('accept', 'image/*');\n              input.click();\n              input.onchange = async () => {\n                const file = input.files[0];\n                const fileName = decodeURIComponent(file.name);\n                const formData = new FormData();\n                formData.append('file', file);\n                if (!images.value.some(img => decodeURIComponent(img.name) === fileName)) {\n                  try {\n                    const response = await axios.post('/api/upload/image', formData, {\n                      headers: {\n                        'Content-Type': 'multipart/form-data'\n                      }\n                    });\n                    const url = response.data;\n                    const imageUrl = url.startsWith('http') ? url : `http://localhost:9095${url}`;\n                    images.value.push({\n                      url: imageUrl,\n                      name: file.name\n                    });\n                    if (quillEditor.value) {\n                      const quill = quillEditor.value.getQuill();\n                      const length = quill.getLength();\n                      quill.insertEmbed(length - 1, 'image', imageUrl);\n                      const img = quill.root.querySelector(`img[src=\"${imageUrl}\"]`);\n                      if (img) {\n                        img.style.display = 'none';\n                      }\n                    }\n                    updateContent();\n                  } catch (error) {\n                    console.error('이미지 업로드 실패:', error);\n                  }\n                }\n              };\n            }\n          }\n        }\n      },\n      ...props.editorOptions\n    };\n    const mergedEditorOptions = computed(() => ({\n      ...defaultEditorOptions,\n      ...props.editorOptions\n    }));\n    const removeImage = async name => {\n      const imageToRemove = images.value.find(img => img.name === name);\n      if (imageToRemove) {\n        try {\n          await axios.delete(`/api/delete/image`, {\n            data: {\n              url: imageToRemove.url\n            }\n          });\n          images.value = images.value.filter(img => img.name !== name);\n          if (quillEditor.value) {\n            const quill = quillEditor.value.getQuill();\n            const parser = new DOMParser();\n            const doc = parser.parseFromString(quill.root.innerHTML, 'text/html');\n            const imgTags = doc.querySelectorAll('img');\n            imgTags.forEach(img => {\n              if (img.src === imageToRemove.url) {\n                img.remove();\n              }\n            });\n            quill.root.innerHTML = doc.body.innerHTML;\n            updateContent();\n          }\n        } catch (error) {\n          console.error('Image delete failed:', error);\n        }\n      }\n    };\n    const updateContent = () => {\n      if (quillEditor.value) {\n        const quill = quillEditor.value.getQuill();\n        let contentHtml = quill.root.innerHTML;\n        content.value = contentHtml;\n        emit('update:modelValue', content.value);\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(content.value, 'text/html');\n        const imgTags = doc.querySelectorAll('img');\n        images.value = Array.from(imgTags).map(img => ({\n          url: img.src,\n          name: decodeURIComponent(img.src.split('/').pop())\n        }));\n      }\n    };\n    watch(content, newValue => {\n      emit('update:modelValue', newValue);\n    });\n    watch(() => props.modelValue, newValue => {\n      if (quillEditor.value) {\n        const quill = quillEditor.value.getQuill();\n        if (quill.root.innerHTML !== newValue) {\n          quill.root.innerHTML = newValue;\n          const parser = new DOMParser();\n          const doc = parser.parseFromString(newValue, 'text/html');\n          const imgTags = doc.querySelectorAll('img');\n          images.value = Array.from(imgTags).map(img => ({\n            url: img.src,\n            name: img.src.split('/').pop()\n          }));\n        }\n      }\n      content.value = newValue;\n    });\n    onMounted(() => {\n      if (quillEditor.value) {\n        const quill = quillEditor.value.getQuill();\n        quill.on('text-change', () => {\n          content.value = quill.root.innerHTML;\n          emit('text-change', quill.getText().trim());\n        });\n        const observer = new MutationObserver(() => {\n          content.value = quill.root.innerHTML;\n        });\n        observer.observe(quill.root, {\n          childList: true,\n          subtree: true,\n          characterData: true\n        });\n        quill.root.innerHTML = content.value;\n        const doc = new DOMParser().parseFromString(content.value, 'text/html');\n        const imgTags = doc.querySelectorAll('img');\n        images.value = Array.from(imgTags).map(img => ({\n          url: img.src,\n          name: img.src.split('/').pop()\n        }));\n      }\n    });\n    return {\n      content,\n      mergedEditorOptions,\n      quillEditor,\n      images,\n      removeImage\n    };\n  }\n});","map":{"version":3,"names":["ref","watch","defineComponent","onMounted","computed","QuillEditor","axios","name","components","props","modelValue","type","String","required","editorOptions","Object","default","setup","emit","content","quillEditor","images","defaultEditorOptions","placeholder","modules","toolbar","container","header","handlers","image","input","document","createElement","setAttribute","click","onchange","file","files","fileName","decodeURIComponent","formData","FormData","append","value","some","img","response","post","headers","url","data","imageUrl","startsWith","push","quill","getQuill","length","getLength","insertEmbed","root","querySelector","style","display","updateContent","error","console","mergedEditorOptions","removeImage","imageToRemove","find","delete","filter","parser","DOMParser","doc","parseFromString","innerHTML","imgTags","querySelectorAll","forEach","src","remove","body","contentHtml","Array","from","map","split","pop","newValue","on","getText","trim","observer","MutationObserver","observe","childList","subtree","characterData"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\components\\RichTextEditor.vue"],"sourcesContent":["<template>\n  <div>\n    <QuillEditor ref=\"quillEditor\" v-model=\"content\" :options=\"mergedEditorOptions\" style=\"min-height: 100px;\" />\n    <div style=\"display: block\">\n      <div v-for=\"image in images\" :key=\"image.url\" class=\"attached-img-container\">\n        <div class=\"attached-img\">\n          <img :src=\"image.url\" alt=\"Review Image\" style=\"width: 100px;\">\n          <button style=\"margin-top:10px;\" class=\"small-btn\" @click=\"removeImage(image.name)\">삭제</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, watch, defineComponent, onMounted, computed } from 'vue';\nimport { QuillEditor } from '@vueup/vue-quill';\nimport axios from '@/axios';\n\nexport default defineComponent({\n  name: 'RichTextEditor',\n  components: {\n    QuillEditor,\n  },\n  props: {\n    modelValue: {\n      type: String,\n      required: true,\n    },\n    editorOptions: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n  setup(props, { emit }) {\n    const content = ref(props.modelValue);\n    const quillEditor = ref(null);\n    const images = ref([]);\n\n    const defaultEditorOptions = {\n      placeholder: 'Write something...',\n      modules: {\n        toolbar: {\n          container: [\n            [{ header: [false] }, 'image'],\n          ],\n          handlers: {\n            image: () => {\n              const input = document.createElement('input');\n              input.setAttribute('type', 'file');\n              input.setAttribute('accept', 'image/*');\n              input.click();\n\n              input.onchange = async () => {\n                const file = input.files[0];\n                const fileName = decodeURIComponent(file.name);\n\n                const formData = new FormData();\n                formData.append('file', file);\n\n                if (!images.value.some((img) => decodeURIComponent(img.name) === fileName)) {\n                  try {\n                    const response = await axios.post('/api/upload/image', formData, {\n                      headers: {\n                        'Content-Type': 'multipart/form-data',\n                      },\n                    });\n\n                    const url = response.data;\n                    const imageUrl = url.startsWith('http') ? url : `http://localhost:9095${url}`;\n\n                    images.value.push({ url: imageUrl, name: file.name });\n\n                    if (quillEditor.value) {\n                      const quill = quillEditor.value.getQuill();\n                      const length = quill.getLength();\n                      quill.insertEmbed(length - 1, 'image', imageUrl);\n\n                      const img = quill.root.querySelector(`img[src=\"${imageUrl}\"]`);\n                      if (img) {\n                        img.style.display = 'none';\n                      }\n                    }\n\n                    updateContent();\n                  } catch (error) {\n                    console.error('이미지 업로드 실패:', error);\n                  }\n                }\n              };\n            },\n          },\n        },\n      },\n      ...props.editorOptions,\n    };\n\n    const mergedEditorOptions = computed(() => ({\n      ...defaultEditorOptions,\n      ...props.editorOptions,\n    }));\n\n    const removeImage = async (name) => {\n      const imageToRemove = images.value.find((img) => img.name === name);\n\n      if (imageToRemove) {\n        try {\n          await axios.delete(`/api/delete/image`, { data: { url: imageToRemove.url } });\n\n          images.value = images.value.filter((img) => img.name !== name);\n\n          if (quillEditor.value) {\n            const quill = quillEditor.value.getQuill();\n            const parser = new DOMParser();\n            const doc = parser.parseFromString(quill.root.innerHTML, 'text/html');\n            const imgTags = doc.querySelectorAll('img');\n\n            imgTags.forEach((img) => {\n              if (img.src === imageToRemove.url) {\n                img.remove();\n              }\n            });\n\n            quill.root.innerHTML = doc.body.innerHTML;\n            updateContent();\n          }\n        } catch (error) {\n          console.error('Image delete failed:', error);\n        }\n      }\n    };\n\n    const updateContent = () => {\n      if (quillEditor.value) {\n        const quill = quillEditor.value.getQuill();\n        let contentHtml = quill.root.innerHTML;\n\n        content.value = contentHtml;\n        emit('update:modelValue', content.value);\n\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(content.value, 'text/html');\n        const imgTags = doc.querySelectorAll('img');\n        images.value = Array.from(imgTags).map((img) => ({\n          url: img.src,\n          name: decodeURIComponent(img.src.split('/').pop()),\n        }));\n      }\n    };\n\n    watch(content, (newValue) => {\n      emit('update:modelValue', newValue);\n    });\n\n    watch(\n      () => props.modelValue,\n      (newValue) => {\n        if (quillEditor.value) {\n          const quill = quillEditor.value.getQuill();\n          if (quill.root.innerHTML !== newValue) {\n            quill.root.innerHTML = newValue;\n            const parser = new DOMParser();\n            const doc = parser.parseFromString(newValue, 'text/html');\n            const imgTags = doc.querySelectorAll('img');\n            images.value = Array.from(imgTags).map((img) => ({\n              url: img.src,\n              name: img.src.split('/').pop(),\n            }));\n          }\n        }\n        content.value = newValue;\n      }\n    );\n\n    onMounted(() => {\n      if (quillEditor.value) {\n        const quill = quillEditor.value.getQuill();\n\n        quill.on('text-change', () => {\n          content.value = quill.root.innerHTML;\n          emit('text-change', quill.getText().trim());\n        });\n\n        const observer = new MutationObserver(() => {\n          content.value = quill.root.innerHTML;\n        });\n\n        observer.observe(quill.root, {\n          childList: true,\n          subtree: true,\n          characterData: true,\n        });\n\n        quill.root.innerHTML = content.value;\n\n        const doc = new DOMParser().parseFromString(content.value, 'text/html');\n        const imgTags = doc.querySelectorAll('img');\n        images.value = Array.from(imgTags).map((img) => ({\n          url: img.src,\n          name: img.src.split('/').pop(),\n        }));\n      }\n    });\n\n    return {\n      content,\n      mergedEditorOptions,\n      quillEditor,\n      images,\n      removeImage,\n    };\n  },\n});\n</script>\n\n<style>\n.attached-img-container {\n  display: inline-block;\n  margin: 5px;\n  border-radius: 20px;\n  padding: 10px;\n}\n.attached-img {\n  display: inline-flex;\n  flex-direction: column;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}