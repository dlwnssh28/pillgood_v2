{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = {\n  class: \"box-container\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"text-melon\"\n}, \"문의 작성\", -1);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\"\n}, \"제목\", -1);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"상품\"\n}, \"상품\", -1);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"배송\"\n}, \"배송\", -1);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"주문\"\n}, \"주문\", -1);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"반품\"\n}, \"반품\", -1);\nconst _hoisted_9 = [_hoisted_5, _hoisted_6, _hoisted_7, _hoisted_8];\nconst _hoisted_10 = {\n  style: {\n    \"margin-top\": \"5px\"\n  }\n};\nconst _hoisted_11 = {\n  key: 0,\n  style: {\n    \"color\": \"red\"\n  }\n};\nconst _hoisted_12 = {\n  class: \"btn-container\"\n};\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-green\"\n}, \"문의 등록\", -1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_RichTextEditor = _resolveComponent(\"RichTextEditor\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.submitInquiry && $options.submitInquiry(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.inquiry.inquiryTitle = $event),\n    id: \"title\",\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.inquiry.inquiryTitle]])]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.inquiry.inquiryType = $event),\n    id: \"type\",\n    required: \"\"\n  }, _hoisted_9, 512), [[_vModelSelect, $data.inquiry.inquiryType]])]), _createElementVNode(\"div\", _hoisted_10, [_createVNode(_component_RichTextEditor, {\n    modelValue: $data.inquiry.inquiryContent,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.inquiry.inquiryContent = $event),\n    onInput: $options.validateContent\n  }, null, 8, [\"modelValue\", \"onInput\"]), $data.contentError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, \"내용을 입력하세요.\")) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.goHome && $options.goHome(...args)),\n    class: \"btn btn-gray\"\n  }, \"나가기\")])], 32)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","value","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","style","key","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","submitInquiry","_hoisted_4","$event","$data","inquiry","inquiryTitle","id","required","inquiryType","_hoisted_9","_hoisted_10","_createVNode","_component_RichTextEditor","modelValue","inquiryContent","onInput","validateContent","contentError","_hoisted_11","_createCommentVNode","_hoisted_12","_hoisted_13","onClick","goHome"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\InquiryCreate.vue"],"sourcesContent":["<template>\n    <div class=\"main-container\">\n      <div class=\"box-container\">\n        <h4 class=\"text-melon\">문의 작성</h4>\n        <form @submit.prevent=\"submitInquiry\">\n          <div>\n            <label for=\"title\">제목</label>\n            <input type=\"text\" v-model=\"inquiry.inquiryTitle\" id=\"title\" required>\n          </div>\n          <div>\n            <select v-model=\"inquiry.inquiryType\" id=\"type\" required>\n              <option value=\"상품\">상품</option>\n              <option value=\"배송\">배송</option>\n              <option value=\"주문\">주문</option>\n              <option value=\"반품\">반품</option>\n            </select>\n          </div>\n          <div style=\"margin-top: 5px;\">\n            <RichTextEditor v-model=\"inquiry.inquiryContent\" @input=\"validateContent\" />\n            <div v-if=\"contentError\" style=\"color: red;\">내용을 입력하세요.</div>\n          </div>\n          <div class=\"btn-container\">\n          <button type=\"submit\" class=\"btn btn-green\">문의 등록</button>\n          <button @click=\"goHome\" class=\"btn btn-gray\">나가기</button>\n          </div>\n        </form>\n      </div>\n    </div>\n</template>\n\n<script>\nimport RichTextEditor from '@/components/RichTextEditor.vue';\nimport { mapActions, mapGetters, mapState } from 'vuex';\nimport '../assets/styles.css';\n\nexport default {\n  components: { RichTextEditor },\n  data() {\n    return {\n      inquiry: {\n        inquiryTitle: '',\n        inquiryType: '',\n        inquiryContent: '',\n        inquiryDate: new Date().toISOString(),\n        inquiryStatus: '미답변'\n      },\n      contentError: false\n    };\n  },\n  computed: {\n    ...mapState({\n      memberUniqueId: state => state.member.memberId\n    }),\n    ...mapGetters('inquiry', ['allInquiries']),\n    inquiryList() {\n      console.log('inquiries 상태:', this.allInquiries);\n      return this.allInquiries;\n    }\n  },\n  methods: {\n    ...mapActions('inquiry', ['createInquiry', 'fetchInquiries']),\n    async submitInquiry() {\n      // 제출하기 전에 유효성 검사\n      if (!this.validateContent()) {\n        this.contentError = true;\n        return;\n      }\n      try {\n        this.inquiry.memberUniqueId = this.memberUniqueId;\n        console.log('문의 데이터:', this.inquiry);\n\n        await this.createInquiry(this.inquiry);\n        alert('문의가 작성되었습니다.');\n        this.$router.push('/myinquiries');\n      } catch (error) {\n        console.error('문의 등록 실패:', error);\n      }\n    },\n    validateContent() {\n      // HTML 태그를 제거하고 텍스트만 추출\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = this.inquiry.inquiryContent;\n      const textContent = tempDiv.textContent || tempDiv.innerText || \"\";\n\n      // 텍스트가 비어 있거나 공백만 있는 경우 유효성 검사 실패\n      if (!textContent.trim().length) {\n        this.contentError = true;\n        return false;\n      }\n\n      // 유효성 검사 통과\n      this.contentError = false;\n      return true;\n    },\n    goHome() {\n      this.$router.push('/');\n    },\n  }\n};\n</script>\n\n<style src=\"../assets/styles.css\"></style>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAe;gCACxBC,mBAAA,CAAiC;EAA7BD,KAAK,EAAC;AAAY,GAAC,OAAK;gCAGxBC,mBAAA,CAA6B;EAAtBC,GAAG,EAAC;AAAO,GAAC,IAAE;gCAKnBD,mBAAA,CAA8B;EAAtBE,KAAK,EAAC;AAAI,GAAC,IAAE;gCACrBF,mBAAA,CAA8B;EAAtBE,KAAK,EAAC;AAAI,GAAC,IAAE;gCACrBF,mBAAA,CAA8B;EAAtBE,KAAK,EAAC;AAAI,GAAC,IAAE;gCACrBF,mBAAA,CAA8B;EAAtBE,KAAK,EAAC;AAAI,GAAC,IAAE;oBAHrBC,UAA8B,EAC9BC,UAA8B,EAC9BC,UAA8B,EAC9BC,UAA8B,C;;EAG7BC,KAAwB,EAAxB;IAAA;EAAA;AAAwB;;EAjBvCC,GAAA;EAmBqCD,KAAmB,EAAnB;IAAA;EAAA;;;EAEtBR,KAAK,EAAC;AAAe;iCAC1BC,mBAAA,CAA0D;EAAlDS,IAAI,EAAC,QAAQ;EAACV,KAAK,EAAC;GAAgB,OAAK;;;uBArBvDW,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBJX,mBAAA,CAwBM,OAxBNY,UAwBM,GAvBJC,UAAiC,EACjCb,mBAAA,CAqBO;IArBAc,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAJrBC,cAAA,KAAAC,IAAA,KAI+BC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;MAClCjB,mBAAA,CAGM,cAFJoB,UAA6B,E,gBAC7BpB,mBAAA,CAAsE;IAA/DS,IAAI,EAAC,MAAM;IAP9B,uBAAAM,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAOwCC,KAAA,CAAAC,OAAO,CAACC,YAAY,GAAAH,MAAA;IAAEI,EAAE,EAAC,OAAO;IAACC,QAAQ,EAAR;gCAAjCJ,KAAA,CAAAC,OAAO,CAACC,YAAY,E,KAElDxB,mBAAA,CAOM,c,gBANJA,mBAAA,CAKS;IAfrB,uBAAAe,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAU6BC,KAAA,CAAAC,OAAO,CAACI,WAAW,GAAAN,MAAA;IAAEI,EAAE,EAAC,MAAM;IAACC,QAAQ,EAAR;KAV5DE,UAAA,S,gBAU6BN,KAAA,CAAAC,OAAO,CAACI,WAAW,E,KAOtC3B,mBAAA,CAGM,OAHN6B,WAGM,GAFJC,YAAA,CAA4EC,yBAAA;IAlBxFC,UAAA,EAkBqCV,KAAA,CAAAC,OAAO,CAACU,cAAc;IAlB3D,uBAAAlB,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAkBqCC,KAAA,CAAAC,OAAO,CAACU,cAAc,GAAAZ,MAAA;IAAGa,OAAK,EAAEhB,QAAA,CAAAiB;0CAC9Cb,KAAA,CAAAc,YAAY,I,cAAvB1B,mBAAA,CAA6D,OAA7D2B,WAA6D,EAAhB,YAAU,KAnBnEC,mBAAA,W,GAqBUtC,mBAAA,CAGM,OAHNuC,WAGM,GAFNC,WAA0D,EAC1DxC,mBAAA,CAAyD;IAAhDyC,OAAK,EAAA1B,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAwB,MAAA,IAAAxB,QAAA,CAAAwB,MAAA,IAAAzB,IAAA,CAAM;IAAElB,KAAK,EAAC;KAAe,KAAG,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}