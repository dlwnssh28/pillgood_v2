{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState, mapGetters, mapActions } from 'vuex';\nimport axios from 'axios';\nexport default {\n  name: 'ApprovePayment',\n  data() {\n    return {\n      currentOrder: JSON.parse(localStorage.getItem('currentOrder')) || null\n    };\n  },\n  computed: {\n    ...mapGetters('member', ['memberId']),\n    ...mapState('order', {\n      user: state => state.userProfile\n    }),\n    totalAmount() {\n      return this.currentOrder ? this.currentOrder.totalAmount : 0; // 현재 주문 정보에서 최종 금액을 가져옵니다.\n    }\n  },\n  async created() {\n    if (!this.currentOrder) {\n      await this.fetchUserProfile(); // 사용자 정보를 가져옵니다.\n      await this.fetchOrderDetails(); // 주문 정보를 가져옵니다.\n    }\n    console.log('Current Order in ApprovePayment (created):', this.currentOrder); // 로깅 추가\n  },\n  methods: {\n    ...mapActions('order', ['fetchUserProfile', 'fetchOrderDetails']),\n    async approvePayment() {\n      try {\n        const response = await axios.post('/api/payment/confirm-billing', {\n          amount: this.totalAmount,\n          orderId: this.currentOrder.orderNo,\n          // 현재 주문 번호를 사용합니다.\n          orderName: '토스 프라임 구독',\n          customerKey: this.memberId,\n          customerEmail: this.user.email,\n          customerName: this.user.name\n        });\n        if (response.status === 200) {\n          localStorage.setItem('paymentResponse', JSON.stringify(response.data)); // response 값을 localStorage에 저장\n          this.$router.push({\n            name: 'BillingSuccess'\n          }); // 결제 성공 페이지로 이동\n        } else {\n          console.error('결제 승인 요청 실패:', response);\n        }\n      } catch (error) {\n        console.error('결제 승인 요청 중 오류 발생:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapGetters","mapActions","axios","name","data","currentOrder","JSON","parse","localStorage","getItem","computed","user","state","userProfile","totalAmount","created","fetchUserProfile","fetchOrderDetails","console","log","methods","approvePayment","response","post","amount","orderId","orderNo","orderName","customerKey","memberId","customerEmail","email","customerName","status","setItem","stringify","$router","push","error"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\ApprovePayment.vue"],"sourcesContent":["<template>\n    <div class=\"main-container box-shadow\">\n      <h4 class=\"payment-title text-melon\">결제 승인</h4>\n      <div v-if=\"currentOrder\">\n        <div class=\"order-summary\">\n          <p>주문번호: {{ currentOrder.orderNo }}</p>\n          <p>수령인: {{ currentOrder.recipient }}</p>\n          <p>총 금액: {{ totalAmount }} 원</p>\n          <!-- 기타 필요한 주문 정보를 추가하세요 -->\n        </div>\n        <button @click=\"approvePayment\" class=\"btn btn-green\">결제 승인</button>\n      </div>\n      <div v-else>\n        <p>로딩 중...</p>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { mapState, mapGetters, mapActions } from 'vuex';\n  import axios from 'axios';\n  \n  export default {\n    name: 'ApprovePayment',\n    data() {\n      return {\n        currentOrder: JSON.parse(localStorage.getItem('currentOrder')) || null\n      };\n    },\n    computed: {\n      ...mapGetters('member', ['memberId']),\n      ...mapState('order', {\n        user: state => state.userProfile,\n      }),\n      totalAmount() {\n        return this.currentOrder ? this.currentOrder.totalAmount : 0; // 현재 주문 정보에서 최종 금액을 가져옵니다.\n      }\n    },\n    async created() {\n      if (!this.currentOrder) {\n        await this.fetchUserProfile(); // 사용자 정보를 가져옵니다.\n        await this.fetchOrderDetails(); // 주문 정보를 가져옵니다.\n      }\n      console.log('Current Order in ApprovePayment (created):', this.currentOrder); // 로깅 추가\n    },\n    methods: {\n      ...mapActions('order', ['fetchUserProfile', 'fetchOrderDetails']),\n      async approvePayment() {\n        try {\n          const response = await axios.post('/api/payment/confirm-billing', {\n            amount: this.totalAmount,\n            orderId: this.currentOrder.orderNo, // 현재 주문 번호를 사용합니다.\n            orderName: '토스 프라임 구독',\n            customerKey: this.memberId,\n            customerEmail: this.user.email,\n            customerName: this.user.name\n          });\n          if (response.status === 200) {\n            localStorage.setItem('paymentResponse', JSON.stringify(response.data)); // response 값을 localStorage에 저장\n            this.$router.push({ name: 'BillingSuccess' }); // 결제 성공 페이지로 이동\n          } else {\n            console.error('결제 승인 요청 실패:', response);\n          }\n        } catch (error) {\n          console.error('결제 승인 요청 중 오류 발생:', error);\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .main-container {\n    max-width: 600px;\n    margin: 0 auto;\n    padding: 20px;\n    background-color: #fff;\n    border-radius: 8px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  }\n  \n  .payment-title {\n    font-size: 1.5rem;\n    font-weight: bold;\n    margin-bottom: 20px;\n  }\n  \n  .order-summary {\n    margin-bottom: 20px;\n    font-size: 1rem;\n  }\n  \n  .order-summary p {\n    margin: 10px 0;\n  }\n  \n  .btn {\n    display: block;\n    width: 100%;\n    padding: 10px;\n    background-color: #5cb85c;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 1.2rem;\n    text-align: center;\n  }\n  \n  .btn:hover {\n    background-color: #4cae4c;\n  }\n  \n  .loading {\n    font-size: 1.2rem;\n    text-align: center;\n    margin-top: 20px;\n  }\n  </style>\n  "],"mappings":";AAmBE,SAASA,QAAQ,EAAEC,UAAU,EAAEC,UAAS,QAAS,MAAM;AACvD,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,KAAK;IACpE,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGV,UAAU,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,CAAC;IACrC,GAAGD,QAAQ,CAAC,OAAO,EAAE;MACnBY,IAAI,EAAEC,KAAI,IAAKA,KAAK,CAACC;IACvB,CAAC,CAAC;IACFC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACT,YAAW,GAAI,IAAI,CAACA,YAAY,CAACS,WAAU,GAAI,CAAC,EAAE;IAChE;EACF,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI,CAAC,IAAI,CAACV,YAAY,EAAE;MACtB,MAAM,IAAI,CAACW,gBAAgB,CAAC,CAAC,EAAE;MAC/B,MAAM,IAAI,CAACC,iBAAiB,CAAC,CAAC,EAAE;IAClC;IACAC,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAE,IAAI,CAACd,YAAY,CAAC,EAAE;EAChF,CAAC;EACDe,OAAO,EAAE;IACP,GAAGnB,UAAU,CAAC,OAAO,EAAE,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,CAAC;IACjE,MAAMoB,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMpB,KAAK,CAACqB,IAAI,CAAC,8BAA8B,EAAE;UAChEC,MAAM,EAAE,IAAI,CAACV,WAAW;UACxBW,OAAO,EAAE,IAAI,CAACpB,YAAY,CAACqB,OAAO;UAAE;UACpCC,SAAS,EAAE,WAAW;UACtBC,WAAW,EAAE,IAAI,CAACC,QAAQ;UAC1BC,aAAa,EAAE,IAAI,CAACnB,IAAI,CAACoB,KAAK;UAC9BC,YAAY,EAAE,IAAI,CAACrB,IAAI,CAACR;QAC1B,CAAC,CAAC;QACF,IAAImB,QAAQ,CAACW,MAAK,KAAM,GAAG,EAAE;UAC3BzB,YAAY,CAAC0B,OAAO,CAAC,iBAAiB,EAAE5B,IAAI,CAAC6B,SAAS,CAACb,QAAQ,CAAClB,IAAI,CAAC,CAAC,EAAE;UACxE,IAAI,CAACgC,OAAO,CAACC,IAAI,CAAC;YAAElC,IAAI,EAAE;UAAiB,CAAC,CAAC,EAAE;QACjD,OAAO;UACLe,OAAO,CAACoB,KAAK,CAAC,cAAc,EAAEhB,QAAQ,CAAC;QACzC;MACF,EAAE,OAAOgB,KAAK,EAAE;QACdpB,OAAO,CAACoB,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MAC3C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}