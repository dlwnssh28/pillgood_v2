{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4dc550a2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = {\n  class: \"box-container-no-shade\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"box-container\"\n};\nconst _hoisted_4 = {\n  style: {\n    \"text-align\": \"left\"\n  }\n};\nconst _hoisted_5 = {\n  style: {\n    \"font-weight\": \"bold\",\n    \"font-size\": \"20px\"\n  }\n};\nconst _hoisted_6 = {\n  class: \"line-table\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"주문 날짜\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"제품명\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"금액\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"리뷰 쓰기/재구매\")])], -1));\nconst _hoisted_8 = {\n  key: 0\n};\nconst _hoisted_9 = {\n  class: \"btn-container\"\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [$data.order ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"p\", _hoisted_4, [_createElementVNode(\"span\", _hoisted_5, _toDisplayString($data.order.orderStatus), 1), _createTextVNode(\" \" + _toDisplayString($data.order.orderNo), 1)]), _createElementVNode(\"table\", _hoisted_6, [_hoisted_7, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.order.details, detail => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: detail.orderDetailNo\n    }, [_createElementVNode(\"td\", null, _toDisplayString($options.formatDate($data.order.orderDate)), 1), _createElementVNode(\"td\", null, _toDisplayString($options.getProductName(detail.productId)), 1), _createElementVNode(\"td\", null, _toDisplayString(detail.amount) + \"원\", 1), $data.order.orderStatus === '구매확정' ? (_openBlock(), _createElementBlock(\"td\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [$options.hasReview(detail.orderDetailNo) ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      class: \"btn btn-green\",\n      onClick: $event => $options.goToReviewDetail($data.order, detail)\n    }, \"내 리뷰 보기\", 8, _hoisted_10)) : (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      class: \"btn btn-green\",\n      onClick: $event => $options.goToReviewPage($data.order, detail)\n    }, \"리뷰쓰기\", 8, _hoisted_11)), _createElementVNode(\"button\", {\n      class: \"btn btn-gray\",\n      onClick: $event => $options.addToCart(detail.productId, 1)\n    }, \"재구매\", 8, _hoisted_12)])])) : (_openBlock(), _createElementBlock(\"td\", _hoisted_13, \"구매 확정을 완료해 주세요\"))]);\n  }), 128))])])])) : _createCommentVNode(\"\", true)])]);\n}","map":{"version":3,"names":["class","key","style","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","$data","order","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","orderStatus","_createTextVNode","orderNo","_hoisted_6","_hoisted_7","_Fragment","_renderList","details","detail","orderDetailNo","$options","formatDate","orderDate","getProductName","productId","amount","_hoisted_8","_hoisted_9","hasReview","onClick","$event","goToReviewDetail","_hoisted_10","goToReviewPage","_hoisted_11","addToCart","_hoisted_12","_hoisted_13","_createCommentVNode"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\OrderDetail.vue"],"sourcesContent":["<template>\n  <div class=\"main-container\">\n    <div class=\"box-container-no-shade\">\n    <!-- <h3 class=\"text-melon\">주문 상세 내역</h3> -->\n\n    <!-- 주문 상세 -->\n    <div v-if=\"order\" class=\"box-container\">\n    <p style=\"text-align: left;\">\n      <span style=\"font-weight: bold; font-size: 20px;\">{{ order.orderStatus }}</span> {{ order.orderNo }}\n    </p>\n    <!-- 주문상세 리스트 -->\n    <table class=\"line-table\">\n      <thead>\n        <tr>\n          <th>주문 날짜</th>\n          <th>제품명</th>\n          <th>금액</th>\n          <th>리뷰 쓰기/재구매</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"detail in order.details\" :key=\"detail.orderDetailNo\">\n          <td>{{ formatDate(order.orderDate) }}</td>\n          <td>{{ getProductName(detail.productId) }}</td>\n          <td>{{ detail.amount }}원</td>\n          <td v-if=\"order.orderStatus === '구매확정'\">\n            <div class=\"btn-container\">\n              <button v-if=\"hasReview(detail.orderDetailNo)\" class=\"btn btn-green\" @click=\"goToReviewDetail(order, detail)\">내 리뷰 보기</button>\n              <button v-else class=\"btn btn-green\" @click=\"goToReviewPage(order, detail)\">리뷰쓰기</button>\n              <button class=\"btn btn-gray\" @click=\"addToCart(detail.productId, 1)\">재구매</button>\n            </div>\n          </td>\n          <td v-else>구매 확정을 완료해 주세요</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  </div>\n  </div>\n</template>\n\n<script>\nimport axios from '../axios'; // 'axios.js' 설정 파일을 import\nimport { mapActions } from 'vuex';\nimport '../assets/styles.css';\n\nexport default {\n  props: {\n    orderNo: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      order: null,\n      products: {}, // 제품 정보를 저장할 객체\n      reviews: [], // 리뷰 정보를 저장할 배열\n      loading: true,\n    };\n  },\n  methods: {\n    ...mapActions('cart', ['addToCart']),\n    async fetchOrderDetails() {\n      try {\n        console.log(`Received order number: ${this.orderNo}`); // 콘솔에 주문 번호 출력\n        const response = await axios.get(`/api/orders/${this.orderNo}`);\n        console.log(`주문 번호 ${this.orderNo}의 상세 내역:`, response.data);\n        this.order = response.data;\n\n        // 각 주문의 상세 내역을 가져옵니다.\n        const detailsResponse = await axios.get(`/api/order-details/order/${this.orderNo}`);\n        this.order.details = detailsResponse.data;\n        console.log(`주문 상세 내역:`, detailsResponse.data);\n\n        // 각 제품에 대한 상세 정보를 병렬로 가져옵니다.\n        await Promise.all(this.order.details.map(async (detail) => {\n          if (!this.products[detail.productId]) {\n            const productResponse = await axios.get(`/api/products/detail/${detail.productId}`);\n            console.log(`제품 ID ${detail.productId}의 상세 정보:`, productResponse.data);\n            this.products[detail.productId] = productResponse.data;\n          }\n        }));\n\n        // 모든 리뷰를 가져옵니다.\n        await this.fetchReviews();\n      } catch (error) {\n        console.error('Failed to fetch order details:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async fetchReviews() {\n      try {\n        const response = await axios.get('/api/reviews/list'); // 새로운 엔드포인트 사용\n        this.reviews = response.data;\n        console.log(\"리뷰 테이블에서 불러온 정보:\", this.reviews);\n      } catch (error) {\n        console.error('리뷰 데이터를 가져오는 데 실패했습니다:', error);\n      }\n    },\n    hasReview(orderDetailNo) {\n      return this.reviews.some(review => review.orderDetailNo === orderDetailNo);\n    },\n    getProductName(productId) {\n      return this.products[productId] ? this.products[productId].productName : 'Loading...';\n    },\n    getProductImage(productId) {\n      if (this.products[productId]) {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(this.products[productId].productImage, 'text/html');\n        const imgTag = doc.querySelector('img');\n        return imgTag ? imgTag.src : '';\n      }\n      return '';\n    },\n    formatDate(dateString) {\n      const options = { year: '2-digit', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n      const date = new Date(dateString);\n      return `${date.toLocaleDateString('ko-KR', options).replace(/\\./g, '.').replace(/\\s/g, '').slice(0, -1)} 주문`;\n    },\n    goToReviewPage(order, detail) {\n      const queryParams = {\n        orderNo: order.orderNo,\n        orderDate: order.orderDate,\n        productId: detail.productId,\n        productName: this.getProductName(detail.productId),\n        productImage: this.getProductImage(detail.productId),\n        orderDetailNo: detail.orderDetailNo // orderDetailNo 추가\n      };\n      console.log(\"ReviewCreate 페이지로 넘기는 정보:\", queryParams);\n\n      this.$router.push({\n        name: 'ReviewCreate',\n        query: queryParams\n      });\n    },\n    goToReviewDetail(order, detail) {\n      const review = this.reviews.find(review => review.orderDetailNo === detail.orderDetailNo);\n      if (review) {\n        const queryParams = {\n          reviewId: review.reviewId,\n          orderNo: order.orderNo,\n          orderDate: order.orderDate,\n          productId: detail.productId,\n          productName: this.getProductName(detail.productId),\n          productImage: this.getProductImage(detail.productId),\n          orderDetailNo: detail.orderDetailNo.toString(), // orderDetailNo를 문자열로 변환\n          reviewContent: review.reviewContent,\n          rating: review.rating\n        };\n        console.log(\"ReviewDetail 페이지로 넘기는 정보:\", queryParams);\n\n        this.$router.push({\n          name: 'ReviewDetail',\n          query: queryParams\n        });\n      }\n    },\n    goToReturnPage(order, detail, requestType) {\n      this.$router.push({\n        name: 'RefundCreate', // 기존 ReturnCreate를 RefundCreate로 변경\n        query: {\n          orderNo: order.orderNo,\n          orderDate: order.orderDate,\n          productId: detail ? detail.productId : null,\n          productName: detail ? this.getProductName(detail.productId) : null,\n          productImage: detail ? this.getProductImage(detail.productId) : null,\n          orderDetailNo: detail ? detail.orderDetailNo : null,\n          requestType: requestType,\n          refundAmount: detail ? detail.amount : null // 환불 금액을 쿼리 파라미터로 전달\n        }\n      });\n    },\n    async addToCart(productId, quantity) {\n    try {\n      const cartItem = {\n        productId,\n        productQuantity: quantity\n      };\n\n      const response = await this.$store.dispatch('cart/addToCart', cartItem);\n      if (response.status === 201) {\n        console.log('Product added to cart successfully:', productId);\n        this.$router.push({ name: 'Cart' }); // 장바구니 페이지로 이동\n      } else {\n        console.error('Failed to add product to cart:', productId);\n      }\n    } catch (error) {\n      console.error('Error adding product to cart:', error);\n    }}\n  },\n  async created() {\n    console.log(\"OrderDetail created with orderNo:\", this.orderNo);\n    await this.fetchOrderDetails();\n  }\n};\n</script>\n\n<style scoped>\n  .main-container {\n    padding: 0;\n    margin-top: 5px;\n  }\n\n\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAwB;;EAFvCC,GAAA;EAMsBD,KAAK,EAAC;;;EACrBE,KAAyB,EAAzB;IAAA;EAAA;AAAyB;;EACpBA,KAA2C,EAA3C;IAAA;IAAA;EAAA;AAA2C;;EAG5CF,KAAK,EAAC;AAAY;gEACvBG,mBAAA,CAOQ,gB,aANNA,mBAAA,CAKK,a,aAJHA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAY,YAAR,KAAG,G,aACPA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAkB,YAAd,WAAS,E;;EAjBvBF,GAAA;AAAA;;EA0BiBD,KAAK,EAAC;AAAe;oBA1BtC;oBAAA;oBAAA;;EAAAC,GAAA;AAAA;;uBACEG,mBAAA,CAqCM,OArCNC,UAqCM,GApCJF,mBAAA,CAmCI,OAnCJG,UAmCI,GA/BOC,KAAA,CAAAC,KAAK,I,cAAhBJ,mBAAA,CA8BI,OA9BJK,UA8BI,GA7BJN,mBAAA,CAEI,KAFJO,UAEI,GADFP,mBAAA,CAAgF,QAAhFQ,UAAgF,EAAAC,gBAAA,CAA3BL,KAAA,CAAAC,KAAK,CAACK,WAAW,OAR5EC,gBAAA,CAQsF,GAAC,GAAAF,gBAAA,CAAGL,KAAA,CAAAC,KAAK,CAACO,OAAO,M,GAGnGZ,mBAAA,CAwBQ,SAxBRa,UAwBQ,GAvBNC,UAOQ,EACRd,mBAAA,CAcQ,iB,kBAbNC,mBAAA,CAYKc,SAAA,QAjCbC,WAAA,CAqB6BZ,KAAA,CAAAC,KAAK,CAACY,OAAO,EAAvBC,MAAM;yBAAjBjB,mBAAA,CAYK;MAZgCH,GAAG,EAAEoB,MAAM,CAACC;QAC/CnB,mBAAA,CAA0C,YAAAS,gBAAA,CAAnCW,QAAA,CAAAC,UAAU,CAACjB,KAAA,CAAAC,KAAK,CAACiB,SAAS,QACjCtB,mBAAA,CAA+C,YAAAS,gBAAA,CAAxCW,QAAA,CAAAG,cAAc,CAACL,MAAM,CAACM,SAAS,QACtCxB,mBAAA,CAA6B,YAAAS,gBAAA,CAAtBS,MAAM,CAACO,MAAM,IAAG,GAAC,MACdrB,KAAA,CAAAC,KAAK,CAACK,WAAW,e,cAA3BT,mBAAA,CAMK,MA/BfyB,UAAA,GA0BY1B,mBAAA,CAIM,OAJN2B,UAIM,GAHUP,QAAA,CAAAQ,SAAS,CAACV,MAAM,CAACC,aAAa,K,cAA5ClB,mBAAA,CAA8H;MA3B5IH,GAAA;MA2B6DD,KAAK,EAAC,eAAe;MAAEgC,OAAK,EAAAC,MAAA,IAAEV,QAAA,CAAAW,gBAAgB,CAAC3B,KAAA,CAAAC,KAAK,EAAEa,MAAM;OAAG,SAAO,KA3BnIc,WAAA,M,cA4Bc/B,mBAAA,CAAyF;MA5BvGH,GAAA;MA4B6BD,KAAK,EAAC,eAAe;MAAEgC,OAAK,EAAAC,MAAA,IAAEV,QAAA,CAAAa,cAAc,CAAC7B,KAAA,CAAAC,KAAK,EAAEa,MAAM;OAAG,MAAI,KA5B9FgB,WAAA,IA6BclC,mBAAA,CAAiF;MAAzEH,KAAK,EAAC,cAAc;MAAEgC,OAAK,EAAAC,MAAA,IAAEV,QAAA,CAAAe,SAAS,CAACjB,MAAM,CAACM,SAAS;OAAM,KAAG,KA7BtFY,WAAA,E,sBAgCUnC,mBAAA,CAA8B,MAhCxCoC,WAAA,EAgCqB,gBAAc,G;qBAhCnCC,mBAAA,W","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}