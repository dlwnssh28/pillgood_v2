{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport '../assets/styles.css';\nexport default {\n  name: 'InquiryListPage',\n  data() {\n    return {\n      inquiries: [],\n      searchOption: 'title',\n      inputSearchQuery: '',\n      searchQuery: ''\n    };\n  },\n  computed: {\n    filteredInquiries() {\n      if (!this.searchQuery) {\n        return this.inquiries;\n      }\n      return this.inquiries.filter(inquiry => {\n        if (this.searchOption === 'title') {\n          return inquiry.inquiryTitle.includes(this.searchQuery);\n        } else if (this.searchOption === 'status') {\n          return inquiry.inquiryStatus.includes(this.searchQuery);\n        } else if (this.searchOption === 'type') {\n          return inquiry.inquiryType.includes(this.searchQuery);\n        }\n      });\n    }\n  },\n  methods: {\n    async fetchInquiries() {\n      try {\n        const response = await axios.get(`/api/inquiries/list`);\n        console.log(response.data); // 서버 응답 데이터 확인\n        this.inquiries = response.data;\n      } catch (error) {\n        console.error('Error fetching inquiries:', error);\n      }\n    },\n    searchInquiries() {\n      this.searchQuery = this.inputSearchQuery;\n      this.inputSearchQuery = ''; // 검색 버튼 클릭 시 검색어 초기화\n    },\n    formatDate(date) {\n      const options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit'\n      };\n      return new Date(date).toLocaleDateString(undefined, options);\n    },\n    goToInquiryCreate() {\n      this.$router.push('/inquiries/create');\n    },\n    hasImage(content) {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(content, 'text/html');\n      const imgTags = doc.querySelectorAll('img');\n      return imgTags.length > 0;\n    }\n  },\n  created() {\n    this.fetchInquiries();\n  }\n};","map":{"version":3,"names":["axios","name","data","inquiries","searchOption","inputSearchQuery","searchQuery","computed","filteredInquiries","filter","inquiry","inquiryTitle","includes","inquiryStatus","inquiryType","methods","fetchInquiries","response","get","console","log","error","searchInquiries","formatDate","date","options","year","month","day","Date","toLocaleDateString","undefined","goToInquiryCreate","$router","push","hasImage","content","parser","DOMParser","doc","parseFromString","imgTags","querySelectorAll","length","created"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\InquiryPage.vue"],"sourcesContent":["<template>\n  <div class=\"main-container\">\n    <div class=\"box-container box-shadow\">\n      <h2 class=\"text-melon\">문의</h2>\n\n      <!-- 검색 필드 -->\n      <div class=\"search-container\">\n        <select v-model=\"searchOption\">\n          <option value=\"title\" selected>제목</option>\n          <option value=\"status\">상태</option>\n          <option value=\"type\">유형</option>\n        </select>\n        <div class=\"select-conatiner\">\n        <div v-if=\"searchOption === 'title'\">\n          <input type=\"text\" v-model=\"inputSearchQuery\" placeholder=\"검색어를 입력하세요\" />\n        </div>\n        <div v-else-if=\"searchOption === 'status'\">\n          <select v-model=\"inputSearchQuery\">\n            <option value=\"open\">답변 완료</option>\n            <option value=\"closed\">미답변</option>\n          </select>\n        </div>\n        <div v-else-if=\"searchOption === 'type'\">\n          <select v-model=\"inputSearchQuery\">\n            <option value=\"general\">일반</option>\n            <option value=\"product\">제품</option>\n            <option value=\"order\">주문</option>\n          </select>\n        </div>\n        </div>\n        <button class=\"icon-button\" @click=\"searchInquiries\"><i class=\"fa-solid fa-magnifying-glass\"></i></button>\n      </div>\n\n      <!-- 글쓰기 버튼\n      <div class=\"bttn-container\">\n        <button @click=\"goToInquiryCreate\" class=\"btn btn-green\">글쓰기</button>\n      </div> -->\n\n      <table class=\"line-table\">\n        <thead>\n          <tr>\n            <th>No</th>\n            <th>Type</th>\n            <th>Title</th>\n            <th>Status</th>\n            <th>Date</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"inquiry in filteredInquiries\" :key=\"inquiry.inquiryNo\">\n            <td>{{ inquiry.inquiryNo }}</td>\n            <td>{{ inquiry.inquiryType }}</td>\n            <td>\n              <router-link :to=\"{ name: 'InquiryDetail', params: { id: inquiry.inquiryNo } }\">\n                {{ inquiry.inquiryTitle }}\n                <i v-if=\"hasImage(inquiry.inquiryContent)\" class=\"fa-solid fa-image\"></i>\n              </router-link>\n            </td>\n            <td>{{ inquiry.inquiryStatus }}</td>\n            <td>{{ formatDate(inquiry.inquiryDate) }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport '../assets/styles.css';\n\nexport default {\n  name: 'InquiryListPage',\n  data() {\n    return {\n      inquiries: [],\n      searchOption: 'title',\n      inputSearchQuery: '',\n      searchQuery: ''\n    };\n  },\n  computed: {\n    filteredInquiries() {\n      if (!this.searchQuery) {\n        return this.inquiries;\n      }\n      return this.inquiries.filter(inquiry => {\n        if (this.searchOption === 'title') {\n          return inquiry.inquiryTitle.includes(this.searchQuery);\n        } else if (this.searchOption === 'status') {\n          return inquiry.inquiryStatus.includes(this.searchQuery);\n        } else if (this.searchOption === 'type') {\n          return inquiry.inquiryType.includes(this.searchQuery);\n        }\n      });\n    }\n  },\n  methods: {\n    async fetchInquiries() {\n      try {\n        const response = await axios.get(`/api/inquiries/list`);\n        console.log(response.data); // 서버 응답 데이터 확인\n        this.inquiries = response.data;\n      } catch (error) {\n        console.error('Error fetching inquiries:', error);\n      }\n    },\n    searchInquiries() {\n      this.searchQuery = this.inputSearchQuery;\n      this.inputSearchQuery = ''; // 검색 버튼 클릭 시 검색어 초기화\n    },\n    formatDate(date) {\n      const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n      return new Date(date).toLocaleDateString(undefined, options);\n    },\n    goToInquiryCreate() {\n      this.$router.push('/inquiries/create');\n    },\n    hasImage(content) {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(content, 'text/html');\n      const imgTags = doc.querySelectorAll('img');\n      return imgTags.length > 0;\n    }\n  },\n  created() {\n    this.fetchInquiries();\n  }\n};\n</script>\n\n<style scope>\n.icon-button {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px;\n  margin: 5px;\n  font-size: 1em;\n  text-decoration: none;\n  border: none;\n  background: none;\n  cursor: pointer;\n  color: #B4D9A9;\n}\n\n.icon-button:hover {\n  color: #98c387; /* 호버 시 색상 변경 */\n}\n\n.search-container {\n\tdisplay: flex;\n\tjustify-content: flex-end;\n}\n\n.search-container select {\n\twidth: 100px;\n}\n\n.search-container input {\n\twidth: 300px;\n}\n\n.select-conatiner {\n\tdisplay: flex;\n\tjustify-content: center;\n}\n\n.select-conatiner select {\n  width: 300px;\n}\n\n.icon-button {\n\tmargin-left: 10px;\n}\n\n</style>\n"],"mappings":";AAoEA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAO,sBAAsB;AAE7B,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,YAAY,EAAE,OAAO;MACrBC,gBAAgB,EAAE,EAAE;MACpBC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAAC,IAAI,CAACF,WAAW,EAAE;QACrB,OAAO,IAAI,CAACH,SAAS;MACvB;MACA,OAAO,IAAI,CAACA,SAAS,CAACM,MAAM,CAACC,OAAM,IAAK;QACtC,IAAI,IAAI,CAACN,YAAW,KAAM,OAAO,EAAE;UACjC,OAAOM,OAAO,CAACC,YAAY,CAACC,QAAQ,CAAC,IAAI,CAACN,WAAW,CAAC;QACxD,OAAO,IAAI,IAAI,CAACF,YAAW,KAAM,QAAQ,EAAE;UACzC,OAAOM,OAAO,CAACG,aAAa,CAACD,QAAQ,CAAC,IAAI,CAACN,WAAW,CAAC;QACzD,OAAO,IAAI,IAAI,CAACF,YAAW,KAAM,MAAM,EAAE;UACvC,OAAOM,OAAO,CAACI,WAAW,CAACF,QAAQ,CAAC,IAAI,CAACN,WAAW,CAAC;QACvD;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EACDS,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMjB,KAAK,CAACkB,GAAG,CAAC,qBAAqB,CAAC;QACvDC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACf,IAAI,CAAC,EAAE;QAC5B,IAAI,CAACC,SAAQ,GAAIc,QAAQ,CAACf,IAAI;MAChC,EAAE,OAAOmB,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACDC,eAAeA,CAAA,EAAG;MAChB,IAAI,CAAChB,WAAU,GAAI,IAAI,CAACD,gBAAgB;MACxC,IAAI,CAACA,gBAAe,GAAI,EAAE,EAAE;IAC9B,CAAC;IACDkB,UAAUA,CAACC,IAAI,EAAE;MACf,MAAMC,OAAM,GAAI;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,SAAS;QAAEC,GAAG,EAAE;MAAU,CAAC;MACrE,OAAO,IAAIC,IAAI,CAACL,IAAI,CAAC,CAACM,kBAAkB,CAACC,SAAS,EAAEN,OAAO,CAAC;IAC9D,CAAC;IACDO,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,mBAAmB,CAAC;IACxC,CAAC;IACDC,QAAQA,CAACC,OAAO,EAAE;MAChB,MAAMC,MAAK,GAAI,IAAIC,SAAS,CAAC,CAAC;MAC9B,MAAMC,GAAE,GAAIF,MAAM,CAACG,eAAe,CAACJ,OAAO,EAAE,WAAW,CAAC;MACxD,MAAMK,OAAM,GAAIF,GAAG,CAACG,gBAAgB,CAAC,KAAK,CAAC;MAC3C,OAAOD,OAAO,CAACE,MAAK,GAAI,CAAC;IAC3B;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC5B,cAAc,CAAC,CAAC;EACvB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}