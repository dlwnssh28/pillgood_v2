{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '../axios';\nimport StarRating from 'vue3-star-ratings';\nimport { mapState } from 'vuex';\nimport '../assets/styles.css';\nimport RichTextEditor from '@/components/RichTextEditor.vue';\nexport default {\n  components: {\n    'star-rating': StarRating,\n    RichTextEditor\n  },\n  data() {\n    return {\n      reviewContent: '',\n      rating: 0,\n      reviewId: null,\n      isEditing: false\n    };\n  },\n  computed: {\n    ...mapState('member', ['memberId']),\n    orderNo() {\n      return this.$route.query.orderNo;\n    },\n    orderDate() {\n      return this.$route.query.orderDate;\n    },\n    productId() {\n      return this.$route.query.productId;\n    },\n    productName() {\n      return this.$route.query.productName;\n    },\n    productImage() {\n      return this.$route.query.productImage;\n    },\n    orderDetailNo() {\n      return this.$route.query.orderDetailNo;\n    },\n    formattedOrderDate() {\n      const options = {\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      };\n      const formattedDate = new Date(this.orderDate).toLocaleDateString('ko-KR', options).replace(/\\./g, '').replace(/\\s/g, '. ');\n      return `${formattedDate}. 주문`;\n    }\n  },\n  mounted() {\n    this.reviewId = this.$route.query.reviewId;\n    this.reviewContent = this.$route.query.reviewContent || '';\n    this.rating = this.$route.query.rating || 0;\n    console.log('Received query params:');\n    console.log('orderNo:', this.orderNo);\n    console.log('orderDate:', this.orderDate);\n    console.log('productId:', this.productId);\n    console.log('productName:', this.productName);\n    console.log('productImage:', this.productImage);\n    console.log('orderDetailNo:', this.orderDetailNo);\n  },\n  methods: {\n    extractText(content) {\n      // 텍스트만 추출\n      return content.replace(/<\\/?p>/g, '').replace(/<\\/?[^>]+(>|$)/g, \"\").trim();\n    },\n    extractImages(content) {\n      // 이미지 URL을 추출하는 로직\n      const images = [];\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(content, 'text/html');\n      const imgTags = doc.querySelectorAll('img');\n      imgTags.forEach(img => {\n        images.push(img.src);\n      });\n      return images;\n    },\n    async saveReview() {\n      try {\n        const response = await axios.put(`/api/reviews/update/${this.reviewId}`, {\n          reviewContent: this.reviewContent,\n          rating: this.rating\n        }, {\n          withCredentials: true\n        });\n        console.log('서버응답:', response), console.log('Review updated successfully');\n        this.isEditing = false;\n      } catch (error) {\n        console.error('Failed to update review:', error);\n      }\n    },\n    navigateToReviewList() {\n      this.$router.push('/reviewlist');\n    }\n  }\n};","map":{"version":3,"names":["axios","StarRating","mapState","RichTextEditor","components","data","reviewContent","rating","reviewId","isEditing","computed","orderNo","$route","query","orderDate","productId","productName","productImage","orderDetailNo","formattedOrderDate","options","month","day","hour","minute","formattedDate","Date","toLocaleDateString","replace","mounted","console","log","methods","extractText","content","trim","extractImages","images","parser","DOMParser","doc","parseFromString","imgTags","querySelectorAll","forEach","img","push","src","saveReview","response","put","withCredentials","error","navigateToReviewList","$router"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\ReviewDetail.vue"],"sourcesContent":["<template>\n  <div class=\"main-container\">\n    <h2 class=\"text-melon\">후기 상세보기</h2>\n    <div class=\"box-container\">\n    <!-- 제품정보 출력 -->\n    <div style=\"display: flex; padding: 20px;\">\n      <img :src=\"productImage\" alt=\"Product Image\" style=\"width: 100px;\">\n      <div style=\"text-align: left;\">\n        <p>\n          주문 번호: {{ orderNo }} <br>\n          제품명: {{ productName }} <br>\n          주문 날짜: {{ formattedOrderDate }} <br>\n        </p>\n      </div>\n    </div>\n\n    <!-- 이미지 -->\n    <div v-if=\"!isEditing\">\n      <div v-for=\"image in extractImages(reviewContent)\" :key=\"image\" style=\"display: inline-block; margin: 5px;\">\n        <img :src=\"image\" alt=\"Review Image\" style=\"width: 100px;\">\n      </div>\n    </div>\n\n    <!-- 별점 -->\n    <div style=\"text-align: center;\">\n      <star-rating v-model=\"rating\" :star-size=\"30\" :show-rating=\"false\" :disable-click=\"!isEditing\"></star-rating>\n    </div>\n\n    <!-- 내용 -->\n    <div v-if=\"isEditing\">\n      <RichTextEditor v-model=\"reviewContent\" />\n    </div>\n    <div v-else v-html=\"extractText(reviewContent)\"></div>\n    <div class=\"btn-container\">\n      <button v-if=\"!isEditing\" @click=\"isEditing = true\" class=\"btn btn-green\">수정</button>\n      <button v-else @click=\"saveReview\" class=\"btn btn-green\">저장</button>\n      <button @click=\"navigateToReviewList\" class=\"btn btn-gray\">목록으로</button>\n    </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from '../axios'\nimport StarRating from 'vue3-star-ratings';\nimport { mapState } from 'vuex';\nimport '../assets/styles.css';\nimport RichTextEditor from '@/components/RichTextEditor.vue';\n\nexport default {\n  components: {\n    'star-rating': StarRating,\n    RichTextEditor\n  },\n  data() {\n    return {\n      reviewContent: '',\n      rating: 0,\n      reviewId: null,\n      isEditing: false\n    };\n  },\n  computed: {\n    ...mapState('member', ['memberId']),\n    orderNo() {\n      return this.$route.query.orderNo;\n    },\n    orderDate() {\n      return this.$route.query.orderDate;\n    },\n    productId() {\n      return this.$route.query.productId;\n    },\n    productName() {\n      return this.$route.query.productName;\n    },\n    productImage() {\n      return this.$route.query.productImage;\n    },\n    orderDetailNo() {\n      return this.$route.query.orderDetailNo;\n    },\n    formattedOrderDate() {\n      const options = { month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n      const formattedDate = new Date(this.orderDate).toLocaleDateString('ko-KR', options).replace(/\\./g, '').replace(/\\s/g, '. ');\n      return `${formattedDate}. 주문`;\n    },\n  },\n  mounted() {\n    this.reviewId = this.$route.query.reviewId;\n    this.reviewContent = this.$route.query.reviewContent || '';\n    this.rating = this.$route.query.rating || 0;\n\n    console.log('Received query params:');\n    console.log('orderNo:', this.orderNo);\n    console.log('orderDate:', this.orderDate);\n    console.log('productId:', this.productId);\n    console.log('productName:', this.productName);\n    console.log('productImage:', this.productImage);\n    console.log('orderDetailNo:', this.orderDetailNo);\n  },\n  methods: {\n    extractText(content) {\n      // 텍스트만 추출\n      return content.replace(/<\\/?p>/g, '').replace(/<\\/?[^>]+(>|$)/g, \"\").trim();\n    },\n    extractImages(content) {\n      // 이미지 URL을 추출하는 로직\n      const images = [];\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(content, 'text/html');\n      const imgTags = doc.querySelectorAll('img');\n      imgTags.forEach(img => {\n        images.push(img.src);\n      });\n      return images;\n    },\n    async saveReview() {\n      try {\n        const response = await axios.put(`/api/reviews/update/${this.reviewId}`, {\n          reviewContent: this.reviewContent,\n          rating: this.rating\n        }, {\n          withCredentials: true\n        });\n        console.log('서버응답:', response),\n        console.log('Review updated successfully');\n        this.isEditing = false;\n      } catch (error) {\n        console.error('Failed to update review:', error);\n      }\n    },\n    navigateToReviewList() {\n      this.$router.push('/reviewlist');\n    }\n  }\n};\n</script>\n\n<style scoped>\n.box-container {\n  background: white;\n  padding: 30px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 20px;\n  text-align: left;\n}\n</style>\n"],"mappings":";AA2CA,OAAOA,KAAI,MAAO,UAAS;AAC3B,OAAOC,UAAS,MAAO,mBAAmB;AAC1C,SAASC,QAAO,QAAS,MAAM;AAC/B,OAAO,sBAAsB;AAC7B,OAAOC,cAAa,MAAO,iCAAiC;AAE5D,eAAe;EACbC,UAAU,EAAE;IACV,aAAa,EAAEH,UAAU;IACzBE;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,EAAE;MACjBC,MAAM,EAAE,CAAC;MACTC,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGR,QAAQ,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,CAAC;IACnCS,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,OAAO;IAClC,CAAC;IACDG,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,SAAS;IACpC,CAAC;IACDC,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACH,MAAM,CAACC,KAAK,CAACE,SAAS;IACpC,CAAC;IACDC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACJ,MAAM,CAACC,KAAK,CAACG,WAAW;IACtC,CAAC;IACDC,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACL,MAAM,CAACC,KAAK,CAACI,YAAY;IACvC,CAAC;IACDC,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACN,MAAM,CAACC,KAAK,CAACK,aAAa;IACxC,CAAC;IACDC,kBAAkBA,CAAA,EAAG;MACnB,MAAMC,OAAM,GAAI;QAAEC,KAAK,EAAE,SAAS;QAAEC,GAAG,EAAE,SAAS;QAAEC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAU,CAAC;MACxF,MAAMC,aAAY,GAAI,IAAIC,IAAI,CAAC,IAAI,CAACZ,SAAS,CAAC,CAACa,kBAAkB,CAAC,OAAO,EAAEP,OAAO,CAAC,CAACQ,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC;MAC3H,OAAO,GAAGH,aAAa,MAAM;IAC/B;EACF,CAAC;EACDI,OAAOA,CAAA,EAAG;IACR,IAAI,CAACrB,QAAO,GAAI,IAAI,CAACI,MAAM,CAACC,KAAK,CAACL,QAAQ;IAC1C,IAAI,CAACF,aAAY,GAAI,IAAI,CAACM,MAAM,CAACC,KAAK,CAACP,aAAY,IAAK,EAAE;IAC1D,IAAI,CAACC,MAAK,GAAI,IAAI,CAACK,MAAM,CAACC,KAAK,CAACN,MAAK,IAAK,CAAC;IAE3CuB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrCD,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,IAAI,CAACpB,OAAO,CAAC;IACrCmB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAACjB,SAAS,CAAC;IACzCgB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAChB,SAAS,CAAC;IACzCe,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,IAAI,CAACf,WAAW,CAAC;IAC7Cc,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,IAAI,CAACd,YAAY,CAAC;IAC/Ca,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACb,aAAa,CAAC;EACnD,CAAC;EACDc,OAAO,EAAE;IACPC,WAAWA,CAACC,OAAO,EAAE;MACnB;MACA,OAAOA,OAAO,CAACN,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAACO,IAAI,CAAC,CAAC;IAC7E,CAAC;IACDC,aAAaA,CAACF,OAAO,EAAE;MACrB;MACA,MAAMG,MAAK,GAAI,EAAE;MACjB,MAAMC,MAAK,GAAI,IAAIC,SAAS,CAAC,CAAC;MAC9B,MAAMC,GAAE,GAAIF,MAAM,CAACG,eAAe,CAACP,OAAO,EAAE,WAAW,CAAC;MACxD,MAAMQ,OAAM,GAAIF,GAAG,CAACG,gBAAgB,CAAC,KAAK,CAAC;MAC3CD,OAAO,CAACE,OAAO,CAACC,GAAE,IAAK;QACrBR,MAAM,CAACS,IAAI,CAACD,GAAG,CAACE,GAAG,CAAC;MACtB,CAAC,CAAC;MACF,OAAOV,MAAM;IACf,CAAC;IACD,MAAMW,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMjD,KAAK,CAACkD,GAAG,CAAC,uBAAuB,IAAI,CAAC1C,QAAQ,EAAE,EAAE;UACvEF,aAAa,EAAE,IAAI,CAACA,aAAa;UACjCC,MAAM,EAAE,IAAI,CAACA;QACf,CAAC,EAAE;UACD4C,eAAe,EAAE;QACnB,CAAC,CAAC;QACFrB,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEkB,QAAQ,CAAC,EAC9BnB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1C,IAAI,CAACtB,SAAQ,GAAI,KAAK;MACxB,EAAE,OAAO2C,KAAK,EAAE;QACdtB,OAAO,CAACsB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACDC,oBAAoBA,CAAA,EAAG;MACrB,IAAI,CAACC,OAAO,CAACR,IAAI,CAAC,aAAa,CAAC;IAClC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}