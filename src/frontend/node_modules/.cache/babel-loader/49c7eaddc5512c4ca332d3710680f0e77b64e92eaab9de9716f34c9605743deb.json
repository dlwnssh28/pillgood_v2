{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport RichTextEditor from '@/components/RichTextEditor.vue';\nimport { mapActions, mapGetters, mapState } from 'vuex';\nimport '../assets/styles.css';\nexport default {\n  components: {\n    RichTextEditor\n  },\n  data() {\n    return {\n      inquiry: {\n        inquiryTitle: '',\n        inquiryType: '',\n        inquiryContent: '',\n        inquiryDate: new Date().toISOString(),\n        inquiryStatus: '미답변'\n      },\n      contentError: false\n    };\n  },\n  computed: {\n    ...mapState({\n      memberUniqueId: state => state.member.memberId\n    }),\n    ...mapGetters('inquiry', ['allInquiries']),\n    inquiryList() {\n      console.log('inquiries 상태:', this.allInquiries);\n      return this.allInquiries;\n    }\n  },\n  methods: {\n    ...mapActions('inquiry', ['createInquiry', 'fetchInquiries']),\n    async submitInquiry() {\n      // 제출하기 전에 유효성 검사\n      if (!this.validateContent()) {\n        this.contentError = true;\n        return;\n      }\n      try {\n        this.inquiry.memberUniqueId = this.memberUniqueId;\n        console.log('문의 데이터:', this.inquiry);\n        await this.createInquiry(this.inquiry);\n        alert('문의가 작성되었습니다.');\n        this.$router.push('/myinquiries');\n      } catch (error) {\n        console.error('문의 등록 실패:', error);\n      }\n    },\n    validateContent() {\n      // HTML 태그를 제거하고 텍스트만 추출\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = this.inquiry.inquiryContent;\n      const textContent = tempDiv.textContent || tempDiv.innerText || \"\";\n\n      // 텍스트가 비어 있거나 공백만 있는 경우 유효성 검사 실패\n      if (!textContent.trim().length) {\n        this.contentError = true;\n        return false;\n      }\n\n      // 유효성 검사 통과\n      this.contentError = false;\n      return true;\n    },\n    goHome() {\n      this.$router.push('/');\n    }\n  }\n};","map":{"version":3,"names":["RichTextEditor","mapActions","mapGetters","mapState","components","data","inquiry","inquiryTitle","inquiryType","inquiryContent","inquiryDate","Date","toISOString","inquiryStatus","contentError","computed","memberUniqueId","state","member","memberId","inquiryList","console","log","allInquiries","methods","submitInquiry","validateContent","createInquiry","alert","$router","push","error","tempDiv","document","createElement","innerHTML","textContent","innerText","trim","length","goHome"],"sources":["C:\\Users\\woori\\IdeaProjects\\pillgood_v2\\src\\frontend\\src\\views\\InquiryCreate.vue"],"sourcesContent":["<template>\n    <div class=\"main-container\">\n      <div class=\"box-container\">\n        <h4 class=\"text-melon\">문의 작성</h4>\n        <form @submit.prevent=\"submitInquiry\">\n          <div>\n            <label for=\"title\">제목</label>\n            <input type=\"text\" v-model=\"inquiry.inquiryTitle\" id=\"title\" required>\n          </div>\n          <div>\n            <select v-model=\"inquiry.inquiryType\" id=\"type\" required>\n              <option value=\"상품\">상품</option>\n              <option value=\"배송\">배송</option>\n              <option value=\"주문\">주문</option>\n              <option value=\"반품\">반품</option>\n            </select>\n          </div>\n          <div style=\"margin-top: 5px;\">\n            <RichTextEditor v-model=\"inquiry.inquiryContent\" @input=\"validateContent\" />\n            <div v-if=\"contentError\" style=\"color: red;\">내용을 입력하세요.</div>\n          </div>\n          <div class=\"btn-container\">\n          <button type=\"submit\" class=\"btn btn-green\">문의 등록</button>\n          <button @click=\"goHome\" class=\"btn btn-gray\">나가기</button>\n          </div>\n        </form>\n      </div>\n    </div>\n</template>\n\n<script>\nimport RichTextEditor from '@/components/RichTextEditor.vue';\nimport { mapActions, mapGetters, mapState } from 'vuex';\nimport '../assets/styles.css';\n\nexport default {\n  components: { RichTextEditor },\n  data() {\n    return {\n      inquiry: {\n        inquiryTitle: '',\n        inquiryType: '',\n        inquiryContent: '',\n        inquiryDate: new Date().toISOString(),\n        inquiryStatus: '미답변'\n      },\n      contentError: false\n    };\n  },\n  computed: {\n    ...mapState({\n      memberUniqueId: state => state.member.memberId\n    }),\n    ...mapGetters('inquiry', ['allInquiries']),\n    inquiryList() {\n      console.log('inquiries 상태:', this.allInquiries);\n      return this.allInquiries;\n    }\n  },\n  methods: {\n    ...mapActions('inquiry', ['createInquiry', 'fetchInquiries']),\n    async submitInquiry() {\n      // 제출하기 전에 유효성 검사\n      if (!this.validateContent()) {\n        this.contentError = true;\n        return;\n      }\n      try {\n        this.inquiry.memberUniqueId = this.memberUniqueId;\n        console.log('문의 데이터:', this.inquiry);\n\n        await this.createInquiry(this.inquiry);\n        alert('문의가 작성되었습니다.');\n        this.$router.push('/myinquiries');\n      } catch (error) {\n        console.error('문의 등록 실패:', error);\n      }\n    },\n    validateContent() {\n      // HTML 태그를 제거하고 텍스트만 추출\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = this.inquiry.inquiryContent;\n      const textContent = tempDiv.textContent || tempDiv.innerText || \"\";\n\n      // 텍스트가 비어 있거나 공백만 있는 경우 유효성 검사 실패\n      if (!textContent.trim().length) {\n        this.contentError = true;\n        return false;\n      }\n\n      // 유효성 검사 통과\n      this.contentError = false;\n      return true;\n    },\n    goHome() {\n      this.$router.push('/');\n    },\n  }\n};\n</script>\n\n<style src=\"../assets/styles.css\"></style>\n"],"mappings":";AA+BA,OAAOA,cAAa,MAAO,iCAAiC;AAC5D,SAASC,UAAU,EAAEC,UAAU,EAAEC,QAAO,QAAS,MAAM;AACvD,OAAO,sBAAsB;AAE7B,eAAe;EACbC,UAAU,EAAE;IAAEJ;EAAe,CAAC;EAC9BK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;QACPC,YAAY,EAAE,EAAE;QAChBC,WAAW,EAAE,EAAE;QACfC,cAAc,EAAE,EAAE;QAClBC,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QACrCC,aAAa,EAAE;MACjB,CAAC;MACDC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGZ,QAAQ,CAAC;MACVa,cAAc,EAAEC,KAAI,IAAKA,KAAK,CAACC,MAAM,CAACC;IACxC,CAAC,CAAC;IACF,GAAGjB,UAAU,CAAC,SAAS,EAAE,CAAC,cAAc,CAAC,CAAC;IAC1CkB,WAAWA,CAAA,EAAG;MACZC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,IAAI,CAACC,YAAY,CAAC;MAC/C,OAAO,IAAI,CAACA,YAAY;IAC1B;EACF,CAAC;EACDC,OAAO,EAAE;IACP,GAAGvB,UAAU,CAAC,SAAS,EAAE,CAAC,eAAe,EAAE,gBAAgB,CAAC,CAAC;IAC7D,MAAMwB,aAAaA,CAAA,EAAG;MACpB;MACA,IAAI,CAAC,IAAI,CAACC,eAAe,CAAC,CAAC,EAAE;QAC3B,IAAI,CAACZ,YAAW,GAAI,IAAI;QACxB;MACF;MACA,IAAI;QACF,IAAI,CAACR,OAAO,CAACU,cAAa,GAAI,IAAI,CAACA,cAAc;QACjDK,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAChB,OAAO,CAAC;QAEpC,MAAM,IAAI,CAACqB,aAAa,CAAC,IAAI,CAACrB,OAAO,CAAC;QACtCsB,KAAK,CAAC,cAAc,CAAC;QACrB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC;MACnC,EAAE,OAAOC,KAAK,EAAE;QACdV,OAAO,CAACU,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACnC;IACF,CAAC;IACDL,eAAeA,CAAA,EAAG;MAChB;MACA,MAAMM,OAAM,GAAIC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC7CF,OAAO,CAACG,SAAQ,GAAI,IAAI,CAAC7B,OAAO,CAACG,cAAc;MAC/C,MAAM2B,WAAU,GAAIJ,OAAO,CAACI,WAAU,IAAKJ,OAAO,CAACK,SAAQ,IAAK,EAAE;;MAElE;MACA,IAAI,CAACD,WAAW,CAACE,IAAI,CAAC,CAAC,CAACC,MAAM,EAAE;QAC9B,IAAI,CAACzB,YAAW,GAAI,IAAI;QACxB,OAAO,KAAK;MACd;;MAEA;MACA,IAAI,CAACA,YAAW,GAAI,KAAK;MACzB,OAAO,IAAI;IACb,CAAC;IACD0B,MAAMA,CAAA,EAAG;MACP,IAAI,CAACX,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}